!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ALLONES	src/lua/src/lbitlib.c	22;"	d	file:
AUXMARK	src/lua/src/loadlib.c	622;"	d	file:
BlockCnt	src/lua/src/lparser.c	/^typedef struct BlockCnt {$/;"	s	file:
BlockCnt	src/lua/src/lparser.c	/^} BlockCnt;$/;"	t	typeref:struct:BlockCnt	file:
CAP_POSITION	src/lua/src/lstrlib.c	195;"	d	file:
CAP_UNFINISHED	src/lua/src/lstrlib.c	194;"	d	file:
CHANGE	lua_src/plugins/vhdl.lua	/^  function CHANGE(slv :std_logic_vector) return std_logic_vector is$/;"	f
CLIBS	src/lua/src/loadlib.c	96;"	d	file:
CallS	src/lua/src/lapi.c	/^struct CallS {  \/* data to `f_call' *\/$/;"	s	file:
Cfunc	src/lua/src/ltests.c	/^static int Cfunc (lua_State *L) {$/;"	f	file:
Cfunck	src/lua/src/ltests.c	/^static int Cfunck (lua_State *L) {$/;"	f	file:
Chook	src/lua/src/ltests.c	/^static void Chook (lua_State *L, lua_Debug *ar) {$/;"	f	file:
ConsControl	src/lua/src/lparser.c	/^struct ConsControl {$/;"	s	file:
DLMSG	src/lua/src/loadlib.c	226;"	d	file:
DumpBlock	src/lua/src/ldump.c	/^static void DumpBlock(const void* b, size_t size, DumpState* D)$/;"	f	file:
DumpChar	src/lua/src/ldump.c	/^static void DumpChar(int y, DumpState* D)$/;"	f	file:
DumpCode	src/lua/src/ldump.c	76;"	d	file:
DumpConstants	src/lua/src/ldump.c	/^static void DumpConstants(const Proto* f, DumpState* D)$/;"	f	file:
DumpDebug	src/lua/src/ldump.c	/^static void DumpDebug(const Proto* f, DumpState* D)$/;"	f	file:
DumpFunction	src/lua/src/ldump.c	/^static void DumpFunction(const Proto* f, DumpState* D)$/;"	f	file:
DumpHeader	src/lua/src/ldump.c	/^static void DumpHeader(DumpState* D)$/;"	f	file:
DumpInt	src/lua/src/ldump.c	/^static void DumpInt(int x, DumpState* D)$/;"	f	file:
DumpMem	src/lua/src/ldump.c	26;"	d	file:
DumpNumber	src/lua/src/ldump.c	/^static void DumpNumber(lua_Number x, DumpState* D)$/;"	f	file:
DumpState	src/lua/src/ldump.c	/^} DumpState;$/;"	t	typeref:struct:__anon1	file:
DumpString	src/lua/src/ldump.c	/^static void DumpString(const TString* s, DumpState* D)$/;"	f	file:
DumpUpvalues	src/lua/src/ldump.c	/^static void DumpUpvalues(const Proto* f, DumpState* D)$/;"	f	file:
DumpVar	src/lua/src/ldump.c	27;"	d	file:
DumpVector	src/lua/src/ldump.c	/^static void DumpVector(const void* b, int n, size_t size, DumpState* D)$/;"	f	file:
EOFMARK	src/lua/src/lua.c	246;"	d	file:
EQ	src/lua/src/ltests.c	1019;"	d	file:
ERRFUNC	src/lua/src/loadlib.c	103;"	d	file:
ERRLIB	src/lua/src/loadlib.c	102;"	d	file:
ERRORSTACKSIZE	src/lua/src/ldo.c	158;"	d	file:
FLAGS	src/lua/src/lstrlib.c	825;"	d	file:
FNAME	lua_src/plugins/lua.lua	/^function FNAME()$/;"	f
FORMAT	src/lua/src/lundump.c	237;"	d	file:
GCFINALIZENUM	src/lua/src/lgc.c	37;"	d	file:
GCSWEEPCOST	src/lua/src/lgc.c	31;"	d	file:
GCSWEEPMAX	src/lua/src/lgc.c	34;"	d	file:
GCTM	src/lua/src/lgc.c	/^static void GCTM (lua_State *L, int propagateerrors) {$/;"	f	file:
HOOKKEY	src/lua/src/ldblib.c	21;"	d	file:
Header	src/lua/src/ltests.c	/^typedef union Header {$/;"	u	file:
Header	src/lua/src/ltests.c	/^} Header;$/;"	t	typeref:union:Header	file:
IO_INPUT	src/lua/src/liolib.c	118;"	d	file:
IO_OUTPUT	src/lua/src/liolib.c	119;"	d	file:
IO_PREFIX	src/lua/src/liolib.c	117;"	d	file:
KBx	src/lua/src/lvm.c	497;"	d	file:
L	src/lua/src/ldump.c	/^ lua_State* L;$/;"	m	struct:__anon1	file:
L	src/lua/src/lstrlib.c	/^  lua_State *L;$/;"	m	struct:MatchState	file:
L	src/lua/src/lundump.c	/^ lua_State* L;$/;"	m	struct:__anon5	file:
LEVELS1	src/lua/src/lauxlib.c	34;"	d	file:
LEVELS2	src/lua/src/lauxlib.c	35;"	d	file:
LG	src/lua/src/lstate.c	/^typedef struct LG {$/;"	s	file:
LG	src/lua/src/lstate.c	/^} LG;$/;"	t	typeref:struct:LG	file:
LHS_assign	src/lua/src/lparser.c	/^struct LHS_assign {$/;"	s	file:
LIB_FAIL	src/lua/src/loadlib.c	222;"	d	file:
LIB_FAIL	src/lua/src/loadlib.c	223;"	d	file:
LIB_FAIL	src/lua/src/loadlib.c	98;"	d	file:
LL	src/lua/src/lobject.c	244;"	d	file:
LStream	src/lua/src/liolib.c	/^typedef luaL_Stream LStream;$/;"	t	file:
LUAI_GCMAJOR	src/lua/src/lstate.c	34;"	d	file:
LUAI_GCMUL	src/lua/src/lstate.c	38;"	d	file:
LUAI_GCPAUSE	src/lua/src/lstate.c	30;"	d	file:
LUAI_HASHLIMIT	src/lua/src/lstring.c	26;"	d	file:
LUAI_THROW	src/lua/src/ldo.c	53;"	d	file:
LUAI_THROW	src/lua/src/ldo.c	60;"	d	file:
LUAI_THROW	src/lua/src/ldo.c	66;"	d	file:
LUAI_TRY	src/lua/src/ldo.c	54;"	d	file:
LUAI_TRY	src/lua/src/ldo.c	61;"	d	file:
LUAI_TRY	src/lua/src/ldo.c	67;"	d	file:
LUA_CORE	src/lua/src/lapi.c	12;"	d	file:
LUA_CORE	src/lua/src/lcode.c	11;"	d	file:
LUA_CORE	src/lua/src/lctype.c	8;"	d	file:
LUA_CORE	src/lua/src/ldebug.c	14;"	d	file:
LUA_CORE	src/lua/src/ldo.c	13;"	d	file:
LUA_CORE	src/lua/src/ldump.c	10;"	d	file:
LUA_CORE	src/lua/src/lfunc.c	11;"	d	file:
LUA_CORE	src/lua/src/lgc.c	10;"	d	file:
LUA_CORE	src/lua/src/llex.c	12;"	d	file:
LUA_CORE	src/lua/src/lmem.c	11;"	d	file:
LUA_CORE	src/lua/src/lobject.c	13;"	d	file:
LUA_CORE	src/lua/src/lopcodes.c	9;"	d	file:
LUA_CORE	src/lua/src/lparser.c	11;"	d	file:
LUA_CORE	src/lua/src/lstate.c	12;"	d	file:
LUA_CORE	src/lua/src/lstring.c	11;"	d	file:
LUA_CORE	src/lua/src/ltable.c	24;"	d	file:
LUA_CORE	src/lua/src/ltests.c	14;"	d	file:
LUA_CORE	src/lua/src/ltm.c	11;"	d	file:
LUA_CORE	src/lua/src/lundump.c	10;"	d	file:
LUA_CORE	src/lua/src/lvm.c	13;"	d	file:
LUA_CORE	src/lua/src/lzio.c	11;"	d	file:
LUA_CPATH	src/lua/src/loadlib.c	42;"	d	file:
LUA_CPATHVERSION	src/lua/src/loadlib.c	48;"	d	file:
LUA_CSUBSEP	src/lua/src/loadlib.c	80;"	d	file:
LUA_EXEC_DIR	src/lua/src/loadlib.c	66;"	d	file:
LUA_FLTFRMLEN	src/lua/src/lstrlib.c	816;"	d	file:
LUA_FLTFRM_T	src/lua/src/lstrlib.c	817;"	d	file:
LUA_IGMARK	src/lua/src/loadlib.c	69;"	d	file:
LUA_INIT	src/lua/src/lua.c	37;"	d	file:
LUA_INITVERSION	src/lua/src/lua.c	40;"	d	file:
LUA_INTFRMLEN	src/lua/src/lstrlib.c	797;"	d	file:
LUA_INTFRMLEN	src/lua/src/lstrlib.c	802;"	d	file:
LUA_INTFRM_T	src/lua/src/lstrlib.c	798;"	d	file:
LUA_INTFRM_T	src/lua/src/lstrlib.c	803;"	d	file:
LUA_LIB	src/lua/src/lauxlib.c	20;"	d	file:
LUA_LIB	src/lua/src/lbaselib.c	15;"	d	file:
LUA_LIB	src/lua/src/lbitlib.c	8;"	d	file:
LUA_LIB	src/lua/src/lcorolib.c	12;"	d	file:
LUA_LIB	src/lua/src/ldblib.c	13;"	d	file:
LUA_LIB	src/lua/src/linit.c	17;"	d	file:
LUA_LIB	src/lua/src/liolib.c	24;"	d	file:
LUA_LIB	src/lua/src/lmathlib.c	12;"	d	file:
LUA_LIB	src/lua/src/loadlib.c	25;"	d	file:
LUA_LIB	src/lua/src/loslib.c	15;"	d	file:
LUA_LIB	src/lua/src/lstrlib.c	15;"	d	file:
LUA_LIB	src/lua/src/ltablib.c	12;"	d	file:
LUA_LLE_FLAGS	src/lua/src/loadlib.c	164;"	d	file:
LUA_LSUBSEP	src/lua/src/loadlib.c	84;"	d	file:
LUA_MAXCAPTURES	src/lua/src/lstrlib.c	28;"	d	file:
LUA_MAXINPUT	src/lua/src/lua.c	33;"	d	file:
LUA_NBITS	src/lua/src/lbitlib.c	18;"	d	file:
LUA_OFSEP	src/lua/src/loadlib.c	92;"	d	file:
LUA_PATH	src/lua/src/loadlib.c	38;"	d	file:
LUA_PATHSUFFIX	src/lua/src/loadlib.c	45;"	d	file:
LUA_PATHVERSION	src/lua/src/loadlib.c	47;"	d	file:
LUA_PATH_MARK	src/lua/src/loadlib.c	63;"	d	file:
LUA_PATH_SEP	src/lua/src/loadlib.c	60;"	d	file:
LUA_POF	src/lua/src/loadlib.c	89;"	d	file:
LUA_PROGNAME	src/lua/src/lua.c	29;"	d	file:
LUA_PROMPT	src/lua/src/lua.c	24;"	d	file:
LUA_PROMPT2	src/lua/src/lua.c	25;"	d	file:
LUA_STRFTIMEOPTIONS	src/lua/src/loslib.c	29;"	d	file:
LUA_STRFTIMEOPTIONS	src/lua/src/loslib.c	31;"	d	file:
LUA_TMPNAMBUFSIZE	src/lua/src/loslib.c	47;"	d	file:
LUA_TMPNAMBUFSIZE	src/lua/src/loslib.c	56;"	d	file:
LUED_SELEND	src/lued.c	32;"	d	file:
LUED_SELENDBLK	src/lued.c	33;"	d	file:
LUED_SELOFF	src/lued.c	31;"	d	file:
LUED_SELON	src/lued.c	34;"	d	file:
LUED_SELONBLK	src/lued.c	35;"	d	file:
LUED_SESSIONS	src/lued.c	/^carr_t* LUED_SESSIONS;$/;"	v
LX	src/lua/src/lstate.c	/^typedef struct LX {$/;"	s	file:
LX	src/lua/src/lstate.c	/^} LX;$/;"	t	typeref:struct:LX	file:
L_ESC	src/lua/src/lstrlib.c	222;"	d	file:
LoadBlock	src/lua/src/lundump.c	/^static void LoadBlock(LoadState* S, void* b, size_t size)$/;"	f	file:
LoadByte	src/lua/src/lundump.c	37;"	d	file:
LoadChar	src/lua/src/lundump.c	/^static int LoadChar(LoadState* S)$/;"	f	file:
LoadCode	src/lua/src/lundump.c	/^static void LoadCode(LoadState* S, Proto* f)$/;"	f	file:
LoadConstants	src/lua/src/lundump.c	/^static void LoadConstants(LoadState* S, Proto* f)$/;"	f	file:
LoadDebug	src/lua/src/lundump.c	/^static void LoadDebug(LoadState* S, Proto* f)$/;"	f	file:
LoadF	src/lua/src/lauxlib.c	/^typedef struct LoadF {$/;"	s	file:
LoadF	src/lua/src/lauxlib.c	/^} LoadF;$/;"	t	typeref:struct:LoadF	file:
LoadFunction	src/lua/src/lundump.c	/^static void LoadFunction(LoadState* S, Proto* f)$/;"	f	file:
LoadHeader	src/lua/src/lundump.c	/^static void LoadHeader(LoadState* S)$/;"	f	file:
LoadInt	src/lua/src/lundump.c	/^static int LoadInt(LoadState* S)$/;"	f	file:
LoadMem	src/lua/src/lundump.c	36;"	d	file:
LoadNumber	src/lua/src/lundump.c	/^static lua_Number LoadNumber(LoadState* S)$/;"	f	file:
LoadS	src/lua/src/lauxlib.c	/^typedef struct LoadS {$/;"	s	file:
LoadS	src/lua/src/lauxlib.c	/^} LoadS;$/;"	t	typeref:struct:LoadS	file:
LoadState	src/lua/src/lundump.c	/^} LoadState;$/;"	t	typeref:struct:__anon5	file:
LoadString	src/lua/src/lundump.c	/^static TString* LoadString(LoadState* S)$/;"	f	file:
LoadUpvalues	src/lua/src/lundump.c	/^static void LoadUpvalues(LoadState* S, Proto* f)$/;"	f	file:
LoadVar	src/lua/src/lundump.c	38;"	d	file:
LoadVector	src/lua/src/lundump.c	39;"	d	file:
MARK	src/lua/src/ltests.c	75;"	d	file:
MARKSIZE	src/lua/src/ltests.c	89;"	d	file:
MARKSIZE	src/lua/src/ltests.c	95;"	d	file:
MAXASIZE	src/lua/src/ltable.c	48;"	d	file:
MAXBITS	src/lua/src/ltable.c	43;"	d	file:
MAXBITS	src/lua/src/ltable.c	45;"	d	file:
MAXCCALLS	src/lua/src/lstrlib.c	218;"	d	file:
MAXSIZE	src/lua/src/lstrlib.c	106;"	d	file:
MAXTAGLOOP	src/lua/src/lvm.c	32;"	d	file:
MAXVARS	src/lua/src/lparser.c	32;"	d	file:
MAX_FORMAT	src/lua/src/lstrlib.c	830;"	d	file:
MAX_ITEM	src/lua/src/lstrlib.c	823;"	d	file:
MAX_SIZE_T	src/lua/src/liolib.c	393;"	d	file:
MEMERRMSG	src/lua/src/lstate.c	42;"	d	file:
MINSIZEARRAY	src/lua/src/lmem.c	43;"	d	file:
MYINT	src/lua/src/lundump.c	235;"	d	file:
MatchState	src/lua/src/lstrlib.c	/^typedef struct MatchState {$/;"	s	file:
MatchState	src/lua/src/lstrlib.c	/^} MatchState;$/;"	t	typeref:struct:MatchState	file:
N0	src/lua/src/lundump.c	185;"	d	file:
N1	src/lua/src/lundump.c	186;"	d	file:
N2	src/lua/src/lundump.c	187;"	d	file:
N3	src/lua/src/lundump.c	188;"	d	file:
NONVALIDVALUE	src/lua/src/lapi.c	38;"	d	file:
PAUSEADJ	src/lua/src/lgc.c	51;"	d	file:
PI	src/lua/src/lmathlib.c	20;"	d	file:
PI	src/lua/src/lmathlib.c	21;"	d	file:
POS	src/lua/src/lobject.c	248;"	d	file:
PRE	src/lua/src/lobject.c	247;"	d	file:
Protect	src/lua/src/lvm.c	511;"	d	file:
RA	src/lua/src/lvm.c	489;"	d	file:
RADIANS_PER_DEGREE	src/lua/src/lmathlib.c	22;"	d	file:
RB	src/lua/src/lvm.c	491;"	d	file:
RC	src/lua/src/lvm.c	492;"	d	file:
RESERVEDSLOT	src/lua/src/lbaselib.c	283;"	d	file:
RETS	src/lua/src/lobject.c	246;"	d	file:
RKB	src/lua/src/lvm.c	493;"	d	file:
RKC	src/lua/src/lvm.c	495;"	d	file:
SPACECHARS	src/lua/src/lbaselib.c	46;"	d	file:
SPECIALS	src/lua/src/lstrlib.c	223;"	d	file:
SParser	src/lua/src/ldo.c	/^struct SParser {  \/* data to `f_parser' *\/$/;"	s	file:
STEPMULADJ	src/lua/src/lgc.c	44;"	d	file:
STRLEN	src/lued.c	1785;"	d	file:
TESTGRAYBIT	src/lua/src/ltests.c	375;"	d	file:
UNARY_PRIORITY	src/lua/src/lparser.c	1030;"	d	file:
VERSION	src/lua/src/lundump.c	236;"	d	file:
Z	src/lua/src/lundump.c	/^ ZIO* Z;$/;"	m	struct:__anon5	file:
[CHANGE:0] change 	lua_src/plugins/verilog.lua	/^  function [CHANGE:0] change (input [7:0] a, b);$/;"	f
_FILE_OFFSET_BITS	src/lua/src/liolib.c	14;"	d	file:
_LARGEFILE_SOURCE	src/lua/src/liolib.c	13;"	d	file:
__index 	lua_src/lued.lua	/^    __index = function ( t, k )$/;"	f
a	src/lua/src/ltests.c	/^  L_Umaxalign a;  \/* ensures maximum alignment for Header *\/$/;"	m	union:Header	file:
add_s	src/lua/src/lstrlib.c	/^static void add_s (MatchState *ms, luaL_Buffer *b, const char *s,$/;"	f	file:
add_value	src/lua/src/lstrlib.c	/^static void add_value (MatchState *ms, luaL_Buffer *b, const char *s,$/;"	f	file:
addbuff	src/lua/src/lstate.c	85;"	d	file:
addfield	src/lua/src/ltablib.c	/^static void addfield (lua_State *L, luaL_Buffer *b, int i) {$/;"	f	file:
addinfo	src/lua/src/ldebug.c	/^static void addinfo (lua_State *L, const char *msg) {$/;"	f	file:
addk	src/lua/src/lcode.c	/^static int addk (FuncState *fs, TValue *key, TValue *v) {$/;"	f	file:
addlenmod	src/lua/src/lstrlib.c	/^static void addlenmod (char *form, const char *lenmod) {$/;"	f	file:
addprototype	src/lua/src/lparser.c	/^static Proto *addprototype (LexState *ls) {$/;"	f	file:
addquoted	src/lua/src/lstrlib.c	/^static void addquoted (lua_State *L, luaL_Buffer *b, int arg) {$/;"	f	file:
addstr	src/lua/src/lobject.c	250;"	d	file:
adjust_assign	src/lua/src/lparser.c	/^static void adjust_assign (LexState *ls, int nvars, int nexps, expdesc *e) {$/;"	f	file:
adjust_varargs	src/lua/src/ldo.c	/^static StkId adjust_varargs (lua_State *L, Proto *p, int actual) {$/;"	f	file:
adjustlocalvars	src/lua/src/lparser.c	/^static void adjustlocalvars (LexState *ls, int nvars) {$/;"	f	file:
all_hist	src/carr/src/carr_readline_lua.c	/^carr_t* all_hist = NULL;$/;"	v
alt_M_squote  	lua_src/bindings/nedit.lua	/^alt_M_squote  = function(name) goto_mark(name); lued.disp() end$/;"	f
alt_M_squote  	lua_src/bindings/nedit.lua	/^alt_M_squote  = function(name) set_mark(name); lued.disp() end$/;"	f
alt_OB        	lua_src/bindings/nedit.lua	/^alt_OB        = function() lued.set_page_offset_percent(0.99,0) end lued.hot("OB") -- align cursor to bottom$/;"	f
alt_OL        	lua_src/bindings/nedit.lua	/^alt_OL        = function() lued.set_page_offset_percent(0.75,0) end lued.hot("OL") -- align cursor to lower$/;"	f
alt_OM        	lua_src/bindings/nedit.lua	/^alt_OM        = function() lued.set_page_offset_percent(0.5,0) end  lued.hot("OM") -- align cursor to middle$/;"	f
alt_OT        	lua_src/bindings/nedit.lua	/^alt_OT        = function() lued.set_page_offset_percent(0.01,0) end lued.hot("OT") -- align cursor to top$/;"	f
alt_OU        	lua_src/bindings/nedit.lua	/^alt_OU        = function() lued.set_page_offset_percent(0.25,0) end lued.hot("OU") -- align cursor to upper$/;"	f
alt_SA        	lua_src/bindings/nedit.lua	/^alt_SA        = function() set_sel_start() sol() end$/;"	f
alt_SF        	lua_src/bindings/nedit.lua	/^alt_SF        = function() set_sel_start(); lued.var_end(1); set_sel_end(); lued.disp(); end lued.hot("SF")$/;"	f
alt_SG        	lua_src/bindings/nedit.lua	/^alt_SG        = function() set_sel_start(); eol(); set_sel_end(); end lued.hot("SG")$/;"	f
alt_Setcase   	lua_src/bindings/nedit.lua	/^alt_Setcase   = function() set_case_sensitive(0) end -- used for find\/search$/;"	f
alt__period_cas 	lua_src/bindings/nedit.lua	/^alt__period_cas = function() set_case_sensitive(0) end -- used for find\/search$/;"	f
alt_u         	lua_src/bindings/nedit.lua	/^alt_u         = function() lued.set_page_offset_percent(0.10,0) end   lued.hot("u")$/;"	f
anchor_token	src/lua/src/lparser.c	/^static void anchor_token (LexState *ls) {$/;"	f	file:
andaux	src/lua/src/lbitlib.c	/^static b_uint andaux (lua_State *L) {$/;"	f	file:
api_checkstackindex	src/lua/src/lapi.c	51;"	d	file:
api_checkvalidindex	src/lua/src/lapi.c	49;"	d	file:
arith_op	src/lua/src/lvm.c	520;"	d	file:
arrayindex	src/lua/src/ltable.c	/^static int arrayindex (const TValue *key) {$/;"	f	file:
arrlen	src/carr/src/carr.c	/^uint32_t arrlen(const void* arr, uint32_t elem_size, uint32_t size)$/;"	f
assignment	src/lua/src/lparser.c	/^static void assignment (LexState *ls, struct LHS_assign *lh, int nvars) {$/;"	f	file:
atomic	src/lua/src/lgc.c	/^static l_mem atomic (lua_State *L) {$/;"	f	file:
aux_close	src/lua/src/liolib.c	/^static int aux_close (lua_State *L) {$/;"	f	file:
aux_getn	src/lua/src/ltablib.c	20;"	d	file:
aux_lines	src/lua/src/liolib.c	/^static void aux_lines (lua_State *L, int toclose) {$/;"	f	file:
aux_upvalue	src/lua/src/lapi.c	/^static const char *aux_upvalue (StkId fi, int n, TValue **val,$/;"	f	file:
auxgetinfo	src/lua/src/ldebug.c	/^static int auxgetinfo (lua_State *L, const char *what, lua_Debug *ar,$/;"	f	file:
auxresume	src/lua/src/lcorolib.c	/^static int auxresume (lua_State *L, lua_State *co, int narg) {$/;"	f	file:
auxsort	src/lua/src/ltablib.c	/^static void auxsort (lua_State *L, int l, int u) {$/;"	f	file:
auxupvalue	src/lua/src/ldblib.c	/^static int auxupvalue (lua_State *L, int get) {$/;"	f	file:
b	src/lua/src/ldo.c	/^  luai_jmpbuf b;$/;"	m	struct:lua_longjmp	file:
b	src/lua/src/lundump.c	/^ Mbuffer* b;$/;"	m	struct:__anon5	file:
b_and	src/lua/src/lbitlib.c	/^static int b_and (lua_State *L) {$/;"	f	file:
b_arshift	src/lua/src/lbitlib.c	/^static int b_arshift (lua_State *L) {$/;"	f	file:
b_extract	src/lua/src/lbitlib.c	/^static int b_extract (lua_State *L) {$/;"	f	file:
b_lrot	src/lua/src/lbitlib.c	/^static int b_lrot (lua_State *L) {$/;"	f	file:
b_lshift	src/lua/src/lbitlib.c	/^static int b_lshift (lua_State *L) {$/;"	f	file:
b_not	src/lua/src/lbitlib.c	/^static int b_not (lua_State *L) {$/;"	f	file:
b_or	src/lua/src/lbitlib.c	/^static int b_or (lua_State *L) {$/;"	f	file:
b_replace	src/lua/src/lbitlib.c	/^static int b_replace (lua_State *L) {$/;"	f	file:
b_rot	src/lua/src/lbitlib.c	/^static int b_rot (lua_State *L, int i) {$/;"	f	file:
b_rrot	src/lua/src/lbitlib.c	/^static int b_rrot (lua_State *L) {$/;"	f	file:
b_rshift	src/lua/src/lbitlib.c	/^static int b_rshift (lua_State *L) {$/;"	f	file:
b_shift	src/lua/src/lbitlib.c	/^static int b_shift (lua_State *L, b_uint r, int i) {$/;"	f	file:
b_test	src/lua/src/lbitlib.c	/^static int b_test (lua_State *L) {$/;"	f	file:
b_uint	src/lua/src/lbitlib.c	/^typedef lua_Unsigned b_uint;$/;"	t	file:
b_xor	src/lua/src/lbitlib.c	/^static int b_xor (lua_State *L) {$/;"	f	file:
backspace	src/carr/src/carr_readline.c	/^static void backspace(carr_t* line, size_t n) {$/;"	f	file:
base_funcs	src/lua/src/lbaselib.c	/^static const luaL_Reg base_funcs[] = {$/;"	v	file:
bitlib	src/lua/src/lbitlib.c	/^static const luaL_Reg bitlib[] = {$/;"	v	file:
black2gray	src/lua/src/lgc.c	63;"	d	file:
block	src/lua/src/lparser.c	/^static void block (LexState *ls) {$/;"	f	file:
block_follow	src/lua/src/lparser.c	/^static int block_follow (LexState *ls, int withuntil) {$/;"	f	file:
body	src/lua/src/lparser.c	/^static void body (LexState *ls, expdesc *e, int ismethod, int line) {$/;"	f	file:
boolK	src/lua/src/lcode.c	/^static int boolK (FuncState *fs, int b) {$/;"	f	file:
bootstrap_gulpfile	lua_src/plugins/bootstrap.lua	/^function bootstrap_gulpfile()$/;"	f
breaklabel	src/lua/src/lparser.c	/^static void breaklabel (LexState *ls) {$/;"	f	file:
buff	src/lua/src/lauxlib.c	/^  char buff[LUAL_BUFFERSIZE];  \/* area for reading file *\/$/;"	m	struct:LoadF	file:
buff	src/lua/src/ldo.c	/^  Mbuffer buff;  \/* dynamic structure used by the scanner *\/$/;"	m	struct:SParser	file:
buff	src/lua/src/lstate.c	/^  char buff[LUAI_EXTRASPACE];$/;"	m	struct:LX	file:
buff2d	src/lua/src/llex.c	209;"	d	file:
buffonstack	src/lua/src/lauxlib.c	431;"	d	file:
buffreplace	src/lua/src/llex.c	/^static void buffreplace (LexState *ls, char from, char to) {$/;"	f	file:
buildop	src/lua/src/ltests.c	/^static char *buildop (Proto *p, int pc, char *buff) {$/;"	f	file:
callTM	src/lua/src/lvm.c	/^static void callTM (lua_State *L, const TValue *f, const TValue *p1,$/;"	f	file:
call_binTM	src/lua/src/lvm.c	/^static int call_binTM (lua_State *L, const TValue *p1, const TValue *p2,$/;"	f	file:
call_orderTM	src/lua/src/lvm.c	/^static int call_orderTM (lua_State *L, const TValue *p1, const TValue *p2,$/;"	f	file:
callallpendingfinalizers	src/lua/src/lgc.c	/^static void callallpendingfinalizers (lua_State *L, int propagateerrors) {$/;"	f	file:
callhook	src/lua/src/ldo.c	/^static void callhook (lua_State *L, CallInfo *ci) {$/;"	f	file:
capture	src/lua/src/lstrlib.c	/^  } capture[LUA_MAXCAPTURES];$/;"	m	struct:MatchState	typeref:struct:MatchState::__anon3	file:
capture_to_close	src/lua/src/lstrlib.c	/^static int capture_to_close (MatchState *ms) {$/;"	f	file:
carr_append	src/carr/src/carr.c	/^uint32_t carr_append(carr_t* dest, carr_t* src)$/;"	f
carr_arg	src/carr/src/carr_arg.c	/^const carr_t* carr_arg(int argc, char** argv, const char* options)$/;"	f
carr_clear	src/carr/src/carr.c	/^void carr_clear(carr_t* const ca, uint32_t const offset, uint32_t const len)$/;"	f
carr_copy	src/carr/src/carr.c	/^int carr_copy(void* dest, const void* const src, uint32_t const len, uint32_t const elem_size)$/;"	f
carr_count	src/carr/src/carr.c	/^uint32_t carr_count(carr_t* haystack, void* needles)$/;"	f
carr_del	src/carr/src/carr.c	/^void carr_del(carr_t* ca, uint32_t amount, uint32_t at)$/;"	f
carr_del2d	src/carr/src/carr.c	/^void carr_del2d(carr_t* carr_2d, uint32_t sr, uint32_t sc, uint32_t er, uint32_t ec) {$/;"	f
carr_deli	src/carr/src/carr.c	/^void carr_deli(carr_t* ca, uint32_t n)$/;"	f
carr_dup	src/carr/src/carr.c	/^carr_t* carr_dup(carr_t* dest, carr_t* src)$/;"	f
carr_filesize	src/carr/src/carr.c	/^uint32_t carr_filesize(const char* const filename)$/;"	f
carr_findi	src/carr/src/carr.c	/^int carr_findi(carr_t* const haystack, carr_t* const needles)$/;"	f
carr_firsti	src/carr/src/carr.c	/^void carr_firsti(carr_t* const ca)$/;"	f
carr_free	src/carr/src/carr.c	/^carr_t* carr_free(carr_t* ca)$/;"	f
carr_free2d	src/carr/src/carr.c	/^carr_t* carr_free2d(carr_t* ca)$/;"	f
carr_get	src/carr/src/carr.c	/^void* carr_get(const carr_t* const ca, uint32_t const i, void* element)$/;"	f
carr_get_first	src/carr/src/carr.c	/^void* carr_get_first(const carr_t* const ca, void* element)$/;"	f
carr_get_last	src/carr/src/carr.c	/^void* carr_get_last(const carr_t* const ca, void* element)$/;"	f
carr_get_previ	src/carr/src/carr.c	/^void* carr_get_previ(carr_t* ca, void* element)$/;"	f
carr_getarri	src/carr/src/carr.c	/^void* carr_getarri(const carr_t* const ca, void** element)$/;"	f
carr_geti	src/carr/src/carr.c	/^void* carr_geti(const carr_t* const ca, void* element)$/;"	f
carr_getsi	src/carr/src/carr.c	/^void* carr_getsi(const carr_t* const ca)$/;"	f
carr_i	src/carr/src/carr.c	/^uint32_t carr_i(carr_t* ca)$/;"	f
carr_import	src/carr/src/carr.c	/^int carr_import(carr_t* orig, const void* arr, uint32_t arr_len)$/;"	f
carr_init	src/carr/src/carr.c	/^carr_t* carr_init(uint32_t max_size, uint32_t elem_size, const void* init_arr, int32_t init_len)$/;"	f
carr_insert	src/carr/src/carr.c	/^void carr_insert(carr_t* const ca, const void* arr, uint32_t const len, uint32_t const at)$/;"	f
carr_insert2	src/carr/src/carr.c	/^void carr_insert2(carr_t* const ca, void** const arr, uint32_t const len, uint32_t const at)$/;"	f
carr_inserti	src/carr/src/carr.c	/^void carr_inserti(carr_t* const ca, const void* arr, uint32_t const len)$/;"	f
carr_io_readline	src/carr/src/carr_readline_lua.c	/^const carr_t* carr_io_readline(uint32_t hist_id, const char* prmt, $/;"	f
carr_is_eqi	src/carr/src/carr.c	/^int carr_is_eqi(const carr_t* const ca, const void* const elem)$/;"	f
carr_is_ini	src/carr/src/carr.c	/^int carr_is_ini(carr_t* haystack, void* elem)$/;"	f
carr_isfirsti	src/carr/src/carr.c	/^int carr_isfirsti(const carr_t* ca) {$/;"	f
carr_isleni	src/carr/src/carr.c	/^int carr_isleni(const carr_t* ca) {$/;"	f
carr_len	src/carr/src/carr.c	/^uint32_t carr_len(const carr_t* const carr)$/;"	f
carr_make_space	src/carr/src/carr.c	/^void carr_make_space(carr_t* const ca, uint32_t const amount, uint32_t const at)$/;"	f
carr_new	src/carr/src/carr.c	/^carr_t* carr_new(uint32_t max_size, uint32_t elem_size)$/;"	f
carr_nexti	src/carr/src/carr.c	/^void carr_nexti(carr_t* const ca)$/;"	f
carr_overwrite	src/carr/src/carr.c	/^void carr_overwrite(carr_t* const ca, const void* arr, uint32_t len, uint32_t at)$/;"	f
carr_pop	src/carr/src/carr.c	/^void carr_pop(carr_t* ca, void* value)$/;"	f
carr_previ	src/carr/src/carr.c	/^void carr_previ(carr_t* const ca)$/;"	f
carr_print	src/carr/src/carr.c	/^void carr_print(carr_t* ca)$/;"	f
carr_ptri	src/carr/src/carr.c	/^void* carr_ptri(const carr_t* const ca)$/;"	f
carr_push	src/carr/src/carr.c	/^void carr_push(carr_t* ca, const void* value)$/;"	f
carr_read	src/carr/src/carr.c	/^carr_t* carr_read(const char* const filename)$/;"	f
carr_read_lines	src/carr/src/carr.c	/^carr_t* carr_read_lines(const char* const filename)$/;"	f
carr_readline	src/carr/src/carr_readline.c	/^carr_t* carr_readline(const char* prompt, int repeat_previous, carr_t* history,$/;"	f
carr_readline_lua	src/carr/src/carr_readline_lua.c	/^int carr_readline_lua(char** line, const char* prmt) {$/;"	f
carr_readline_postprocessor	src/carr/src/carr_readline_lua.c	/^int carr_readline_postprocessor(carr_t* c_str, uint32_t max_leading_spaces) {$/;"	f
carr_resize	src/carr/src/carr.c	/^int carr_resize(carr_t* carr, const uint32_t new_size)$/;"	f
carr_resize_if_needed	src/carr/src/carr.c	/^int carr_resize_if_needed(carr_t* ca, uint32_t new_len)$/;"	f
carr_set	src/carr/src/carr.c	/^int carr_set(carr_t* ca, uint32_t i, const void* const value)$/;"	f
carr_set_it	src/carr/src/carr.c	/^void carr_set_it(carr_t* ca, uint32_t new_it)$/;"	f
carr_set_len	src/carr/src/carr.c	/^void carr_set_len(carr_t* ca, uint32_t new_len)$/;"	f
carr_seti	src/carr/src/carr.c	/^void carr_seti(carr_t* ca, void* value)$/;"	f
carr_slicei	src/carr/src/carr.c	/^carr_t* carr_slicei(carr_t* ca, uint32_t len)$/;"	f
carr_split	src/carr/src/carr.c	/^void carr_split(carr_t* const outs, carr_t* const in_arr, carr_t* const delims)$/;"	f
carr_to_end	src/carr/src/carr.c	/^uint32_t carr_to_end(carr_t* ca)$/;"	f
carr_too_big	src/carr/src/carr.c	/^int carr_too_big(const carr_t* const ca, uint32_t const new_size)$/;"	f
carr_validei	src/carr/src/carr.c	/^int carr_validei(const carr_t* const ca, void* elem)$/;"	f
carr_validi	src/carr/src/carr.c	/^int carr_validi(const carr_t* const ca)$/;"	f
carr_write2d	src/carr/src/carr.c	/^int carr_write2d(carr_t* ca, char* filename)$/;"	f
check	src/lua/src/lparser.c	/^static void check (LexState *ls, int c) {$/;"	f	file:
checkCclosure	src/lua/src/ltests.c	/^static void checkCclosure (global_State *g, CClosure *cl) {$/;"	f	file:
checkGC	src/lua/src/lvm.c	513;"	d	file:
checkLclosure	src/lua/src/ltests.c	/^static void checkLclosure (global_State *g, LClosure *cl) {$/;"	f	file:
checkSizes	src/lua/src/lgc.c	/^static void checkSizes (lua_State *L) {$/;"	f	file:
check_capture	src/lua/src/lstrlib.c	/^static int check_capture (MatchState *ms, int l) {$/;"	f	file:
check_condition	src/lua/src/lparser.c	122;"	d	file:
check_conflict	src/lua/src/lparser.c	/^static void check_conflict (LexState *ls, struct LHS_assign *lh, expdesc *v) {$/;"	f	file:
check_match	src/lua/src/lparser.c	/^static void check_match (LexState *ls, int what, int who, int where) {$/;"	f	file:
check_next	src/lua/src/llex.c	/^static int check_next (LexState *ls, const char *set) {$/;"	f	file:
checkconsistency	src/lua/src/lgc.c	71;"	d	file:
checkdeadkey	src/lua/src/lgc.c	68;"	d	file:
checkfinalmem	src/lua/src/ltests.c	/^static void checkfinalmem (void) {$/;"	f	file:
checkgraylist	src/lua/src/ltests.c	/^static void checkgraylist (GCObject *l) {$/;"	f	file:
checklimit	src/lua/src/lparser.c	/^static void checklimit (FuncState *fs, int v, int l, const char *what) {$/;"	f	file:
checkload	src/lua/src/loadlib.c	/^static int checkload (lua_State *L, int stat, const char *filename) {$/;"	f	file:
checkmode	src/lua/src/ldo.c	/^static void checkmode (lua_State *L, const char *mode, const char *x) {$/;"	f	file:
checkname	src/lua/src/lparser.c	/^static void checkname (LexState *ls, expdesc *e) {$/;"	f	file:
checknext	src/lua/src/lparser.c	/^static void checknext (LexState *ls, int c) {$/;"	f	file:
checkobject	src/lua/src/ltests.c	/^static void checkobject (global_State *g, GCObject *o, int maybedead) {$/;"	f	file:
checkobjref	src/lua/src/ltests.c	218;"	d	file:
checkold	src/lua/src/ltests.c	/^static void checkold (global_State *g, GCObject *o) {$/;"	f	file:
checkoption	src/lua/src/loslib.c	/^static const char *checkoption (lua_State *L, const char *conv, char *buff) {$/;"	f	file:
checkproto	src/lua/src/ltests.c	/^static void checkproto (global_State *g, Proto *f) {$/;"	f	file:
checkrepeated	src/lua/src/lparser.c	/^static void checkrepeated (FuncState *fs, Labellist *ll, TString *label) {$/;"	f	file:
checkresults	src/lua/src/lapi.c	875;"	d	file:
checkstack	src/lua/src/ldblib.c	/^static void checkstack (lua_State *L, lua_State *L1, int n) {$/;"	f	file:
checkstack	src/lua/src/ltests.c	/^static void checkstack (global_State *g, lua_State *L1) {$/;"	f	file:
checktable	src/lua/src/ltests.c	/^static void checktable (global_State *g, Table *h) {$/;"	f	file:
checkupval	src/lua/src/ldblib.c	/^static int checkupval (lua_State *L, int argf, int argnup) {$/;"	f	file:
checkvalref	src/lua/src/ltests.c	/^static void checkvalref (global_State *g, GCObject *f, const TValue *t) {$/;"	f	file:
classend	src/lua/src/lstrlib.c	/^static const char *classend (MatchState *ms, const char *p) {$/;"	f	file:
clearkeys	src/lua/src/lgc.c	/^static void clearkeys (global_State *g, GCObject *l, GCObject *f) {$/;"	f	file:
clearvalues	src/lua/src/lgc.c	/^static void clearvalues (global_State *g, GCObject *l, GCObject *f) {$/;"	f	file:
close_func	src/lua/src/lparser.c	/^static void close_func (LexState *ls) {$/;"	f	file:
close_session	src/lued.c	/^static void close_session(carr_t* all_sessions) {$/;"	f	file:
close_state	src/lua/src/lstate.c	/^static void close_state (lua_State *L) {$/;"	f	file:
closegoto	src/lua/src/lparser.c	/^static void closegoto (LexState *ls, int g, Labeldesc *label) {$/;"	f	file:
closelistfield	src/lua/src/lparser.c	/^static void closelistfield (FuncState *fs, struct ConsControl *cc) {$/;"	f	file:
closestate	src/lua/src/ltests.c	/^static int closestate (lua_State *L) {$/;"	f	file:
clr_recenter_screen	lua_src/base/center_page.lua	/^function clr_recenter_screen(dd)$/;"	f
cmd_hist	src/carr/src/carr_readline_lua.c	/^carr_t* cmd_hist = NULL; \/\/ *******$/;"	v
co_funcs	src/lua/src/lcorolib.c	/^static const luaL_Reg co_funcs[] = {$/;"	v	file:
code_label	src/lua/src/lcode.c	/^static int code_label (FuncState *fs, int A, int b, int jump) {$/;"	f	file:
codearith	src/lua/src/lcode.c	/^static void codearith (FuncState *fs, OpCode op,$/;"	f	file:
codeclosure	src/lua/src/lparser.c	/^static void codeclosure (LexState *ls, expdesc *v) {$/;"	f	file:
codecomp	src/lua/src/lcode.c	/^static void codecomp (FuncState *fs, OpCode op, int cond, expdesc *e1,$/;"	f	file:
codeextraarg	src/lua/src/lcode.c	/^static int codeextraarg (FuncState *fs, int a) {$/;"	f	file:
codenot	src/lua/src/lcode.c	/^static void codenot (FuncState *fs, expdesc *e) {$/;"	f	file:
codestring	src/lua/src/lparser.c	/^static void codestring (LexState *ls, expdesc *e, TString *s) {$/;"	f	file:
collectargs	src/lua/src/lua.c	/^static int collectargs (char **argv, int *args) {$/;"	f	file:
collectvalidlines	src/lua/src/ldebug.c	/^static void collectvalidlines (lua_State *L, Closure *f) {$/;"	f	file:
computesizes	src/lua/src/ltable.c	/^static int computesizes (int nums[], int *narray) {$/;"	f	file:
cond	src/lua/src/lparser.c	/^static int cond (LexState *ls) {$/;"	f	file:
condjump	src/lua/src/lcode.c	/^static int condjump (FuncState *fs, OpCode op, int A, int B, int C) {$/;"	f	file:
constfolding	src/lua/src/lcode.c	/^static int constfolding (OpCode op, expdesc *e1, expdesc *e2) {$/;"	f	file:
constructor	src/lua/src/lparser.c	/^static void constructor (LexState *ls, expdesc *t) {$/;"	f	file:
convergeephemerons	src/lua/src/lgc.c	/^static void convergeephemerons (global_State *g) {$/;"	f	file:
coresume	src/lua/src/ltests.c	/^static int coresume (lua_State *L) {$/;"	f	file:
correctstack	src/lua/src/ldo.c	/^static void correctstack (lua_State *L, TValue *oldstack) {$/;"	f	file:
count_char	src/lued.c	/^size_t count_char(const char* str, const int start, const int end) {$/;"	f
countint	src/lua/src/ltable.c	/^static int countint (const TValue *key, int *nums) {$/;"	f	file:
countlevels	src/lua/src/lauxlib.c	/^static int countlevels (lua_State *L) {$/;"	f	file:
createmeta	src/lua/src/liolib.c	/^static void createmeta (lua_State *L) {$/;"	f	file:
createmetatable	src/lua/src/lstrlib.c	/^static void createmetatable (lua_State *L) {$/;"	f	file:
createsearcherstable	src/lua/src/loadlib.c	/^static void createsearcherstable (lua_State *L) {$/;"	f	file:
createstdfile	src/lua/src/liolib.c	/^static void createstdfile (lua_State *L, FILE *f, const char *k,$/;"	f	file:
createstrobj	src/lua/src/lstring.c	/^static TString *createstrobj (lua_State *L, const char *str, size_t l,$/;"	f	file:
cstra_new	src/carr/src/carr.c	/^carr_t* cstra_new(uint32_t const max_size, const char* const init_str)$/;"	f
currIsNewline	src/lua/src/llex.c	32;"	d	file:
currentline	src/lua/src/ldebug.c	/^static int currentline (CallInfo *ci) {$/;"	f	file:
currentpc	src/lua/src/ldebug.c	/^static int currentpc (CallInfo *ci) {$/;"	f	file:
cursor_end	src/carr/src/carr_readline.c	/^static void cursor_end(carr_t* line) {$/;"	f	file:
cursor_home	src/carr/src/carr_readline.c	/^static void cursor_home(carr_t* line) {$/;"	f	file:
cursor_left	src/carr/src/carr_readline.c	/^static void cursor_left(carr_t* line, size_t n) {$/;"	f	file:
cursor_right	src/carr/src/carr_readline.c	/^static void cursor_right(carr_t* line, size_t n) {$/;"	f	file:
d	src/lua/src/ltests.c	/^  } d;$/;"	m	union:Header	typeref:struct:Header::__anon4	file:
d2s	src/lua/src/ltests.c	/^static int d2s (lua_State *L) {$/;"	f	file:
data	src/lua/src/ldump.c	/^ void* data;$/;"	m	struct:__anon1	file:
db_debug	src/lua/src/ldblib.c	/^static int db_debug (lua_State *L) {$/;"	f	file:
db_gethook	src/lua/src/ldblib.c	/^static int db_gethook (lua_State *L) {$/;"	f	file:
db_getinfo	src/lua/src/ldblib.c	/^static int db_getinfo (lua_State *L) {$/;"	f	file:
db_getlocal	src/lua/src/ldblib.c	/^static int db_getlocal (lua_State *L) {$/;"	f	file:
db_getmetatable	src/lua/src/ldblib.c	/^static int db_getmetatable (lua_State *L) {$/;"	f	file:
db_getregistry	src/lua/src/ldblib.c	/^static int db_getregistry (lua_State *L) {$/;"	f	file:
db_getupvalue	src/lua/src/ldblib.c	/^static int db_getupvalue (lua_State *L) {$/;"	f	file:
db_getuservalue	src/lua/src/ldblib.c	/^static int db_getuservalue (lua_State *L) {$/;"	f	file:
db_sethook	src/lua/src/ldblib.c	/^static int db_sethook (lua_State *L) {$/;"	f	file:
db_setlocal	src/lua/src/ldblib.c	/^static int db_setlocal (lua_State *L) {$/;"	f	file:
db_setmetatable	src/lua/src/ldblib.c	/^static int db_setmetatable (lua_State *L) {$/;"	f	file:
db_setupvalue	src/lua/src/ldblib.c	/^static int db_setupvalue (lua_State *L) {$/;"	f	file:
db_setuservalue	src/lua/src/ldblib.c	/^static int db_setuservalue (lua_State *L) {$/;"	f	file:
db_traceback	src/lua/src/ldblib.c	/^static int db_traceback (lua_State *L) {$/;"	f	file:
db_upvalueid	src/lua/src/ldblib.c	/^static int db_upvalueid (lua_State *L) {$/;"	f	file:
db_upvaluejoin	src/lua/src/ldblib.c	/^static int db_upvaluejoin (lua_State *L) {$/;"	f	file:
dblib	src/lua/src/ldblib.c	/^static const luaL_Reg dblib[] = {$/;"	v	file:
debug_realloc	src/lua/src/ltests.c	/^void *debug_realloc (void *ud, void *b, size_t oldsize, size_t size) {$/;"	f
delete_char	src/carr/src/carr_readline.c	/^static void delete_char(carr_t* line) {$/;"	f	file:
delete_selected	src/lued.c	/^static void delete_selected(carr_t* all_sessions) {$/;"	f	file:
delimits	src/lua/src/ltests.c	/^static const char *const delimits = " \\t\\n,;";$/;"	v	file:
dig_down	lua_src/plugins/ascii_art.lua	/^function dig_down(n,dd)$/;"	f
dig_left	lua_src/plugins/ascii_art.lua	/^function dig_left(n,dd)$/;"	f
dig_right	lua_src/plugins/ascii_art.lua	/^function dig_right(n,dd)$/;"	f
dig_up	lua_src/plugins/ascii_art.lua	/^function dig_up(n,dd)$/;"	f
discharge2anyreg	src/lua/src/lcode.c	/^static void discharge2anyreg (FuncState *fs, expdesc *e) {$/;"	f	file:
discharge2reg	src/lua/src/lcode.c	/^static void discharge2reg (FuncState *fs, expdesc *e, int reg) {$/;"	f	file:
dischargejpc	src/lua/src/lcode.c	/^static void dischargejpc (FuncState *fs) {$/;"	f	file:
docall	src/lua/src/lua.c	/^static int docall (lua_State *L, int narg, int nres) {$/;"	f	file:
dofile	src/lua/src/lua.c	/^static int dofile (lua_State *L, const char *name) {$/;"	f	file:
dofilecont	src/lua/src/lbaselib.c	/^static int dofilecont (lua_State *L) {$/;"	f	file:
dojump	src/lua/src/lvm.c	502;"	d	file:
dolibrary	src/lua/src/lua.c	/^static int dolibrary (lua_State *L, const char *name) {$/;"	f	file:
donextjump	src/lua/src/lvm.c	508;"	d	file:
doonnewstack	src/lua/src/ltests.c	/^static int doonnewstack (lua_State *L) {$/;"	f	file:
dooptions	src/lua/src/loadlib.c	/^static void dooptions (lua_State *L, int n) {$/;"	f	file:
doremote	src/lua/src/ltests.c	/^static int doremote (lua_State *L) {$/;"	f	file:
dostring	src/lua/src/lua.c	/^static int dostring (lua_State *L, const char *s, const char *name) {$/;"	f	file:
dothecall	src/lua/src/lgc.c	/^static void dothecall (lua_State *L, void *ud) {$/;"	f	file:
dotty	src/lua/src/lua.c	/^static void dotty (lua_State *L) {$/;"	f	file:
dummynode	src/lua/src/ltable.c	67;"	d	file:
dummynode_	src/lua/src/ltable.c	/^static const Node dummynode_ = {$/;"	v	file:
dyd	src/lua/src/ldo.c	/^  Dyndata dyd;  \/* dynamic structures used by the parser *\/$/;"	m	struct:SParser	file:
end_capture	src/lua/src/lstrlib.c	/^static const char *end_capture (MatchState *ms, const char *s,$/;"	f	file:
enterblock	src/lua/src/lparser.c	/^static void enterblock (FuncState *fs, BlockCnt *bl, lu_byte isloop) {$/;"	f	file:
enterlevel	src/lua/src/lparser.c	/^static void enterlevel (LexState *ls) {$/;"	f	file:
entersweep	src/lua/src/lgc.c	/^static int entersweep (lua_State *L) {$/;"	f	file:
errfile	src/lua/src/lauxlib.c	/^static int errfile (lua_State *L, const char *what, int fnameindex) {$/;"	f	file:
error	src/lua/src/lundump.c	/^static l_noret error(LoadState* S, const char* why)$/;"	f	file:
error_expected	src/lua/src/lparser.c	/^static l_noret error_expected (LexState *ls, int token) {$/;"	f	file:
errorlimit	src/lua/src/lparser.c	/^static l_noret errorlimit (FuncState *fs, int limit, const char *what) {$/;"	f	file:
esc_append	src/carr/src/carr_readline.c	/^static void esc_append(char* str, size_t* i, char c) {$/;"	f	file:
escerror	src/lua/src/llex.c	/^static void escerror (LexState *ls, int *c, int n, const char *msg) {$/;"	f	file:
exp1	src/lua/src/lparser.c	/^static int exp1 (LexState *ls) {$/;"	f	file:
exp2reg	src/lua/src/lcode.c	/^static void exp2reg (FuncState *fs, expdesc *e, int reg) {$/;"	f	file:
expand_path	lua_src/lued.lua	/^  function expand_path(filename)$/;"	f
explist	src/lua/src/lparser.c	/^static int explist (LexState *ls, expdesc *v) {$/;"	f	file:
expr	src/lua/src/lparser.c	/^static void expr (LexState *ls, expdesc *v) {$/;"	f	file:
exprstat	src/lua/src/lparser.c	/^static void exprstat (LexState *ls) {$/;"	f	file:
f	src/lua/src/lauxlib.c	/^  FILE *f;  \/* file being read *\/$/;"	m	struct:LoadF	file:
f_call	src/lua/src/lapi.c	/^static void f_call (lua_State *L, void *ud) {$/;"	f	file:
f_flush	src/lua/src/liolib.c	/^static int f_flush (lua_State *L) {$/;"	f	file:
f_gc	src/lua/src/liolib.c	/^static int f_gc (lua_State *L) {$/;"	f	file:
f_lines	src/lua/src/liolib.c	/^static int f_lines (lua_State *L) {$/;"	f	file:
f_luaopen	src/lua/src/lstate.c	/^static void f_luaopen (lua_State *L, void *ud) {$/;"	f	file:
f_parser	src/lua/src/ldo.c	/^static void f_parser (lua_State *L, void *ud) {$/;"	f	file:
f_read	src/lua/src/liolib.c	/^static int f_read (lua_State *L) {$/;"	f	file:
f_seek	src/lua/src/liolib.c	/^static int f_seek (lua_State *L) {$/;"	f	file:
f_setvbuf	src/lua/src/liolib.c	/^static int f_setvbuf (lua_State *L) {$/;"	f	file:
f_tostring	src/lua/src/liolib.c	/^static int f_tostring (lua_State *L) {$/;"	f	file:
f_write	src/lua/src/liolib.c	/^static int f_write (lua_State *L) {$/;"	f	file:
field	src/lua/src/lparser.c	/^static void field (LexState *ls, struct ConsControl *cc) {$/;"	f	file:
fieldargs	src/lua/src/lbitlib.c	/^static int fieldargs (lua_State *L, int farg, int *width) {$/;"	f	file:
fieldsel	src/lua/src/lparser.c	/^static void fieldsel (LexState *ls, expdesc *v) {$/;"	f	file:
file_exists	src/lued.c	/^int file_exists(const char* filename)$/;"	f
fill_screen	lua_src/plugins/ascii_art.lua	/^function fill_screen(ch,r,c)$/;"	f
fillmem	src/lua/src/ltests.c	90;"	d	file:
fillmem	src/lua/src/ltests.c	96;"	d	file:
filterpc	src/lua/src/ldebug.c	/^static int filterpc (int pc, int jmptarget) {$/;"	f	file:
finalreport	src/lua/src/lua.c	/^static void finalreport (lua_State *L, int status) {$/;"	f	file:
find_mark	src/lued.c	/^static int find_mark(const carr_t* mark_names, const char* name, uint32_t* mark_i) {$/;"	f	file:
find_script	src/lued.c	/^bool find_script (char* script_path, int maxlen) {$/;"	f
find_trailing_space	src/lued.c	/^static int find_trailing_space(carr_t* line, uint32_t* col) {$/;"	f	file:
findfield	src/lua/src/lauxlib.c	/^static int findfield (lua_State *L, int objidx, int level) {$/;"	f	file:
findfile	src/lua/src/loadlib.c	/^static const char *findfile (lua_State *L, const char *name,$/;"	f	file:
findgotos	src/lua/src/lparser.c	/^static void findgotos (LexState *ls, Labeldesc *lb) {$/;"	f	file:
findindex	src/lua/src/ltable.c	/^static int findindex (lua_State *L, Table *t, StkId key) {$/;"	f	file:
findlabel	src/lua/src/lparser.c	/^static int findlabel (LexState *ls, int g) {$/;"	f	file:
findloader	src/lua/src/loadlib.c	/^static void findloader (lua_State *L, const char *name) {$/;"	f	file:
findlocal	src/lua/src/ldebug.c	/^static const char *findlocal (lua_State *L, CallInfo *ci, int n,$/;"	f	file:
findpcall	src/lua/src/ldo.c	/^static CallInfo *findpcall (lua_State *L) {$/;"	f	file:
findsetreg	src/lua/src/ldebug.c	/^static int findsetreg (Proto *p, int lastpc, int reg) {$/;"	f	file:
findvararg	src/lua/src/ldebug.c	/^static const char *findvararg (CallInfo *ci, int n, StkId *pos) {$/;"	f	file:
finishCcall	src/lua/src/ldo.c	/^static void finishCcall (lua_State *L) {$/;"	f	file:
finishpcall	src/lua/src/lbaselib.c	/^static int finishpcall (lua_State *L, int status) {$/;"	f	file:
first_move	src/lued.c	/^int first_move = 1;$/;"	v
firstgoto	src/lua/src/lparser.c	/^  short firstgoto;  \/* index of first pending goto in this block *\/$/;"	m	struct:BlockCnt	file:
firstlabel	src/lua/src/lparser.c	/^  short firstlabel;  \/* index of first label in this block *\/$/;"	m	struct:BlockCnt	file:
fixjump	src/lua/src/lcode.c	/^static void fixjump (FuncState *fs, int pc, int dest) {$/;"	f	file:
flib	src/lua/src/liolib.c	/^static const luaL_Reg flib[] = {$/;"	v	file:
forbody	src/lua/src/lparser.c	/^static void forbody (LexState *ls, int base, int line, int nvars, int isnum) {$/;"	f	file:
forlist	src/lua/src/lparser.c	/^static void forlist (LexState *ls, TString *indexname) {$/;"	f	file:
format_lines	lua_src/bindings/create_doc.lua	/^function format_lines(line_array)$/;"	f
fornum	src/lua/src/lparser.c	/^static void fornum (LexState *ls, TString *varname, int line) {$/;"	f	file:
forstat	src/lua/src/lparser.c	/^static void forstat (LexState *ls, int line) {$/;"	f	file:
free_session	src/lued.c	/^static void free_session(lued_t* session_p) {$/;"	f	file:
freeblock	src/lua/src/ltests.c	/^static void freeblock (Memcontrol *mc, Header *block) {$/;"	f	file:
freeexp	src/lua/src/lcode.c	/^static void freeexp (FuncState *fs, expdesc *e) {$/;"	f	file:
freelist	src/lua/src/lauxlib.c	519;"	d	file:
freeobj	src/lua/src/lgc.c	/^static void freeobj (lua_State *L, GCObject *o) {$/;"	f	file:
freereg	src/lua/src/lcode.c	/^static void freereg (FuncState *fs, int reg) {$/;"	f	file:
freestack	src/lua/src/lstate.c	/^static void freestack (lua_State *L) {$/;"	f	file:
fromstate	src/lua/src/lstate.c	77;"	d	file:
func	src/lua/src/lapi.c	/^  StkId func;$/;"	m	struct:CallS	file:
funcargs	src/lua/src/lparser.c	/^static void funcargs (LexState *ls, expdesc *f, int line) {$/;"	f	file:
funcinfo	src/lua/src/ldebug.c	/^static void funcinfo (lua_Debug *ar, Closure *cl) {$/;"	f	file:
funcname	src/lua/src/lparser.c	/^static int funcname (LexState *ls, expdesc *v) {$/;"	f	file:
funcstat	src/lua/src/lparser.c	/^static void funcstat (LexState *ls, int line) {$/;"	f	file:
g	src/lua/src/lstate.c	/^  global_State g;$/;"	m	struct:LG	file:
g_iofile	src/lua/src/liolib.c	/^static int g_iofile (lua_State *L, const char *f, const char *mode) {$/;"	f	file:
g_read	src/lua/src/liolib.c	/^static int g_read (lua_State *L, FILE *f, int first) {$/;"	f	file:
g_write	src/lua/src/liolib.c	/^static int g_write (lua_State *L, FILE *f, int arg) {$/;"	f	file:
gc_state	src/lua/src/ltests.c	/^static int gc_state (lua_State *L) {$/;"	f	file:
gctm	src/lua/src/loadlib.c	/^static int gctm (lua_State *L) {$/;"	f	file:
generationalcollection	src/lua/src/lgc.c	/^static void generationalcollection (lua_State *L) {$/;"	f	file:
generic_reader	src/lua/src/lbaselib.c	/^static const char *generic_reader (lua_State *L, void *ud, size_t *size) {$/;"	f	file:
getF	src/lua/src/lauxlib.c	/^static const char *getF (lua_State *L, void *ud, size_t *size) {$/;"	f	file:
getS	src/lua/src/lauxlib.c	/^static const char *getS (lua_State *L, void *ud, size_t *size) {$/;"	f	file:
get_carr_line	src/lued.c	/^static carr_t* get_carr_line(carr_t* all_sessions) {$/;"	f	file:
get_char	src/lued.c	/^static char get_char(carr_t* all_sessions) {$/;"	f	file:
get_cmd_hist	src/carr/src/carr_readline_lua.c	/^carr_t* get_cmd_hist() {$/;"	f
get_cur_pos	src/lued.c	/^static void get_cur_pos(uint32_t* row, uint32_t* col) {$/;"	f	file:
get_cursor_position	src/lued.c	/^static int get_cursor_position(lued_t* l, uint32_t* r, uint32_t* c) {$/;"	f	file:
get_equalTM	src/lua/src/lvm.c	/^static const TValue *get_equalTM (lua_State *L, Table *mt1, Table *mt2,$/;"	f	file:
get_file_modified	src/lued.c	/^static time_t get_file_modified(const char* filename) {$/;"	f	file:
get_fileid	src/lued.c	/^static uint32_t get_fileid() {$/;"	f	file:
get_filename	src/lued.c	/^void get_filename(uint32_t id, char* filename, size_t n) {$/;"	f
get_gccolor	src/lua/src/ltests.c	/^static int get_gccolor (lua_State *L) {$/;"	f	file:
get_last_cmd	src/lued.c	/^static const char* get_last_cmd() {$/;"	f	file:
get_limits	src/lua/src/ltests.c	/^static int get_limits (lua_State *L) {$/;"	f	file:
get_line	src/lued.c	/^static const char* get_line(carr_t* all_sessions) {$/;"	f	file:
get_line_len	src/lued.c	/^static uint32_t get_line_len() {$/;"	f	file:
get_number_or_comma	src/carr/src/carr_readline_lua.c	/^static char *get_number_or_comma(char* str) {$/;"	f	file:
get_numchar	src/lued.c	/^uint32_t get_numchar(lued_t* session_p)$/;"	f
get_numlines	src/lued.c	/^int get_numlines(lued_t* l, uint32_t* numlines)$/;"	f
get_numsessions	src/lued.c	/^int get_numsessions(carr_t* all_sessions, uint32_t* numsessions)$/;"	f
get_page_pos	src/lued.c	/^static void get_page_pos(uint32_t* row, uint32_t* col) {$/;"	f	file:
get_page_position	src/lued.c	/^static int get_page_position(lued_t* l, uint32_t* r, uint32_t* c) {$/;"	f	file:
get_paste	src/lued.c	/^static const char* get_paste(carr_t* all_sessions) {$/;"	f	file:
get_prompt	src/lua/src/lua.c	/^static const char *get_prompt (lua_State *L, int firstline) {$/;"	f	file:
get_save_needed	src/lued.c	/^int get_save_needed(lued_t* session_p, bool* save_needed)$/;"	f
get_sel	src/lued.c	/^static int get_sel(lued_t* l, uint32_t* sel_st,$/;"	f	file:
get_session	src/lued.c	/^static lued_t* get_session(carr_t* all_sessions) {$/;"	f	file:
get_str	src/lued.c	/^static const char* get_str(carr_t* all_sessions, uint32_t sr, uint32_t sc, uint32_t er, uint32_t ec) {$/;"	f	file:
get_termsize	src/lued.c	/^static int get_termsize(size_t* row, size_t* col)$/;"	f	file:
get_text	src/lued.c	/^static carr_t* get_text(carr_t* all_sessions) {$/;"	f	file:
get_word	src/carr/src/carr_readline_lua.c	/^static char *get_word(char* str) {$/;"	f	file:
getargs	src/lua/src/lua.c	/^static int getargs (lua_State *L, char **argv, int n) {$/;"	f	file:
getbinopr	src/lua/src/lparser.c	/^static BinOpr getbinopr (int op) {$/;"	f	file:
getboolfield	src/lua/src/loslib.c	/^static int getboolfield (lua_State *L, const char *key) {$/;"	f	file:
getcached	src/lua/src/lvm.c	/^static Closure *getcached (Proto *p, UpVal **encup, StkId base) {$/;"	f	file:
getchar_raw	src/carr/src/carr_readline.c	/^char getchar_raw(char *ch)$/;"	f
getchar_until	src/carr/src/carr_readline.c	/^static void getchar_until(carr_t* dest, const char* match) {$/;"	f	file:
getfield	src/lua/src/loslib.c	/^static int getfield (lua_State *L, const char *key, int d) {$/;"	f	file:
getfreepos	src/lua/src/ltable.c	/^static Node *getfreepos (Table *t) {$/;"	f	file:
getfuncname	src/lua/src/ldebug.c	/^static const char *getfuncname (lua_State *L, CallInfo *ci, const char **name) {$/;"	f	file:
gethooktable	src/lua/src/ldblib.c	264;"	d	file:
getindex	src/lua/src/ltests.c	1023;"	d	file:
getindex_aux	src/lua/src/ltests.c	/^static int getindex_aux (lua_State *L, lua_State *L1, const char **pc) {$/;"	f	file:
getiofile	src/lua/src/liolib.c	/^static FILE *getiofile (lua_State *L, const char *findex) {$/;"	f	file:
getjump	src/lua/src/lcode.c	/^static int getjump (FuncState *fs, int pc) {$/;"	f	file:
getjumpcontrol	src/lua/src/lcode.c	/^static Instruction *getjumpcontrol (FuncState *fs, int pc) {$/;"	f	file:
getlocaledecpoint	src/lua/src/llex.c	205;"	d	file:
getlocvar	src/lua/src/lparser.c	/^static LocVar *getlocvar (FuncState *fs, int i) {$/;"	f	file:
getnum	src/lua/src/ltests.c	1021;"	d	file:
getnum_aux	src/lua/src/ltests.c	/^static int getnum_aux (lua_State *L, lua_State *L1, const char **pc) {$/;"	f	file:
getobjname	src/lua/src/ldebug.c	/^static const char *getobjname (Proto *p, int lastpc, int reg,$/;"	f	file:
getref	src/lua/src/ltests.c	/^static int getref (lua_State *L) {$/;"	f	file:
getstate	src/lua/src/ltests.c	/^static lua_State *getstate (lua_State *L) {$/;"	f	file:
getstring	src/lua/src/ltests.c	1022;"	d	file:
getstring_aux	src/lua/src/ltests.c	/^static const char *getstring_aux (lua_State *L, char *buff, const char **pc) {$/;"	f	file:
getthread	src/lua/src/ldblib.c	/^static lua_State *getthread (lua_State *L, int *arg) {$/;"	f	file:
getunopr	src/lua/src/lparser.c	/^static UnOpr getunopr (int op) {$/;"	f	file:
getupvalname	src/lua/src/ldebug.c	/^static const char *getupvalname (CallInfo *ci, const TValue *o,$/;"	f	file:
getupvalref	src/lua/src/lapi.c	/^static UpVal **getupvalref (lua_State *L, int fidx, int n, LClosure **pf) {$/;"	f	file:
globalL	src/lua/src/lua.c	/^static lua_State *globalL = NULL;$/;"	v	file:
gmatch	src/lua/src/lstrlib.c	/^static int gmatch (lua_State *L) {$/;"	f	file:
gmatch_aux	src/lua/src/lstrlib.c	/^static int gmatch_aux (lua_State *L) {$/;"	f	file:
gnodelast	src/lua/src/lgc.c	94;"	d	file:
goto_line	lua_src/core/os.lua	/^function goto_line(dd)$/;"	f
goto_mark	src/lued.c	/^static int goto_mark(carr_t* all_sessions, const char* name) {$/;"	f	file:
gotostat	src/lua/src/lparser.c	/^static void gotostat (LexState *ls, int pc) {$/;"	f	file:
growstack	src/lua/src/lapi.c	/^static void growstack (lua_State *L, void *ud) {$/;"	f	file:
handle_luainit	src/lua/src/lua.c	/^static int handle_luainit (lua_State *L) {$/;"	f	file:
handle_script	src/lua/src/lua.c	/^static int handle_script (lua_State *L, char **argv, int n) {$/;"	f	file:
has_E	src/lua/src/lua.c	354;"	d	file:
has_e	src/lua/src/lua.c	353;"	d	file:
has_i	src/lua/src/lua.c	351;"	d	file:
has_v	src/lua/src/lua.c	352;"	d	file:
hash_query	src/lua/src/ltests.c	/^static int hash_query (lua_State *L) {$/;"	f	file:
hashboolean	src/lua/src/ltable.c	54;"	d	file:
hashmod	src/lua/src/ltable.c	61;"	d	file:
hashnum	src/lua/src/ltable.c	/^static Node *hashnum (const Table *t, lua_Number n) {$/;"	f	file:
hashpointer	src/lua/src/ltable.c	64;"	d	file:
hashpow2	src/lua/src/ltable.c	51;"	d	file:
hashstr	src/lua/src/ltable.c	53;"	d	file:
hasjumps	src/lua/src/lcode.c	29;"	d	file:
hasmultret	src/lua/src/lparser.c	35;"	d	file:
hi	lua_src/plugins/ascii_art.lua	/^function hi()$/;"	f
history_next	src/carr/src/carr_readline.c	/^static void history_next(carr_t* history, carr_t* line) {$/;"	f	file:
history_prev	src/carr/src/carr_readline.c	/^static void history_prev(carr_t* history, carr_t* line) {$/;"	f	file:
hookf	src/lua/src/ldblib.c	/^static void hookf (lua_State *L, lua_Debug *ar) {$/;"	f	file:
hotkeys	src/carr/src/carr_readline_lua.c	/^char hotkeys[LUA_MAXINPUT] = "";$/;"	v
ifstat	src/lua/src/lparser.c	/^static void ifstat (LexState *ls, int line) {$/;"	f	file:
in_array	src/carr/src/carr.c	/^int in_array(void* needle, void* haystack, uint32_t needle_size, uint32_t num_needles)$/;"	f
inclinenumber	src/lua/src/llex.c	/^static void inclinenumber (LexState *ls) {$/;"	f	file:
incomplete	src/lua/src/lua.c	/^static int incomplete (lua_State *L, int status) {$/;"	f	file:
incstep	src/lua/src/lgc.c	/^static void incstep (lua_State *L) {$/;"	f	file:
index2addr	src/lua/src/lapi.c	/^static TValue *index2addr (lua_State *L, int idx) {$/;"	f	file:
init	src/lua/src/lstrlib.c	/^    const char *init;$/;"	m	struct:MatchState::__anon3	file:
init_exp	src/lua/src/lparser.c	/^static void init_exp (expdesc *e, expkind k, int i) {$/;"	f	file:
init_registry	src/lua/src/lstate.c	/^static void init_registry (lua_State *L, global_State *g) {$/;"	f	file:
ins_str	lua_src/core/insert.lua	/^function ins_str(str,dd)$/;"	f
insert_char	src/carr/src/carr_readline.c	/^static void insert_char(carr_t* line, char c) {$/;"	f	file:
insert_prefix	src/carr/src/carr_readline.c	/^static void insert_prefix(carr_t* line, char* str, uint32_t strlen) {$/;"	f	file:
insert_str	src/lued.c	/^static void insert_str(carr_t* all_sessions, const char* str, int enable_push_undo) {$/;"	f	file:
insert_string	src/carr/src/carr_readline.c	/^static void insert_string(carr_t* line, char* str, uint32_t max_len) {$/;"	f	file:
inspectstat	src/lua/src/lauxlib.c	234;"	d	file:
inspectstat	src/lua/src/lauxlib.c	240;"	d	file:
int2fb_aux	src/lua/src/ltests.c	/^static int int2fb_aux (lua_State *L) {$/;"	f	file:
internshrstr	src/lua/src/lstring.c	/^static TString *internshrstr (lua_State *L, const char *str, size_t l) {$/;"	f	file:
invertjump	src/lua/src/lcode.c	/^static void invertjump (FuncState *fs, expdesc *e) {$/;"	f	file:
io_close	src/lua/src/liolib.c	/^static int io_close (lua_State *L) {$/;"	f	file:
io_fclose	src/lua/src/liolib.c	/^static int io_fclose (lua_State *L) {$/;"	f	file:
io_flush	src/lua/src/liolib.c	/^static int io_flush (lua_State *L) {$/;"	f	file:
io_input	src/lua/src/liolib.c	/^static int io_input (lua_State *L) {$/;"	f	file:
io_lines	src/lua/src/liolib.c	/^static int io_lines (lua_State *L) {$/;"	f	file:
io_noclose	src/lua/src/liolib.c	/^static int io_noclose (lua_State *L) {$/;"	f	file:
io_open	src/lua/src/liolib.c	/^static int io_open (lua_State *L) {$/;"	f	file:
io_output	src/lua/src/liolib.c	/^static int io_output (lua_State *L) {$/;"	f	file:
io_pclose	src/lua/src/liolib.c	/^static int io_pclose (lua_State *L) {$/;"	f	file:
io_popen	src/lua/src/liolib.c	/^static int io_popen (lua_State *L) {$/;"	f	file:
io_read	src/lua/src/liolib.c	/^static int io_read (lua_State *L) {$/;"	f	file:
io_readline	src/lua/src/liolib.c	/^static int io_readline (lua_State *L) {$/;"	f	file:
io_tmpfile	src/lua/src/liolib.c	/^static int io_tmpfile (lua_State *L) {$/;"	f	file:
io_type	src/lua/src/liolib.c	/^static int io_type (lua_State *L) {$/;"	f	file:
io_write	src/lua/src/liolib.c	/^static int io_write (lua_State *L) {$/;"	f	file:
iolib	src/lua/src/liolib.c	/^static const luaL_Reg iolib[] = {$/;"	v	file:
ipairsaux	src/lua/src/lbaselib.c	/^static int ipairsaux (lua_State *L) {$/;"	f	file:
is_file_modified	src/lued.c	/^static int is_file_modified(lued_t* session_p, int use_save_mtime) {$/;"	f	file:
is_inlist	src/carr/src/carr_readline.c	/^static int is_inlist(const char* keylist, const carr_t* line) {$/;"	f	file:
is_inrange	src/carr/src/carr_readline_lua.c	/^static int is_inrange(char ch, char lower, char upper) {$/;"	f	file:
is_modified	src/lued.c	/^static int is_modified(carr_t* all_sessions, uint32_t session_id) {$/;"	f	file:
is_sel_end	src/lued.c	/^static int is_sel_end(carr_t* all_sessions) {$/;"	f	file:
is_sel_off	src/lued.c	/^static int is_sel_off(carr_t* all_sessions) {$/;"	f	file:
iscleared	src/lua/src/lgc.c	/^static int iscleared (global_State *g, const TValue *o) {$/;"	f	file:
isclosed	src/lua/src/liolib.c	127;"	d	file:
isdummy	src/lua/src/ltable.c	69;"	d	file:
isfinalized	src/lua/src/lgc.c	66;"	d	file:
isinstack	src/lua/src/ldebug.c	/^static int isinstack (CallInfo *ci, const TValue *o) {$/;"	f	file:
islocked	src/lua/src/ltests.c	/^int islocked = 0;$/;"	v
isloop	src/lua/src/lparser.c	/^  lu_byte isloop;  \/* true if `block' is a loop *\/$/;"	m	struct:BlockCnt	file:
isneg	src/lua/src/lobject.c	/^static int isneg (const char **s) {$/;"	f	file:
isnumeral	src/lua/src/lcode.c	/^static int isnumeral(expdesc *e) {$/;"	f	file:
ispseudo	src/lua/src/lapi.c	44;"	d	file:
isstackindex	src/lua/src/lapi.c	47;"	d	file:
isvalid	src/lua/src/lapi.c	41;"	d	file:
jumponcond	src/lua/src/lcode.c	/^static int jumponcond (FuncState *fs, expdesc *e, int cond) {$/;"	f	file:
just_a_number	src/carr/src/carr_readline_lua.c	/^static int just_a_number(carr_t* str) {$/;"	f	file:
kname	src/lua/src/ldebug.c	/^static void kname (Proto *p, int pc, int c, const char **name) {$/;"	f	file:
l	src/lua/src/lstate.c	/^  LX l;$/;"	m	struct:LG	file:
l	src/lua/src/lstate.c	/^  lua_State l;$/;"	m	struct:LX	file:
l_Trick	src/lua/src/ltests.c	/^void *l_Trick = 0;$/;"	v
l_alloc	src/lua/src/lauxlib.c	/^static void *l_alloc (void *ud, void *ptr, size_t osize, size_t nsize) {$/;"	f	file:
l_fseek	src/lua/src/liolib.c	109;"	d	file:
l_fseek	src/lua/src/liolib.c	91;"	d	file:
l_fseek	src/lua/src/liolib.c	99;"	d	file:
l_ftell	src/lua/src/liolib.c	100;"	d	file:
l_ftell	src/lua/src/liolib.c	110;"	d	file:
l_ftell	src/lua/src/liolib.c	92;"	d	file:
l_gmtime	src/lua/src/loslib.c	68;"	d	file:
l_gmtime	src/lua/src/loslib.c	73;"	d	file:
l_localtime	src/lua/src/loslib.c	69;"	d	file:
l_localtime	src/lua/src/loslib.c	74;"	d	file:
l_memcontrol	src/lua/src/ltests.c	/^Memcontrol l_memcontrol =$/;"	v
l_message	src/lua/src/lua.c	/^static void l_message (const char *pname, const char *msg) {$/;"	f	file:
l_seeknum	src/lua/src/liolib.c	101;"	d	file:
l_seeknum	src/lua/src/liolib.c	111;"	d	file:
l_seeknum	src/lua/src/liolib.c	93;"	d	file:
l_strcmp	src/lua/src/lvm.c	/^static int l_strcmp (const TString *ls, const TString *rs) {$/;"	f	file:
labelstat	src/lua/src/lparser.c	/^static void labelstat (LexState *ls, TString *label, int line) {$/;"	f	file:
laction	src/lua/src/lua.c	/^static void laction (int i) {$/;"	f	file:
lapi_c	src/lua/src/lapi.c	11;"	d	file:
lastlistfield	src/lua/src/lparser.c	/^static void lastlistfield (FuncState *fs, struct ConsControl *cc) {$/;"	f	file:
lauxlib_c	src/lua/src/lauxlib.c	19;"	d	file:
lbaselib_c	src/lua/src/lbaselib.c	14;"	d	file:
lbitlib_c	src/lua/src/lbitlib.c	7;"	d	file:
lcode_c	src/lua/src/lcode.c	10;"	d	file:
lcorolib_c	src/lua/src/lcorolib.c	11;"	d	file:
lctype_c	src/lua/src/lctype.c	7;"	d	file:
ldblib_c	src/lua/src/ldblib.c	12;"	d	file:
ldebug_c	src/lua/src/ldebug.c	13;"	d	file:
ldo_c	src/lua/src/ldo.c	12;"	d	file:
ldump_c	src/lua/src/ldump.c	9;"	d	file:
leaveblock	src/lua/src/lparser.c	/^static void leaveblock (FuncState *fs) {$/;"	f	file:
leavelevel	src/lua/src/lparser.c	337;"	d	file:
left	src/lua/src/lparser.c	/^  lu_byte left;  \/* left priority for each binary operator *\/$/;"	m	struct:__anon2	file:
len	src/lua/src/lstrlib.c	/^    ptrdiff_t len;$/;"	m	struct:MatchState::__anon3	file:
level	src/lua/src/lstrlib.c	/^  int level;  \/* total number of captures (finished or unfinished) *\/$/;"	m	struct:MatchState	file:
lexerror	src/lua/src/llex.c	/^static l_noret lexerror (LexState *ls, const char *msg, int token) {$/;"	f	file:
lfunc_c	src/lua/src/lfunc.c	10;"	d	file:
lgc_c	src/lua/src/lgc.c	9;"	d	file:
libsize	src/lua/src/lauxlib.c	/^static int libsize (const luaL_Reg *l) {$/;"	f	file:
line 	lua_src/core/style.lua	/^  line = string.gsub (line, "[._%w]+", function (str) return lued.style_keyword(str) end )$/;"	f
line_starts_with	lua_src/bindings/create_doc.lua	/^function line_starts_with(line,str)$/;"	f
linit_c	src/lua/src/linit.c	16;"	d	file:
linktable	src/lua/src/lgc.c	100;"	d	file:
liolib_c	src/lua/src/liolib.c	23;"	d	file:
listcode	src/lua/src/ltests.c	/^static int listcode (lua_State *L) {$/;"	f	file:
listfield	src/lua/src/lparser.c	/^static void listfield (LexState *ls, struct ConsControl *cc) {$/;"	f	file:
listk	src/lua/src/ltests.c	/^static int listk (lua_State *L) {$/;"	f	file:
listlocals	src/lua/src/ltests.c	/^static int listlocals (lua_State *L) {$/;"	f	file:
ll_addtoclib	src/lua/src/loadlib.c	/^static void ll_addtoclib (lua_State *L, const char *path, void *plib) {$/;"	f	file:
ll_checkclib	src/lua/src/loadlib.c	/^static void *ll_checkclib (lua_State *L, const char *path) {$/;"	f	file:
ll_funcs	src/lua/src/loadlib.c	/^static const luaL_Reg ll_funcs[] = {$/;"	v	file:
ll_load	src/lua/src/loadlib.c	/^static void *ll_load (lua_State *L, const char *path, int seeglb) {$/;"	f	file:
ll_loadfunc	src/lua/src/loadlib.c	/^static int ll_loadfunc (lua_State *L, const char *path, const char *sym) {$/;"	f	file:
ll_loadlib	src/lua/src/loadlib.c	/^static int ll_loadlib (lua_State *L) {$/;"	f	file:
ll_module	src/lua/src/loadlib.c	/^static int ll_module (lua_State *L) {$/;"	f	file:
ll_require	src/lua/src/loadlib.c	/^static int ll_require (lua_State *L) {$/;"	f	file:
ll_searchpath	src/lua/src/loadlib.c	/^static int ll_searchpath (lua_State *L) {$/;"	f	file:
ll_seeall	src/lua/src/loadlib.c	/^static int ll_seeall (lua_State *L) {$/;"	f	file:
ll_sym	src/lua/src/loadlib.c	/^static lua_CFunction ll_sym (lua_State *L, void *lib, const char *sym) {$/;"	f	file:
ll_unloadlib	src/lua/src/loadlib.c	/^static void ll_unloadlib (void *lib) {$/;"	f	file:
llex	src/lua/src/llex.c	/^static int llex (LexState *ls, SemInfo *seminfo) {$/;"	f	file:
llex_c	src/lua/src/llex.c	11;"	d	file:
lmathlib_c	src/lua/src/lmathlib.c	11;"	d	file:
lmem_c	src/lua/src/lmem.c	10;"	d	file:
lmemfind	src/lua/src/lstrlib.c	/^static const char *lmemfind (const char *s1, size_t l1,$/;"	f	file:
load_aux	src/lua/src/lbaselib.c	/^static int load_aux (lua_State *L, int status, int envidx) {$/;"	f	file:
loadedlibs	src/lua/src/linit.c	/^static const luaL_Reg loadedlibs[] = {$/;"	v	file:
loadfunc	src/lua/src/loadlib.c	/^static int loadfunc (lua_State *L, const char *filename, const char *modname) {$/;"	f	file:
loadlib	src/lua/src/ltests.c	/^static int loadlib (lua_State *L) {$/;"	f	file:
loadlib_c	src/lua/src/loadlib.c	24;"	d	file:
loadline	src/lua/src/lua.c	/^static int loadline (lua_State *L) {$/;"	f	file:
lobject_c	src/lua/src/lobject.c	12;"	d	file:
localfunc	src/lua/src/lparser.c	/^static void localfunc (LexState *ls) {$/;"	f	file:
localstat	src/lua/src/lparser.c	/^static void localstat (LexState *ls) {$/;"	f	file:
lopcodes_c	src/lua/src/lopcodes.c	8;"	d	file:
loslib_c	src/lua/src/loslib.c	14;"	d	file:
lparser_c	src/lua/src/lparser.c	10;"	d	file:
lstate_c	src/lua/src/lstate.c	11;"	d	file:
lstop	src/lua/src/lua.c	/^static void lstop (lua_State *L, lua_Debug *ar) {$/;"	f	file:
lstring_c	src/lua/src/lstring.c	10;"	d	file:
lstrlib_c	src/lua/src/lstrlib.c	14;"	d	file:
ltable_c	src/lua/src/ltable.c	23;"	d	file:
ltablib_c	src/lua/src/ltablib.c	11;"	d	file:
ltests_c	src/lua/src/ltests.c	13;"	d	file:
ltm_c	src/lua/src/ltm.c	10;"	d	file:
luaB_assert	src/lua/src/lbaselib.c	/^static int luaB_assert (lua_State *L) {$/;"	f	file:
luaB_auxwrap	src/lua/src/lcorolib.c	/^static int luaB_auxwrap (lua_State *L) {$/;"	f	file:
luaB_cocreate	src/lua/src/lcorolib.c	/^static int luaB_cocreate (lua_State *L) {$/;"	f	file:
luaB_collectgarbage	src/lua/src/lbaselib.c	/^static int luaB_collectgarbage (lua_State *L) {$/;"	f	file:
luaB_coresume	src/lua/src/lcorolib.c	/^static int luaB_coresume (lua_State *L) {$/;"	f	file:
luaB_corunning	src/lua/src/lcorolib.c	/^static int luaB_corunning (lua_State *L) {$/;"	f	file:
luaB_costatus	src/lua/src/lcorolib.c	/^static int luaB_costatus (lua_State *L) {$/;"	f	file:
luaB_cowrap	src/lua/src/lcorolib.c	/^static int luaB_cowrap (lua_State *L) {$/;"	f	file:
luaB_dofile	src/lua/src/lbaselib.c	/^static int luaB_dofile (lua_State *L) {$/;"	f	file:
luaB_error	src/lua/src/lbaselib.c	/^static int luaB_error (lua_State *L) {$/;"	f	file:
luaB_getmetatable	src/lua/src/lbaselib.c	/^static int luaB_getmetatable (lua_State *L) {$/;"	f	file:
luaB_ipairs	src/lua/src/lbaselib.c	/^static int luaB_ipairs (lua_State *L) {$/;"	f	file:
luaB_load	src/lua/src/lbaselib.c	/^static int luaB_load (lua_State *L) {$/;"	f	file:
luaB_loadfile	src/lua/src/lbaselib.c	/^static int luaB_loadfile (lua_State *L) {$/;"	f	file:
luaB_next	src/lua/src/lbaselib.c	/^static int luaB_next (lua_State *L) {$/;"	f	file:
luaB_opentests	src/lua/src/ltests.c	/^int luaB_opentests (lua_State *L) {$/;"	f
luaB_pairs	src/lua/src/lbaselib.c	/^static int luaB_pairs (lua_State *L) {$/;"	f	file:
luaB_pcall	src/lua/src/lbaselib.c	/^static int luaB_pcall (lua_State *L) {$/;"	f	file:
luaB_print	src/lua/src/lbaselib.c	/^static int luaB_print (lua_State *L) {$/;"	f	file:
luaB_rawequal	src/lua/src/lbaselib.c	/^static int luaB_rawequal (lua_State *L) {$/;"	f	file:
luaB_rawget	src/lua/src/lbaselib.c	/^static int luaB_rawget (lua_State *L) {$/;"	f	file:
luaB_rawlen	src/lua/src/lbaselib.c	/^static int luaB_rawlen (lua_State *L) {$/;"	f	file:
luaB_rawset	src/lua/src/lbaselib.c	/^static int luaB_rawset (lua_State *L) {$/;"	f	file:
luaB_select	src/lua/src/lbaselib.c	/^static int luaB_select (lua_State *L) {$/;"	f	file:
luaB_setmetatable	src/lua/src/lbaselib.c	/^static int luaB_setmetatable (lua_State *L) {$/;"	f	file:
luaB_tonumber	src/lua/src/lbaselib.c	/^static int luaB_tonumber (lua_State *L) {$/;"	f	file:
luaB_tostring	src/lua/src/lbaselib.c	/^static int luaB_tostring (lua_State *L) {$/;"	f	file:
luaB_type	src/lua/src/lbaselib.c	/^static int luaB_type (lua_State *L) {$/;"	f	file:
luaB_xpcall	src/lua/src/lbaselib.c	/^static int luaB_xpcall (lua_State *L) {$/;"	f	file:
luaB_yield	src/lua/src/lcorolib.c	/^static int luaB_yield (lua_State *L) {$/;"	f	file:
luaC_barrier_	src/lua/src/lgc.c	/^void luaC_barrier_ (lua_State *L, GCObject *o, GCObject *v) {$/;"	f
luaC_barrierback_	src/lua/src/lgc.c	/^void luaC_barrierback_ (lua_State *L, GCObject *o) {$/;"	f
luaC_barrierproto_	src/lua/src/lgc.c	/^LUAI_FUNC void luaC_barrierproto_ (lua_State *L, Proto *p, Closure *c) {$/;"	f
luaC_changemode	src/lua/src/lgc.c	/^void luaC_changemode (lua_State *L, int mode) {$/;"	f
luaC_checkfinalizer	src/lua/src/lgc.c	/^void luaC_checkfinalizer (lua_State *L, GCObject *o, Table *mt) {$/;"	f
luaC_checkupvalcolor	src/lua/src/lgc.c	/^void luaC_checkupvalcolor (global_State *g, UpVal *uv) {$/;"	f
luaC_forcestep	src/lua/src/lgc.c	/^void luaC_forcestep (lua_State *L) {$/;"	f
luaC_freeallobjects	src/lua/src/lgc.c	/^void luaC_freeallobjects (lua_State *L) {$/;"	f
luaC_fullgc	src/lua/src/lgc.c	/^void luaC_fullgc (lua_State *L, int isemergency) {$/;"	f
luaC_newobj	src/lua/src/lgc.c	/^GCObject *luaC_newobj (lua_State *L, int tt, size_t sz, GCObject **list,$/;"	f
luaC_runtilstate	src/lua/src/lgc.c	/^void luaC_runtilstate (lua_State *L, int statesmask) {$/;"	f
luaC_step	src/lua/src/lgc.c	/^void luaC_step (lua_State *L) {$/;"	f
luaD_call	src/lua/src/ldo.c	/^void luaD_call (lua_State *L, StkId func, int nResults, int allowyield) {$/;"	f
luaD_growstack	src/lua/src/ldo.c	/^void luaD_growstack (lua_State *L, int n) {$/;"	f
luaD_hook	src/lua/src/ldo.c	/^void luaD_hook (lua_State *L, int event, int line) {$/;"	f
luaD_pcall	src/lua/src/ldo.c	/^int luaD_pcall (lua_State *L, Pfunc func, void *u,$/;"	f
luaD_poscall	src/lua/src/ldo.c	/^int luaD_poscall (lua_State *L, StkId firstResult) {$/;"	f
luaD_precall	src/lua/src/ldo.c	/^int luaD_precall (lua_State *L, StkId func, int nresults) {$/;"	f
luaD_protectedparser	src/lua/src/ldo.c	/^int luaD_protectedparser (lua_State *L, ZIO *z, const char *name,$/;"	f
luaD_rawrunprotected	src/lua/src/ldo.c	/^int luaD_rawrunprotected (lua_State *L, Pfunc f, void *ud) {$/;"	f
luaD_reallocstack	src/lua/src/ldo.c	/^void luaD_reallocstack (lua_State *L, int newsize) {$/;"	f
luaD_shrinkstack	src/lua/src/ldo.c	/^void luaD_shrinkstack (lua_State *L) {$/;"	f
luaD_throw	src/lua/src/ldo.c	/^l_noret luaD_throw (lua_State *L, int errcode) {$/;"	f
luaE_extendCI	src/lua/src/lstate.c	/^CallInfo *luaE_extendCI (lua_State *L) {$/;"	f
luaE_freeCI	src/lua/src/lstate.c	/^void luaE_freeCI (lua_State *L) {$/;"	f
luaE_freethread	src/lua/src/lstate.c	/^void luaE_freethread (lua_State *L, lua_State *L1) {$/;"	f
luaE_setdebt	src/lua/src/lstate.c	/^void luaE_setdebt (global_State *g, l_mem debt) {$/;"	f
luaF_close	src/lua/src/lfunc.c	/^void luaF_close (lua_State *L, StkId level) {$/;"	f
luaF_findupval	src/lua/src/lfunc.c	/^UpVal *luaF_findupval (lua_State *L, StkId level) {$/;"	f
luaF_freeproto	src/lua/src/lfunc.c	/^void luaF_freeproto (lua_State *L, Proto *f) {$/;"	f
luaF_freeupval	src/lua/src/lfunc.c	/^void luaF_freeupval (lua_State *L, UpVal *uv) {$/;"	f
luaF_getlocalname	src/lua/src/lfunc.c	/^const char *luaF_getlocalname (const Proto *f, int local_number, int pc) {$/;"	f
luaF_newCclosure	src/lua/src/lfunc.c	/^Closure *luaF_newCclosure (lua_State *L, int n) {$/;"	f
luaF_newLclosure	src/lua/src/lfunc.c	/^Closure *luaF_newLclosure (lua_State *L, int n) {$/;"	f
luaF_newproto	src/lua/src/lfunc.c	/^Proto *luaF_newproto (lua_State *L) {$/;"	f
luaF_newupval	src/lua/src/lfunc.c	/^UpVal *luaF_newupval (lua_State *L) {$/;"	f
luaG_aritherror	src/lua/src/ldebug.c	/^l_noret luaG_aritherror (lua_State *L, const TValue *p1, const TValue *p2) {$/;"	f
luaG_concaterror	src/lua/src/ldebug.c	/^l_noret luaG_concaterror (lua_State *L, StkId p1, StkId p2) {$/;"	f
luaG_errormsg	src/lua/src/ldebug.c	/^l_noret luaG_errormsg (lua_State *L) {$/;"	f
luaG_ordererror	src/lua/src/ldebug.c	/^l_noret luaG_ordererror (lua_State *L, const TValue *p1, const TValue *p2) {$/;"	f
luaG_runerror	src/lua/src/ldebug.c	/^l_noret luaG_runerror (lua_State *L, const char *fmt, ...) {$/;"	f
luaG_typeerror	src/lua/src/ldebug.c	/^l_noret luaG_typeerror (lua_State *L, const TValue *o, const char *op) {$/;"	f
luaH_free	src/lua/src/ltable.c	/^void luaH_free (lua_State *L, Table *t) {$/;"	f
luaH_get	src/lua/src/ltable.c	/^const TValue *luaH_get (Table *t, const TValue *key) {$/;"	f
luaH_getint	src/lua/src/ltable.c	/^const TValue *luaH_getint (Table *t, int key) {$/;"	f
luaH_getn	src/lua/src/ltable.c	/^int luaH_getn (Table *t) {$/;"	f
luaH_getstr	src/lua/src/ltable.c	/^const TValue *luaH_getstr (Table *t, TString *key) {$/;"	f
luaH_isdummy	src/lua/src/ltable.c	/^int luaH_isdummy (Node *n) { return isdummy(n); }$/;"	f
luaH_mainposition	src/lua/src/ltable.c	/^Node *luaH_mainposition (const Table *t, const TValue *key) {$/;"	f
luaH_new	src/lua/src/ltable.c	/^Table *luaH_new (lua_State *L) {$/;"	f
luaH_newkey	src/lua/src/ltable.c	/^TValue *luaH_newkey (lua_State *L, Table *t, const TValue *key) {$/;"	f
luaH_next	src/lua/src/ltable.c	/^int luaH_next (lua_State *L, Table *t, StkId key) {$/;"	f
luaH_resize	src/lua/src/ltable.c	/^void luaH_resize (lua_State *L, Table *t, int nasize, int nhsize) {$/;"	f
luaH_resizearray	src/lua/src/ltable.c	/^void luaH_resizearray (lua_State *L, Table *t, int nasize) {$/;"	f
luaH_set	src/lua/src/ltable.c	/^TValue *luaH_set (lua_State *L, Table *t, const TValue *key) {$/;"	f
luaH_setint	src/lua/src/ltable.c	/^void luaH_setint (lua_State *L, Table *t, int key, TValue *value) {$/;"	f
luaK_checkstack	src/lua/src/lcode.c	/^void luaK_checkstack (FuncState *fs, int n) {$/;"	f
luaK_code	src/lua/src/lcode.c	/^static int luaK_code (FuncState *fs, Instruction i) {$/;"	f	file:
luaK_codeABC	src/lua/src/lcode.c	/^int luaK_codeABC (FuncState *fs, OpCode o, int a, int b, int c) {$/;"	f
luaK_codeABx	src/lua/src/lcode.c	/^int luaK_codeABx (FuncState *fs, OpCode o, int a, unsigned int bc) {$/;"	f
luaK_codek	src/lua/src/lcode.c	/^int luaK_codek (FuncState *fs, int reg, int k) {$/;"	f
luaK_concat	src/lua/src/lcode.c	/^void luaK_concat (FuncState *fs, int *l1, int l2) {$/;"	f
luaK_dischargevars	src/lua/src/lcode.c	/^void luaK_dischargevars (FuncState *fs, expdesc *e) {$/;"	f
luaK_exp2RK	src/lua/src/lcode.c	/^int luaK_exp2RK (FuncState *fs, expdesc *e) {$/;"	f
luaK_exp2anyreg	src/lua/src/lcode.c	/^int luaK_exp2anyreg (FuncState *fs, expdesc *e) {$/;"	f
luaK_exp2anyregup	src/lua/src/lcode.c	/^void luaK_exp2anyregup (FuncState *fs, expdesc *e) {$/;"	f
luaK_exp2nextreg	src/lua/src/lcode.c	/^void luaK_exp2nextreg (FuncState *fs, expdesc *e) {$/;"	f
luaK_exp2val	src/lua/src/lcode.c	/^void luaK_exp2val (FuncState *fs, expdesc *e) {$/;"	f
luaK_fixline	src/lua/src/lcode.c	/^void luaK_fixline (FuncState *fs, int line) {$/;"	f
luaK_getlabel	src/lua/src/lcode.c	/^int luaK_getlabel (FuncState *fs) {$/;"	f
luaK_goiffalse	src/lua/src/lcode.c	/^void luaK_goiffalse (FuncState *fs, expdesc *e) {$/;"	f
luaK_goiftrue	src/lua/src/lcode.c	/^void luaK_goiftrue (FuncState *fs, expdesc *e) {$/;"	f
luaK_indexed	src/lua/src/lcode.c	/^void luaK_indexed (FuncState *fs, expdesc *t, expdesc *k) {$/;"	f
luaK_infix	src/lua/src/lcode.c	/^void luaK_infix (FuncState *fs, BinOpr op, expdesc *v) {$/;"	f
luaK_jump	src/lua/src/lcode.c	/^int luaK_jump (FuncState *fs) {$/;"	f
luaK_nil	src/lua/src/lcode.c	/^void luaK_nil (FuncState *fs, int from, int n) {$/;"	f
luaK_numberK	src/lua/src/lcode.c	/^int luaK_numberK (FuncState *fs, lua_Number r) {$/;"	f
luaK_patchclose	src/lua/src/lcode.c	/^LUAI_FUNC void luaK_patchclose (FuncState *fs, int list, int level) {$/;"	f
luaK_patchlist	src/lua/src/lcode.c	/^void luaK_patchlist (FuncState *fs, int list, int target) {$/;"	f
luaK_patchtohere	src/lua/src/lcode.c	/^void luaK_patchtohere (FuncState *fs, int list) {$/;"	f
luaK_posfix	src/lua/src/lcode.c	/^void luaK_posfix (FuncState *fs, BinOpr op,$/;"	f
luaK_prefix	src/lua/src/lcode.c	/^void luaK_prefix (FuncState *fs, UnOpr op, expdesc *e, int line) {$/;"	f
luaK_reserveregs	src/lua/src/lcode.c	/^void luaK_reserveregs (FuncState *fs, int n) {$/;"	f
luaK_ret	src/lua/src/lcode.c	/^void luaK_ret (FuncState *fs, int first, int nret) {$/;"	f
luaK_self	src/lua/src/lcode.c	/^void luaK_self (FuncState *fs, expdesc *e, expdesc *key) {$/;"	f
luaK_setlist	src/lua/src/lcode.c	/^void luaK_setlist (FuncState *fs, int base, int nelems, int tostore) {$/;"	f
luaK_setoneret	src/lua/src/lcode.c	/^void luaK_setoneret (FuncState *fs, expdesc *e) {$/;"	f
luaK_setreturns	src/lua/src/lcode.c	/^void luaK_setreturns (FuncState *fs, expdesc *e, int nresults) {$/;"	f
luaK_storevar	src/lua/src/lcode.c	/^void luaK_storevar (FuncState *fs, expdesc *var, expdesc *ex) {$/;"	f
luaK_stringK	src/lua/src/lcode.c	/^int luaK_stringK (FuncState *fs, TString *s) {$/;"	f
luaL_addlstring	src/lua/src/lauxlib.c	/^LUALIB_API void luaL_addlstring (luaL_Buffer *B, const char *s, size_t l) {$/;"	f
luaL_addstring	src/lua/src/lauxlib.c	/^LUALIB_API void luaL_addstring (luaL_Buffer *B, const char *s) {$/;"	f
luaL_addvalue	src/lua/src/lauxlib.c	/^LUALIB_API void luaL_addvalue (luaL_Buffer *B) {$/;"	f
luaL_argerror	src/lua/src/lauxlib.c	/^LUALIB_API int luaL_argerror (lua_State *L, int narg, const char *extramsg) {$/;"	f
luaL_buffinit	src/lua/src/lauxlib.c	/^LUALIB_API void luaL_buffinit (lua_State *L, luaL_Buffer *B) {$/;"	f
luaL_buffinitsize	src/lua/src/lauxlib.c	/^LUALIB_API char *luaL_buffinitsize (lua_State *L, luaL_Buffer *B, size_t sz) {$/;"	f
luaL_callmeta	src/lua/src/lauxlib.c	/^LUALIB_API int luaL_callmeta (lua_State *L, int obj, const char *event) {$/;"	f
luaL_checkany	src/lua/src/lauxlib.c	/^LUALIB_API void luaL_checkany (lua_State *L, int narg) {$/;"	f
luaL_checkinteger	src/lua/src/lauxlib.c	/^LUALIB_API lua_Integer luaL_checkinteger (lua_State *L, int narg) {$/;"	f
luaL_checklstring	src/lua/src/lauxlib.c	/^LUALIB_API const char *luaL_checklstring (lua_State *L, int narg, size_t *len) {$/;"	f
luaL_checknumber	src/lua/src/lauxlib.c	/^LUALIB_API lua_Number luaL_checknumber (lua_State *L, int narg) {$/;"	f
luaL_checkoption	src/lua/src/lauxlib.c	/^LUALIB_API int luaL_checkoption (lua_State *L, int narg, const char *def,$/;"	f
luaL_checkstack	src/lua/src/lauxlib.c	/^LUALIB_API void luaL_checkstack (lua_State *L, int space, const char *msg) {$/;"	f
luaL_checktype	src/lua/src/lauxlib.c	/^LUALIB_API void luaL_checktype (lua_State *L, int narg, int t) {$/;"	f
luaL_checkudata	src/lua/src/lauxlib.c	/^LUALIB_API void *luaL_checkudata (lua_State *L, int ud, const char *tname) {$/;"	f
luaL_checkunsigned	src/lua/src/lauxlib.c	/^LUALIB_API lua_Unsigned luaL_checkunsigned (lua_State *L, int narg) {$/;"	f
luaL_checkversion_	src/lua/src/lauxlib.c	/^LUALIB_API void luaL_checkversion_ (lua_State *L, lua_Number ver) {$/;"	f
luaL_error	src/lua/src/lauxlib.c	/^LUALIB_API int luaL_error (lua_State *L, const char *fmt, ...) {$/;"	f
luaL_execresult	src/lua/src/lauxlib.c	/^LUALIB_API int luaL_execresult (lua_State *L, int stat) {$/;"	f
luaL_fileresult	src/lua/src/lauxlib.c	/^LUALIB_API int luaL_fileresult (lua_State *L, int stat, const char *fname) {$/;"	f
luaL_findtable	src/lua/src/lauxlib.c	/^static const char *luaL_findtable (lua_State *L, int idx,$/;"	f	file:
luaL_getmetafield	src/lua/src/lauxlib.c	/^LUALIB_API int luaL_getmetafield (lua_State *L, int obj, const char *event) {$/;"	f
luaL_getsubtable	src/lua/src/lauxlib.c	/^LUALIB_API int luaL_getsubtable (lua_State *L, int idx, const char *fname) {$/;"	f
luaL_gsub	src/lua/src/lauxlib.c	/^LUALIB_API const char *luaL_gsub (lua_State *L, const char *s, const char *p,$/;"	f
luaL_len	src/lua/src/lauxlib.c	/^LUALIB_API int luaL_len (lua_State *L, int idx) {$/;"	f
luaL_loadbufferx	src/lua/src/lauxlib.c	/^LUALIB_API int luaL_loadbufferx (lua_State *L, const char *buff, size_t size,$/;"	f
luaL_loadfilex	src/lua/src/lauxlib.c	/^LUALIB_API int luaL_loadfilex (lua_State *L, const char *filename,$/;"	f
luaL_loadstring	src/lua/src/lauxlib.c	/^LUALIB_API int luaL_loadstring (lua_State *L, const char *s) {$/;"	f
luaL_newmetatable	src/lua/src/lauxlib.c	/^LUALIB_API int luaL_newmetatable (lua_State *L, const char *tname) {$/;"	f
luaL_newstate	src/lua/src/lauxlib.c	/^LUALIB_API lua_State *luaL_newstate (void) {$/;"	f
luaL_openlib	src/lua/src/lauxlib.c	/^LUALIB_API void luaL_openlib (lua_State *L, const char *libname,$/;"	f
luaL_openlibs	src/lua/src/linit.c	/^LUALIB_API void luaL_openlibs (lua_State *L) {$/;"	f
luaL_optinteger	src/lua/src/lauxlib.c	/^LUALIB_API lua_Integer luaL_optinteger (lua_State *L, int narg,$/;"	f
luaL_optlstring	src/lua/src/lauxlib.c	/^LUALIB_API const char *luaL_optlstring (lua_State *L, int narg,$/;"	f
luaL_optnumber	src/lua/src/lauxlib.c	/^LUALIB_API lua_Number luaL_optnumber (lua_State *L, int narg, lua_Number def) {$/;"	f
luaL_optunsigned	src/lua/src/lauxlib.c	/^LUALIB_API lua_Unsigned luaL_optunsigned (lua_State *L, int narg,$/;"	f
luaL_prepbuffsize	src/lua/src/lauxlib.c	/^LUALIB_API char *luaL_prepbuffsize (luaL_Buffer *B, size_t sz) {$/;"	f
luaL_pushmodule	src/lua/src/lauxlib.c	/^LUALIB_API void luaL_pushmodule (lua_State *L, const char *modname,$/;"	f
luaL_pushresult	src/lua/src/lauxlib.c	/^LUALIB_API void luaL_pushresult (luaL_Buffer *B) {$/;"	f
luaL_pushresultsize	src/lua/src/lauxlib.c	/^LUALIB_API void luaL_pushresultsize (luaL_Buffer *B, size_t sz) {$/;"	f
luaL_ref	src/lua/src/lauxlib.c	/^LUALIB_API int luaL_ref (lua_State *L, int t) {$/;"	f
luaL_requiref	src/lua/src/lauxlib.c	/^LUALIB_API void luaL_requiref (lua_State *L, const char *modname,$/;"	f
luaL_setfuncs	src/lua/src/lauxlib.c	/^LUALIB_API void luaL_setfuncs (lua_State *L, const luaL_Reg *l, int nup) {$/;"	f
luaL_setmetatable	src/lua/src/lauxlib.c	/^LUALIB_API void luaL_setmetatable (lua_State *L, const char *tname) {$/;"	f
luaL_testudata	src/lua/src/lauxlib.c	/^LUALIB_API void *luaL_testudata (lua_State *L, int ud, const char *tname) {$/;"	f
luaL_tolstring	src/lua/src/lauxlib.c	/^LUALIB_API const char *luaL_tolstring (lua_State *L, int idx, size_t *len) {$/;"	f
luaL_traceback	src/lua/src/lauxlib.c	/^LUALIB_API void luaL_traceback (lua_State *L, lua_State *L1,$/;"	f
luaL_unref	src/lua/src/lauxlib.c	/^LUALIB_API void luaL_unref (lua_State *L, int t, int ref) {$/;"	f
luaL_where	src/lua/src/lauxlib.c	/^LUALIB_API void luaL_where (lua_State *L, int level) {$/;"	f
luaM_growaux_	src/lua/src/lmem.c	/^void *luaM_growaux_ (lua_State *L, void *block, int *size, size_t size_elems,$/;"	f
luaM_realloc_	src/lua/src/lmem.c	/^void *luaM_realloc_ (lua_State *L, void *block, size_t osize, size_t nsize) {$/;"	f
luaM_toobig	src/lua/src/lmem.c	/^l_noret luaM_toobig (lua_State *L) {$/;"	f
luaO_arith	src/lua/src/lobject.c	/^lua_Number luaO_arith (int op, lua_Number v1, lua_Number v2) {$/;"	f
luaO_ceillog2	src/lua/src/lobject.c	/^int luaO_ceillog2 (unsigned int x) {$/;"	f
luaO_chunkid	src/lua/src/lobject.c	/^void luaO_chunkid (char *out, const char *source, size_t bufflen) {$/;"	f
luaO_fb2int	src/lua/src/lobject.c	/^int luaO_fb2int (int x) {$/;"	f
luaO_hexavalue	src/lua/src/lobject.c	/^int luaO_hexavalue (int c) {$/;"	f
luaO_int2fb	src/lua/src/lobject.c	/^int luaO_int2fb (unsigned int x) {$/;"	f
luaO_nilobject_	src/lua/src/lobject.c	/^LUAI_DDEF const TValue luaO_nilobject_ = {NILCONSTANT};$/;"	v
luaO_pushfstring	src/lua/src/lobject.c	/^const char *luaO_pushfstring (lua_State *L, const char *fmt, ...) {$/;"	f
luaO_pushvfstring	src/lua/src/lobject.c	/^const char *luaO_pushvfstring (lua_State *L, const char *fmt, va_list argp) {$/;"	f
luaO_str2d	src/lua/src/lobject.c	/^int luaO_str2d (const char *s, size_t len, lua_Number *result) {$/;"	f
luaP_opmodes	src/lua/src/lopcodes.c	/^LUAI_DDEF const lu_byte luaP_opmodes[NUM_OPCODES] = {$/;"	v
luaP_opnames	src/lua/src/lopcodes.c	/^LUAI_DDEF const char *const luaP_opnames[NUM_OPCODES+1] = {$/;"	v
luaS_eqlngstr	src/lua/src/lstring.c	/^int luaS_eqlngstr (TString *a, TString *b) {$/;"	f
luaS_eqstr	src/lua/src/lstring.c	/^int luaS_eqstr (TString *a, TString *b) {$/;"	f
luaS_hash	src/lua/src/lstring.c	/^unsigned int luaS_hash (const char *str, size_t l, unsigned int seed) {$/;"	f
luaS_new	src/lua/src/lstring.c	/^TString *luaS_new (lua_State *L, const char *str) {$/;"	f
luaS_newlstr	src/lua/src/lstring.c	/^TString *luaS_newlstr (lua_State *L, const char *str, size_t l) {$/;"	f
luaS_newudata	src/lua/src/lstring.c	/^Udata *luaS_newudata (lua_State *L, size_t s, Table *e) {$/;"	f
luaS_resize	src/lua/src/lstring.c	/^void luaS_resize (lua_State *L, int newsize) {$/;"	f
luaT_gettm	src/lua/src/ltm.c	/^const TValue *luaT_gettm (Table *events, TMS event, TString *ename) {$/;"	f
luaT_gettmbyobj	src/lua/src/ltm.c	/^const TValue *luaT_gettmbyobj (lua_State *L, const TValue *o, TMS event) {$/;"	f
luaT_init	src/lua/src/ltm.c	/^void luaT_init (lua_State *L) {$/;"	f
luaT_typenames_	src/lua/src/ltm.c	/^LUAI_DDEF const char *const luaT_typenames_[LUA_TOTALTAGS] = {$/;"	v
luaU_dump	src/lua/src/ldump.c	/^int luaU_dump (lua_State* L, const Proto* f, lua_Writer w, void* data, int strip)$/;"	f
luaU_header	src/lua/src/lundump.c	/^void luaU_header (lu_byte* h)$/;"	f
luaU_undump	src/lua/src/lundump.c	/^Closure* luaU_undump (lua_State* L, ZIO* Z, Mbuffer* buff, const char* name)$/;"	f
luaV_arith	src/lua/src/lvm.c	/^void luaV_arith (lua_State *L, StkId ra, const TValue *rb,$/;"	f
luaV_concat	src/lua/src/lvm.c	/^void luaV_concat (lua_State *L, int total) {$/;"	f
luaV_equalobj_	src/lua/src/lvm.c	/^int luaV_equalobj_ (lua_State *L, const TValue *t1, const TValue *t2) {$/;"	f
luaV_execute	src/lua/src/lvm.c	/^void luaV_execute (lua_State *L) {$/;"	f
luaV_finishOp	src/lua/src/lvm.c	/^void luaV_finishOp (lua_State *L) {$/;"	f
luaV_gettable	src/lua/src/lvm.c	/^void luaV_gettable (lua_State *L, const TValue *t, TValue *key, StkId val) {$/;"	f
luaV_lessequal	src/lua/src/lvm.c	/^int luaV_lessequal (lua_State *L, const TValue *l, const TValue *r) {$/;"	f
luaV_lessthan	src/lua/src/lvm.c	/^int luaV_lessthan (lua_State *L, const TValue *l, const TValue *r) {$/;"	f
luaV_objlen	src/lua/src/lvm.c	/^void luaV_objlen (lua_State *L, StkId ra, const TValue *rb) {$/;"	f
luaV_settable	src/lua/src/lvm.c	/^void luaV_settable (lua_State *L, const TValue *t, TValue *key, StkId val) {$/;"	f
luaV_tonumber	src/lua/src/lvm.c	/^const TValue *luaV_tonumber (const TValue *obj, TValue *n) {$/;"	f
luaV_tostring	src/lua/src/lvm.c	/^int luaV_tostring (lua_State *L, StkId obj) {$/;"	f
luaX_init	src/lua/src/llex.c	/^void luaX_init (lua_State *L) {$/;"	f
luaX_lookahead	src/lua/src/llex.c	/^int luaX_lookahead (LexState *ls) {$/;"	f
luaX_newstring	src/lua/src/llex.c	/^TString *luaX_newstring (LexState *ls, const char *str, size_t l) {$/;"	f
luaX_next	src/lua/src/llex.c	/^void luaX_next (LexState *ls) {$/;"	f
luaX_setinput	src/lua/src/llex.c	/^void luaX_setinput (lua_State *L, LexState *ls, ZIO *z, TString *source,$/;"	f
luaX_syntaxerror	src/lua/src/llex.c	/^l_noret luaX_syntaxerror (LexState *ls, const char *msg) {$/;"	f
luaX_token2str	src/lua/src/llex.c	/^const char *luaX_token2str (LexState *ls, int token) {$/;"	f
luaX_tokens	src/lua/src/llex.c	/^static const char *const luaX_tokens [] = {$/;"	v	file:
luaY_parser	src/lua/src/lparser.c	/^Closure *luaY_parser (lua_State *L, ZIO *z, Mbuffer *buff,$/;"	f
luaZ_fill	src/lua/src/lzio.c	/^int luaZ_fill (ZIO *z) {$/;"	f
luaZ_init	src/lua/src/lzio.c	/^void luaZ_init (lua_State *L, ZIO *z, lua_Reader reader, void *data) {$/;"	f
luaZ_openspace	src/lua/src/lzio.c	/^char *luaZ_openspace (lua_State *L, Mbuffer *buff, size_t n) {$/;"	f
luaZ_read	src/lua/src/lzio.c	/^size_t luaZ_read (ZIO *z, void *b, size_t n) {$/;"	f
lua_absindex	src/lua/src/lapi.c	/^LUA_API int lua_absindex (lua_State *L, int idx) {$/;"	f
lua_arith	src/lua/src/lapi.c	/^LUA_API void lua_arith (lua_State *L, int op) {$/;"	f
lua_atpanic	src/lua/src/lapi.c	/^LUA_API lua_CFunction lua_atpanic (lua_State *L, lua_CFunction panicf) {$/;"	f
lua_c	src/lua/src/lua.c	15;"	d	file:
lua_callk	src/lua/src/lapi.c	/^LUA_API void lua_callk (lua_State *L, int nargs, int nresults, int ctx,$/;"	f
lua_checkmemory	src/lua/src/ltests.c	/^int lua_checkmemory (lua_State *L) {$/;"	f
lua_checkmode	src/lua/src/liolib.c	39;"	d	file:
lua_checkpc	src/lua/src/ltests.c	/^static int lua_checkpc (pCallInfo ci) {$/;"	f	file:
lua_checkstack	src/lua/src/lapi.c	/^LUA_API int lua_checkstack (lua_State *L, int size) {$/;"	f
lua_close	src/lua/src/lstate.c	/^LUA_API void lua_close (lua_State *L) {$/;"	f
lua_close_session	src/lued.c	/^int lua_close_session(lua_State* L) {$/;"	f
lua_compare	src/lua/src/lapi.c	/^LUA_API int lua_compare (lua_State *L, int index1, int index2, int op) {$/;"	f
lua_concat	src/lua/src/lapi.c	/^LUA_API void lua_concat (lua_State *L, int n) {$/;"	f
lua_copy	src/lua/src/lapi.c	/^LUA_API void lua_copy (lua_State *L, int fromidx, int toidx) {$/;"	f
lua_createtable	src/lua/src/lapi.c	/^LUA_API void lua_createtable (lua_State *L, int narray, int nrec) {$/;"	f
lua_delete_selected	src/lued.c	/^static int lua_delete_selected(lua_State* L) {$/;"	f	file:
lua_dump	src/lua/src/lapi.c	/^LUA_API int lua_dump (lua_State *L, lua_Writer writer, void *data) {$/;"	f
lua_error	src/lua/src/lapi.c	/^LUA_API int lua_error (lua_State *L) {$/;"	f
lua_freeline	src/lua/src/lua.c	75;"	d	file:
lua_freeline	src/lua/src/lua.c	83;"	d	file:
lua_gc	src/lua/src/lapi.c	/^LUA_API int lua_gc (lua_State *L, int what, int data) {$/;"	f
lua_get_char	src/lued.c	/^static int lua_get_char(lua_State* L) {$/;"	f	file:
lua_get_cur_pos	src/lued.c	/^static int lua_get_cur_pos(lua_State* L)$/;"	f	file:
lua_get_fileid	src/lued.c	/^int lua_get_fileid(lua_State* L)$/;"	f
lua_get_filename	src/lued.c	/^int lua_get_filename(lua_State* L)$/;"	f
lua_get_hotkeys	src/carr/src/carr_readline_lua.c	/^int lua_get_hotkeys(lua_State *L) {$/;"	f
lua_get_last_cmd	src/lued.c	/^int lua_get_last_cmd(lua_State* L)$/;"	f
lua_get_line	src/lued.c	/^static int lua_get_line(lua_State* L) {$/;"	f	file:
lua_get_line_len	src/lued.c	/^static int lua_get_line_len(lua_State* L) {$/;"	f	file:
lua_get_lines	src/lued.c	/^int lua_get_lines(lua_State* L)$/;"	f
lua_get_non_repeatables	src/carr/src/carr_readline_lua.c	/^int lua_get_non_repeatables(lua_State *L) {$/;"	f
lua_get_numchar	src/lued.c	/^int lua_get_numchar(lua_State* L)$/;"	f
lua_get_numlines	src/lued.c	/^int lua_get_numlines(lua_State* L)$/;"	f
lua_get_numsessions	src/lued.c	/^int lua_get_numsessions(lua_State* L)$/;"	f
lua_get_page	src/lued.c	/^int lua_get_page(lua_State* L)$/;"	f
lua_get_page_pos	src/lued.c	/^static int lua_get_page_pos(lua_State* L)$/;"	f	file:
lua_get_paste	src/lued.c	/^int lua_get_paste(lua_State *L) {$/;"	f
lua_get_repeatables	src/carr/src/carr_readline_lua.c	/^int lua_get_repeatables(lua_State *L) {$/;"	f
lua_get_sel	src/lued.c	/^int lua_get_sel(lua_State* L) {$/;"	f
lua_get_str	src/lued.c	/^int lua_get_str(lua_State* L) {$/;"	f
lua_get_termsize	src/lued.c	/^int lua_get_termsize(lua_State* L)$/;"	f
lua_getallocf	src/lua/src/lapi.c	/^LUA_API lua_Alloc lua_getallocf (lua_State *L, void **ud) {$/;"	f
lua_getctx	src/lua/src/lapi.c	/^LUA_API int lua_getctx (lua_State *L, int *ctx) {$/;"	f
lua_getfield	src/lua/src/lapi.c	/^LUA_API void lua_getfield (lua_State *L, int idx, const char *k) {$/;"	f
lua_getglobal	src/lua/src/lapi.c	/^LUA_API void lua_getglobal (lua_State *L, const char *var) {$/;"	f
lua_gethook	src/lua/src/ldebug.c	/^LUA_API lua_Hook lua_gethook (lua_State *L) {$/;"	f
lua_gethookcount	src/lua/src/ldebug.c	/^LUA_API int lua_gethookcount (lua_State *L) {$/;"	f
lua_gethookmask	src/lua/src/ldebug.c	/^LUA_API int lua_gethookmask (lua_State *L) {$/;"	f
lua_getinfo	src/lua/src/ldebug.c	/^LUA_API int lua_getinfo (lua_State *L, const char *what, lua_Debug *ar) {$/;"	f
lua_getlocal	src/lua/src/ldebug.c	/^LUA_API const char *lua_getlocal (lua_State *L, const lua_Debug *ar, int n) {$/;"	f
lua_getmetatable	src/lua/src/lapi.c	/^LUA_API int lua_getmetatable (lua_State *L, int objindex) {$/;"	f
lua_getstack	src/lua/src/ldebug.c	/^LUA_API int lua_getstack (lua_State *L, int level, lua_Debug *ar) {$/;"	f
lua_gettable	src/lua/src/lapi.c	/^LUA_API void lua_gettable (lua_State *L, int idx) {$/;"	f
lua_gettop	src/lua/src/lapi.c	/^LUA_API int lua_gettop (lua_State *L) {$/;"	f
lua_getupvalue	src/lua/src/lapi.c	/^LUA_API const char *lua_getupvalue (lua_State *L, int funcindex, int n) {$/;"	f
lua_getuservalue	src/lua/src/lapi.c	/^LUA_API void lua_getuservalue (lua_State *L, int idx) {$/;"	f
lua_goto_mark	src/lued.c	/^int lua_goto_mark(lua_State* L) {$/;"	f
lua_ident	src/lua/src/lapi.c	/^const char lua_ident[] =$/;"	v
lua_insert	src/lua/src/lapi.c	/^LUA_API void lua_insert (lua_State *L, int idx) {$/;"	f
lua_insert_str	src/lued.c	/^static int lua_insert_str(lua_State* L) {$/;"	f	file:
lua_interpreter	src/lua/src/lua.c	/^int lua_interpreter (lua_State* L, int argc, char **argv) {$/;"	f
lua_io_read	src/carr/src/carr_readline_lua.c	/^int lua_io_read(lua_State *L) {$/;"	f
lua_is_file_modified	src/lued.c	/^int lua_is_file_modified(lua_State* L) {$/;"	f
lua_is_modified	src/lued.c	/^static int lua_is_modified(lua_State* L) {$/;"	f	file:
lua_is_sel_end	src/lued.c	/^int lua_is_sel_end(lua_State* L) {$/;"	f
lua_is_sel_off	src/lued.c	/^int lua_is_sel_off(lua_State* L) {$/;"	f
lua_iscfunction	src/lua/src/lapi.c	/^LUA_API int lua_iscfunction (lua_State *L, int idx) {$/;"	f
lua_isnumber	src/lua/src/lapi.c	/^LUA_API int lua_isnumber (lua_State *L, int idx) {$/;"	f
lua_isstring	src/lua/src/lapi.c	/^LUA_API int lua_isstring (lua_State *L, int idx) {$/;"	f
lua_isuserdata	src/lua/src/lapi.c	/^LUA_API int lua_isuserdata (lua_State *L, int idx) {$/;"	f
lua_len	src/lua/src/lapi.c	/^LUA_API void lua_len (lua_State *L, int idx) {$/;"	f
lua_load	src/lua/src/lapi.c	/^LUA_API int lua_load (lua_State *L, lua_Reader reader, void *data,$/;"	f
lua_longjmp	src/lua/src/ldo.c	/^struct lua_longjmp {$/;"	s	file:
lua_lued_open	src/lued.c	/^int lua_lued_open(lua_State* L)$/;"	f
lua_newstate	src/lua/src/lstate.c	/^LUA_API lua_State *lua_newstate (lua_Alloc f, void *ud) {$/;"	f
lua_newthread	src/lua/src/lstate.c	/^LUA_API lua_State *lua_newthread (lua_State *L) {$/;"	f
lua_newuserdata	src/lua/src/lapi.c	/^LUA_API void *lua_newuserdata (lua_State *L, size_t size) {$/;"	f
lua_next	src/lua/src/lapi.c	/^LUA_API int lua_next (lua_State *L, int idx) {$/;"	f
lua_pcallk	src/lua/src/lapi.c	/^LUA_API int lua_pcallk (lua_State *L, int nargs, int nresults, int errfunc,$/;"	f
lua_pclose	src/lua/src/liolib.c	59;"	d	file:
lua_pclose	src/lua/src/liolib.c	64;"	d	file:
lua_pclose	src/lua/src/liolib.c	71;"	d	file:
lua_popen	src/lua/src/liolib.c	58;"	d	file:
lua_popen	src/lua/src/liolib.c	63;"	d	file:
lua_popen	src/lua/src/liolib.c	69;"	d	file:
lua_pushboolean	src/lua/src/lapi.c	/^LUA_API void lua_pushboolean (lua_State *L, int b) {$/;"	f
lua_pushcclosure	src/lua/src/lapi.c	/^LUA_API void lua_pushcclosure (lua_State *L, lua_CFunction fn, int n) {$/;"	f
lua_pushfstring	src/lua/src/lapi.c	/^LUA_API const char *lua_pushfstring (lua_State *L, const char *fmt, ...) {$/;"	f
lua_pushinteger	src/lua/src/lapi.c	/^LUA_API void lua_pushinteger (lua_State *L, lua_Integer n) {$/;"	f
lua_pushlightuserdata	src/lua/src/lapi.c	/^LUA_API void lua_pushlightuserdata (lua_State *L, void *p) {$/;"	f
lua_pushlstring	src/lua/src/lapi.c	/^LUA_API const char *lua_pushlstring (lua_State *L, const char *s, size_t len) {$/;"	f
lua_pushnil	src/lua/src/lapi.c	/^LUA_API void lua_pushnil (lua_State *L) {$/;"	f
lua_pushnumber	src/lua/src/lapi.c	/^LUA_API void lua_pushnumber (lua_State *L, lua_Number n) {$/;"	f
lua_pushstring	src/lua/src/lapi.c	/^LUA_API const char *lua_pushstring (lua_State *L, const char *s) {$/;"	f
lua_pushthread	src/lua/src/lapi.c	/^LUA_API int lua_pushthread (lua_State *L) {$/;"	f
lua_pushunsigned	src/lua/src/lapi.c	/^LUA_API void lua_pushunsigned (lua_State *L, lua_Unsigned u) {$/;"	f
lua_pushvalue	src/lua/src/lapi.c	/^LUA_API void lua_pushvalue (lua_State *L, int idx) {$/;"	f
lua_pushvfstring	src/lua/src/lapi.c	/^LUA_API const char *lua_pushvfstring (lua_State *L, const char *fmt,$/;"	f
lua_rawequal	src/lua/src/lapi.c	/^LUA_API int lua_rawequal (lua_State *L, int index1, int index2) {$/;"	f
lua_rawget	src/lua/src/lapi.c	/^LUA_API void lua_rawget (lua_State *L, int idx) {$/;"	f
lua_rawgeti	src/lua/src/lapi.c	/^LUA_API void lua_rawgeti (lua_State *L, int idx, int n) {$/;"	f
lua_rawgetp	src/lua/src/lapi.c	/^LUA_API void lua_rawgetp (lua_State *L, int idx, const void *p) {$/;"	f
lua_rawlen	src/lua/src/lapi.c	/^LUA_API size_t lua_rawlen (lua_State *L, int idx) {$/;"	f
lua_rawset	src/lua/src/lapi.c	/^LUA_API void lua_rawset (lua_State *L, int idx) {$/;"	f
lua_rawseti	src/lua/src/lapi.c	/^LUA_API void lua_rawseti (lua_State *L, int idx, int n) {$/;"	f
lua_rawsetp	src/lua/src/lapi.c	/^LUA_API void lua_rawsetp (lua_State *L, int idx, const void *p) {$/;"	f
lua_readline	src/lua/src/lua.c	71;"	d	file:
lua_readline	src/lua/src/lua.c	79;"	d	file:
lua_redo	src/lued.c	/^int lua_redo(lua_State* L) {$/;"	f
lua_remove	src/lua/src/lapi.c	/^LUA_API void lua_remove (lua_State *L, int idx) {$/;"	f
lua_reopen	src/lued.c	/^int lua_reopen(lua_State* L)$/;"	f
lua_replace	src/lua/src/lapi.c	/^LUA_API void lua_replace (lua_State *L, int idx) {$/;"	f
lua_resume	src/lua/src/ldo.c	/^LUA_API int lua_resume (lua_State *L, lua_State *from, int nargs) {$/;"	f
lua_save_session	src/lued.c	/^int lua_save_session(lua_State* L) {$/;"	f
lua_saveline	src/lua/src/lua.c	72;"	d	file:
lua_saveline	src/lua/src/lua.c	82;"	d	file:
lua_set_color	src/lued.c	/^int lua_set_color(lua_State *L)$/;"	f
lua_set_cur_pos	src/lued.c	/^static int lua_set_cur_pos(lua_State* L) {$/;"	f	file:
lua_set_fileid	src/lued.c	/^int lua_set_fileid(lua_State* L) {$/;"	f
lua_set_filename	src/lued.c	/^int lua_set_filename(lua_State* L) {$/;"	f
lua_set_hotkeys	src/carr/src/carr_readline_lua.c	/^int lua_set_hotkeys(lua_State *L) {$/;"	f
lua_set_mark	src/lued.c	/^int lua_set_mark(lua_State* L) {$/;"	f
lua_set_non_repeatables	src/carr/src/carr_readline_lua.c	/^int lua_set_non_repeatables(lua_State *L) {$/;"	f
lua_set_page_offset	src/lued.c	/^static int lua_set_page_offset(lua_State* L) {$/;"	f	file:
lua_set_page_pos	src/lued.c	/^static int lua_set_page_pos(lua_State* L)$/;"	f	file:
lua_set_paste	src/lued.c	/^int lua_set_paste(lua_State *L) {$/;"	f
lua_set_repeatables	src/carr/src/carr_readline_lua.c	/^int lua_set_repeatables(lua_State *L) {$/;"	f
lua_set_sel_end	src/lued.c	/^int lua_set_sel_end(lua_State* L) {$/;"	f
lua_set_sel_off	src/lued.c	/^int lua_set_sel_off(lua_State* L) {$/;"	f
lua_set_sel_start	src/lued.c	/^int lua_set_sel_start(lua_State* L) {$/;"	f
lua_set_show_line_numbers	src/lued.c	/^static int lua_set_show_line_numbers(lua_State* L) {$/;"	f	file:
lua_setallocf	src/lua/src/lapi.c	/^LUA_API void lua_setallocf (lua_State *L, lua_Alloc f, void *ud) {$/;"	f
lua_setfield	src/lua/src/lapi.c	/^LUA_API void lua_setfield (lua_State *L, int idx, const char *k) {$/;"	f
lua_setglobal	src/lua/src/lapi.c	/^LUA_API void lua_setglobal (lua_State *L, const char *var) {$/;"	f
lua_sethook	src/lua/src/ldebug.c	/^LUA_API int lua_sethook (lua_State *L, lua_Hook func, int mask, int count) {$/;"	f
lua_setlocal	src/lua/src/ldebug.c	/^LUA_API const char *lua_setlocal (lua_State *L, const lua_Debug *ar, int n) {$/;"	f
lua_setmetatable	src/lua/src/lapi.c	/^LUA_API int lua_setmetatable (lua_State *L, int objindex) {$/;"	f
lua_settable	src/lua/src/lapi.c	/^LUA_API void lua_settable (lua_State *L, int idx) {$/;"	f
lua_settop	src/lua/src/lapi.c	/^LUA_API void lua_settop (lua_State *L, int idx) {$/;"	f
lua_setupvalue	src/lua/src/lapi.c	/^LUA_API const char *lua_setupvalue (lua_State *L, int funcindex, int n) {$/;"	f
lua_setuservalue	src/lua/src/lapi.c	/^LUA_API void lua_setuservalue (lua_State *L, int idx) {$/;"	f
lua_status	src/lua/src/lapi.c	/^LUA_API int lua_status (lua_State *L) {$/;"	f
lua_stdin_is_tty	src/lua/src/lua.c	50;"	d	file:
lua_stdin_is_tty	src/lua/src/lua.c	54;"	d	file:
lua_stdin_is_tty	src/lua/src/lua.c	56;"	d	file:
lua_strx2number	src/lua/src/lobject.c	/^static lua_Number lua_strx2number (const char *s, char **endptr) {$/;"	f	file:
lua_tmpnam	src/lua/src/loslib.c	48;"	d	file:
lua_tmpnam	src/lua/src/loslib.c	57;"	d	file:
lua_toboolean	src/lua/src/lapi.c	/^LUA_API int lua_toboolean (lua_State *L, int idx) {$/;"	f
lua_tocfunction	src/lua/src/lapi.c	/^LUA_API lua_CFunction lua_tocfunction (lua_State *L, int idx) {$/;"	f
lua_toindex	src/lued.c	/^int lua_toindex(lua_State* L, size_t i)$/;"	f
lua_tointegerx	src/lua/src/lapi.c	/^LUA_API lua_Integer lua_tointegerx (lua_State *L, int idx, int *isnum) {$/;"	f
lua_tolstring	src/lua/src/lapi.c	/^LUA_API const char *lua_tolstring (lua_State *L, int idx, size_t *len) {$/;"	f
lua_tonumberx	src/lua/src/lapi.c	/^LUA_API lua_Number lua_tonumberx (lua_State *L, int idx, int *isnum) {$/;"	f
lua_topointer	src/lua/src/lapi.c	/^LUA_API const void *lua_topointer (lua_State *L, int idx) {$/;"	f
lua_tothread	src/lua/src/lapi.c	/^LUA_API lua_State *lua_tothread (lua_State *L, int idx) {$/;"	f
lua_tounsignedx	src/lua/src/lapi.c	/^LUA_API lua_Unsigned lua_tounsignedx (lua_State *L, int idx, int *isnum) {$/;"	f
lua_touserdata	src/lua/src/lapi.c	/^LUA_API void *lua_touserdata (lua_State *L, int idx) {$/;"	f
lua_type	src/lua/src/lapi.c	/^LUA_API int lua_type (lua_State *L, int idx) {$/;"	f
lua_typename	src/lua/src/lapi.c	/^LUA_API const char *lua_typename (lua_State *L, int t) {$/;"	f
lua_undo	src/lued.c	/^int lua_undo(lua_State* L) {$/;"	f
lua_upvalueid	src/lua/src/lapi.c	/^LUA_API void *lua_upvalueid (lua_State *L, int fidx, int n) {$/;"	f
lua_upvaluejoin	src/lua/src/lapi.c	/^LUA_API void lua_upvaluejoin (lua_State *L, int fidx1, int n1,$/;"	f
lua_version	src/lua/src/lapi.c	/^LUA_API const lua_Number *lua_version (lua_State *L) {$/;"	f
lua_xmove	src/lua/src/lapi.c	/^LUA_API void lua_xmove (lua_State *from, lua_State *to, int n) {$/;"	f
lua_yieldk	src/lua/src/ldo.c	/^LUA_API int lua_yieldk (lua_State *L, int nresults, int ctx, lua_CFunction k) {$/;"	f
luai_ctype_	src/lua/src/lctype.c	/^LUAI_DDEF const lu_byte luai_ctype_[UCHAR_MAX + 2] = {$/;"	v
luai_jmpbuf	src/lua/src/ldo.c	56;"	d	file:
luai_jmpbuf	src/lua/src/ldo.c	62;"	d	file:
luai_jmpbuf	src/lua/src/ldo.c	68;"	d	file:
luai_makeseed	src/lua/src/lstate.c	51;"	d	file:
luai_runtimecheck	src/lua/src/lvm.c	485;"	d	file:
luai_verifycode	src/lua/src/lundump.c	42;"	d	file:
luaopen_base	src/lua/src/lbaselib.c	/^LUAMOD_API int luaopen_base (lua_State *L) {$/;"	f
luaopen_bit32	src/lua/src/lbitlib.c	/^LUAMOD_API int luaopen_bit32 (lua_State *L) {$/;"	f
luaopen_coroutine	src/lua/src/lcorolib.c	/^LUAMOD_API int luaopen_coroutine (lua_State *L) {$/;"	f
luaopen_debug	src/lua/src/ldblib.c	/^LUAMOD_API int luaopen_debug (lua_State *L) {$/;"	f
luaopen_io	src/lua/src/liolib.c	/^LUAMOD_API int luaopen_io (lua_State *L) {$/;"	f
luaopen_math	src/lua/src/lmathlib.c	/^LUAMOD_API int luaopen_math (lua_State *L) {$/;"	f
luaopen_os	src/lua/src/loslib.c	/^LUAMOD_API int luaopen_os (lua_State *L) {$/;"	f
luaopen_package	src/lua/src/loadlib.c	/^LUAMOD_API int luaopen_package (lua_State *L) {$/;"	f
luaopen_string	src/lua/src/lstrlib.c	/^LUAMOD_API int luaopen_string (lua_State *L) {$/;"	f
luaopen_table	src/lua/src/ltablib.c	/^LUAMOD_API int luaopen_table (lua_State *L) {$/;"	f
lued.align_cur_char	lua_src/base/align.lua	/^function lued.align_cur_char(dd)$/;"	f
lued.align_delimiter_of_next_line	lua_src/base/align.lua	/^function lued.align_delimiter_of_next_line(delim, dd)$/;"	f
lued.align_delimiter_selected	lua_src/base/align.lua	/^function lued.align_delimiter_selected(delim, dd)$/;"	f
lued.align_selected	lua_src/base/align.lua	/^function lued.align_selected(dd)$/;"	f
lued.align_start_of_next_line	lua_src/base/align.lua	/^function lued.align_start_of_next_line(dd)$/;"	f
lued.alt_z_wrapper	lua_src/core/undo.lua	/^function lued.alt_z_wrapper(dd)$/;"	f
lued.at_start_of_line	lua_src/core/booleans.lua	/^function lued.at_start_of_line()$/;"	f
lued.auto_complete_insert_word	lua_src/base/autocomplete.lua	/^function lued.auto_complete_insert_word()$/;"	f
lued.auto_complete_lookup_word	lua_src/base/autocomplete.lua	/^function lued.auto_complete_lookup_word()$/;"	f
lued.auto_complete_select_word	lua_src/base/autocomplete.lua	/^function lued.auto_complete_select_word()$/;"	f
lued.bracket_paste_start	lua_src/core/insert.lua	/^function lued.bracket_paste_start(dd)$/;"	f
lued.bracket_paste_stop	lua_src/core/insert.lua	/^function lued.bracket_paste_stop(dd)$/;"	f
lued.bubble_line_down	lua_src/base/swap.lua	/^function lued.bubble_line_down(dd)$/;"	f
lued.bubble_line_up	lua_src/base/swap.lua	/^function lued.bubble_line_up(dd)$/;"	f
lued.bubble_selected_lines_down	lua_src/base/swap.lua	/^function lued.bubble_selected_lines_down(dd)$/;"	f
lued.bubble_selected_lines_up	lua_src/base/swap.lua	/^function lued.bubble_selected_lines_up(dd)$/;"	f
lued.bubble_word_left	lua_src/base/swap.lua	/^function lued.bubble_word_left(dd)$/;"	f
lued.bubble_word_right	lua_src/base/swap.lua	/^function lued.bubble_word_right(dd)$/;"	f
lued.cd_change_dir	lua_src/core/os.lua	/^function lued.cd_change_dir(dd)$/;"	f
lued.check_if_file_changed	lua_src/core/display.lua	/^function lued.check_if_file_changed()$/;"	f
lued.chomp	lua_src/core/os.lua	/^function lued.chomp(str)$/;"	f
lued.chomp_lines	lua_src/core/display.lua	/^function lued.chomp_lines(lines, maxlen)$/;"	f
lued.clang.for_loop	lua_src/plugins/c.lua	/^function lued.clang.for_loop()$/;"	f
lued.clang.func	lua_src/plugins/c.lua	/^function lued.clang.func()$/;"	f
lued.clang.if_statement	lua_src/plugins/c.lua	/^function lued.clang.if_statement()$/;"	f
lued.clang.program	lua_src/plugins/c.lua	/^function lued.clang.program()$/;"	f
lued.clang.switch_statement	lua_src/plugins/c.lua	/^function lued.clang.switch_statement()$/;"	f
lued.clang.typedef	lua_src/plugins/c.lua	/^function lued.clang.typedef()$/;"	f
lued.clang.while_loop	lua_src/plugins/c.lua	/^function lued.clang.while_loop()$/;"	f
lued.clr_abs_line_numbers	lua_src/base/linenumbers.lua	/^function lued.clr_abs_line_numbers(dd)$/;"	f
lued.clr_auto_indent	lua_src/base/indent.lua	/^function lued.clr_auto_indent(dd)$/;"	f
lued.clr_find_case_sensitive	lua_src/core/find.lua	/^function lued.clr_find_case_sensitive(dd)$/;"	f
lued.clr_find_whole_word	lua_src/core/find.lua	/^function lued.clr_find_whole_word(dd)$/;"	f
lued.clr_rel_line_numbers	lua_src/base/linenumbers.lua	/^function lued.clr_rel_line_numbers(dd)$/;"	f
lued.clr_sb_files	lua_src/base/sidebar.lua	/^function lued.clr_sb_files(dd)$/;"	f
lued.comment	lua_src/base/comments.lua	/^function lued.comment(dd)$/;"	f
lued.comment_move_down	lua_src/base/comments.lua	/^function lued.comment_move_down(dd)$/;"	f
lued.comment_selected	lua_src/base/comments.lua	/^function lued.comment_selected(dd)$/;"	f
lued.complete_keyword	lua_src/base/autocomplete.lua	/^function lued.complete_keyword(dd)$/;"	f
lued.complete_match	lua_src/base/autocomplete.lua	/^function lued.complete_match(dd)$/;"	f
lued.complete_something	lua_src/base/autocomplete.lua	/^function lued.complete_something(do_keyword, dd)$/;"	f
lued.copy	lua_src/core/copy_paste.lua	/^function lued.copy(dd)$/;"	f
lued.copy_1_line	lua_src/core/copy_paste.lua	/^function lued.copy_1_line(dd)$/;"	f
lued.copy_eol	lua_src/core/copy_paste.lua	/^function lued.copy_eol(dd)$/;"	f
lued.copy_line	lua_src/core/copy_paste.lua	/^function lued.copy_line(n,dd)$/;"	f
lued.copy_sol	lua_src/core/copy_paste.lua	/^function lued.copy_sol(dd)$/;"	f
lued.copy_word	lua_src/core/copy_paste.lua	/^function lued.copy_word(dd)$/;"	f
lued.create_tab_select_menu	lua_src/base/multifile.lua	/^function lued.create_tab_select_menu(filter, dont_print)$/;"	f
lued.ctag_jump_back	lua_src/base/ctags.lua	/^function lued.ctag_jump_back(dd)$/;"	f
lued.ctag_jump_forward	lua_src/base/ctags.lua	/^function lued.ctag_jump_forward(dd)$/;"	f
lued.ctag_move_back_from_tag	lua_src/base/ctags.lua	/^function lued.ctag_move_back_from_tag(dd)$/;"	f
lued.ctag_move_to_tag	lua_src/base/ctags.lua	/^function lued.ctag_move_to_tag(dd)$/;"	f
lued.ctag_read_file	lua_src/base/ctags.lua	/^function lued.ctag_read_file(tagfile, dd)$/;"	f
lued.cut	lua_src/core/copy_paste.lua	/^function lued.cut(dd)$/;"	f
lued.cut_all 	lua_src/core/delete.lua	/^lued.cut_all = function (dd) return lued.cut_or_del_all(true, dd) end$/;"	f
lued.cut_backspace	lua_src/core/delete.lua	/^function lued.cut_backspace(n,dd)$/;"	f
lued.cut_backword 	lua_src/core/delete.lua	/^lued.cut_backword = function(n,dd) return lued.cut_or_del_backword(true, n, dd) end$/;"	f
lued.cut_char 	lua_src/core/delete.lua	/^lued.cut_char = function(n,dd) return lued.cut_or_del_char(true, n, dd) end$/;"	f
lued.cut_del_spaces	lua_src/core/delete.lua	/^function lued.cut_del_spaces(cut_mode, dd)$/;"	f
lued.cut_eof	lua_src/core/delete.lua	/^function lued.cut_eof(dd)$/;"	f
lued.cut_eol 	lua_src/core/delete.lua	/^lued.cut_eol = function(dd) return lued.cut_or_del_eol(true, dd) end$/;"	f
lued.cut_eol_selected	lua_src/core/delete.lua	/^function lued.cut_eol_selected(dd)$/;"	f
lued.cut_eow 	lua_src/core/delete.lua	/^lued.cut_eow = function(dd) return lued.cut_or_del_eow(true, dd) end$/;"	f
lued.cut_line	lua_src/core/delete.lua	/^function lued.cut_line(n,dd)$/;"	f
lued.cut_mark_to_cursor	lua_src/base/markers.lua	/^function lued.cut_mark_to_cursor(dd)$/;"	f
lued.cut_n_lines	lua_src/core/copy_paste.lua	/^function lued.cut_n_lines(n,dd)$/;"	f
lued.cut_n_lines_plus1	lua_src/core/copy_paste.lua	/^function lued.cut_n_lines_plus1(n,dd)$/;"	f
lued.cut_next 	lua_src/core/delete.lua	/^lued.cut_next = function(str, dd) return lued.cut_or_del_next(true, str, dd) end$/;"	f
lued.cut_or_del_all	lua_src/core/delete.lua	/^function lued.cut_or_del_all(cut_mode, dd)$/;"	f
lued.cut_or_del_backword	lua_src/core/delete.lua	/^function lued.cut_or_del_backword(cut_mode, n, dd)$/;"	f
lued.cut_or_del_char	lua_src/core/delete.lua	/^function lued.cut_or_del_char(cut_mode,n,dd)$/;"	f
lued.cut_or_del_eof	lua_src/core/delete.lua	/^function lued.cut_or_del_eof(cut_mode, dd)$/;"	f
lued.cut_or_del_eol	lua_src/core/delete.lua	/^function lued.cut_or_del_eol(cut_mode, dd)$/;"	f
lued.cut_or_del_eow	lua_src/core/delete.lua	/^function lued.cut_or_del_eow(cut_mode, dd)$/;"	f
lued.cut_or_del_next	lua_src/core/delete.lua	/^function lued.cut_or_del_next(cut_mode, str, dd)$/;"	f
lued.cut_or_del_sel	lua_src/core/delete.lua	/^function lued.cut_or_del_sel(cut_mode,dd)$/;"	f
lued.cut_or_del_sof	lua_src/core/delete.lua	/^function lued.cut_or_del_sof(cut_mode, dd)$/;"	f
lued.cut_or_del_sol	lua_src/core/delete.lua	/^function lued.cut_or_del_sol(cut_mode, dd)$/;"	f
lued.cut_or_del_sow	lua_src/core/delete.lua	/^function lued.cut_or_del_sow(cut_mode, dd)$/;"	f
lued.cut_or_del_spaces_next_line	lua_src/core/delete.lua	/^function lued.cut_or_del_spaces_next_line(cut_mode, dd)$/;"	f
lued.cut_or_del_word	lua_src/core/delete.lua	/^function lued.cut_or_del_word(cut_mode, dd)$/;"	f
lued.cut_ot_del_backspace	lua_src/core/delete.lua	/^function lued.cut_ot_del_backspace(cut_mode, n, dd)$/;"	f
lued.cut_prev_n_lines_plus1	lua_src/core/copy_paste.lua	/^function lued.cut_prev_n_lines_plus1(n,dd)$/;"	f
lued.cut_sel_or_line	lua_src/core/delete.lua	/^function lued.cut_sel_or_line(dd)$/;"	f
lued.cut_sof	lua_src/core/delete.lua	/^function lued.cut_sof(dd)$/;"	f
lued.cut_sol 	lua_src/core/delete.lua	/^lued.cut_sol = function(dd) return lued.cut_or_del_sol(true, dd) end$/;"	f
lued.cut_sow 	lua_src/core/delete.lua	/^lued.cut_sow = function(dd) return lued.cut_or_del_sow(true, dd) end$/;"	f
lued.cut_spaces 	lua_src/core/delete.lua	/^lued.cut_spaces = function(dd) return lued.cut_del_spaces(true, dd) end$/;"	f
lued.cut_spaces_next_line 	lua_src/core/delete.lua	/^lued.cut_spaces_next_line = function(dd) return lued.cut_or_del_spaces_next_line(true, dd) end$/;"	f
lued.cut_spaces_selected	lua_src/core/delete.lua	/^function lued.cut_spaces_selected(dd)$/;"	f
lued.cut_word 	lua_src/core/delete.lua	/^lued.cut_word = function(dd) return lued.cut_or_del_word(true, dd) end$/;"	f
lued.dbg_prompt	lua_src/core/prompt.lua	/^function lued.dbg_prompt(dbg_str)$/;"	f
lued.decr	lua_src/base/increment.lua	/^function lued.decr(step_size,dd)$/;"	f
lued.decrst	lua_src/core/terminal.lua	/^function lued.decrst(val)$/;"	f
lued.decset	lua_src/core/terminal.lua	/^function lued.decset(val)$/;"	f
lued.def_snippet	lua_src/base/snippets.lua	/^function lued.def_snippet(snippets, key_str, fn)$/;"	f
lued.del_all 	lua_src/core/delete.lua	/^lued.del_all = function(dd) return lued.cut_or_del_all(false, dd) end$/;"	f
lued.del_backspace	lua_src/core/delete.lua	/^function lued.del_backspace(n,dd)$/;"	f
lued.del_backspace2	lua_src/core/delete.lua	/^function lued.del_backspace2(dd)$/;"	f
lued.del_backword 	lua_src/core/delete.lua	/^lued.del_backword = function(n,dd) return lued.cut_or_del_backword(false, n, dd) end$/;"	f
lued.del_char 	lua_src/core/delete.lua	/^lued.del_char = function(n,dd) return lued.cut_or_del_char(false, n, dd) end$/;"	f
lued.del_char_1	lua_src/core/delete.lua	/^function lued.del_char_1(dd) lued.del_char_prompt(1,dd) end$/;"	f
lued.del_char_2	lua_src/core/delete.lua	/^function lued.del_char_2(dd) lued.del_char_prompt(2,dd) end$/;"	f
lued.del_char_3	lua_src/core/delete.lua	/^function lued.del_char_3(dd) lued.del_char_prompt(3,dd) end$/;"	f
lued.del_char_4	lua_src/core/delete.lua	/^function lued.del_char_4(dd) lued.del_char_prompt(4,dd) end$/;"	f
lued.del_char_5	lua_src/core/delete.lua	/^function lued.del_char_5(dd) lued.del_char_prompt(5,dd) end$/;"	f
lued.del_char_6	lua_src/core/delete.lua	/^function lued.del_char_6(dd) lued.del_char_prompt(6,dd) end$/;"	f
lued.del_char_7	lua_src/core/delete.lua	/^function lued.del_char_7(dd) lued.del_char_prompt(7,dd) end$/;"	f
lued.del_char_8	lua_src/core/delete.lua	/^function lued.del_char_8(dd) lued.del_char_prompt(8,dd) end$/;"	f
lued.del_char_9	lua_src/core/delete.lua	/^function lued.del_char_9(dd) lued.del_char_prompt(9,dd) end$/;"	f
lued.del_char_n	lua_src/core/delete.lua	/^function lued.del_char_n(n, dd)$/;"	f
lued.del_eof	lua_src/core/delete.lua	/^function lued.del_eof(dd)$/;"	f
lued.del_eol 	lua_src/core/delete.lua	/^lued.del_eol = function(dd) return lued.cut_or_del_eol(false, dd) end$/;"	f
lued.del_eol_selected	lua_src/core/delete.lua	/^function lued.del_eol_selected(dd)$/;"	f
lued.del_eow 	lua_src/core/delete.lua	/^lued.del_eow = function(dd) return lued.cut_or_del_eow(false, dd) end$/;"	f
lued.del_line	lua_src/core/delete.lua	/^function lued.del_line(n,dd)$/;"	f
lued.del_mark_to_cursor	lua_src/base/markers.lua	/^function lued.del_mark_to_cursor(dd)$/;"	f
lued.del_n_char	lua_src/core/delete.lua	/^function lued.del_n_char(n,dd)$/;"	f
lued.del_n_lines	lua_src/core/delete.lua	/^function lued.del_n_lines(n,dd)$/;"	f
lued.del_n_lines_plus1	lua_src/core/delete.lua	/^function lued.del_n_lines_plus1(n,dd)$/;"	f
lued.del_next 	lua_src/core/delete.lua	/^lued.del_next = function(str, dd) return lued.cut_or_del_next(false, str, dd) end$/;"	f
lued.del_prev_n_lines_plus1	lua_src/core/delete.lua	/^function lued.del_prev_n_lines_plus1(n,dd)$/;"	f
lued.del_sel	lua_src/core/delete.lua	/^function lued.del_sel(dd)$/;"	f
lued.del_sof	lua_src/core/delete.lua	/^function lued.del_sof(dd)$/;"	f
lued.del_sol 	lua_src/core/delete.lua	/^lued.del_sol = function(dd) return lued.cut_or_del_sol(false, dd) end$/;"	f
lued.del_sow 	lua_src/core/delete.lua	/^lued.del_sow = function(dd) return lued.cut_or_del_sow(false, dd) end$/;"	f
lued.del_spaces 	lua_src/core/delete.lua	/^lued.del_spaces = function(dd) return lued.cut_del_spaces(false, dd) end$/;"	f
lued.del_spaces_next_line 	lua_src/core/delete.lua	/^lued.del_spaces_next_line = function(dd) return lued.cut_or_del_spaces_next_line(false, dd)  end$/;"	f
lued.del_spaces_selected	lua_src/core/delete.lua	/^function lued.del_spaces_selected(dd)$/;"	f
lued.del_word 	lua_src/core/delete.lua	/^lued.del_word = function(dd) return lued.cut_or_del_word(false, dd) end$/;"	f
lued.disp	lua_src/core/display.lua	/^function lued.disp(dd,center)$/;"	f
lued.display_menu	lua_src/base/multifile.lua	/^function lued.display_menu(filter,dont_print)$/;"	f
lued.display_page_in_lua	lua_src/core/display.lua	/^function lued.display_page_in_lua(lua_mode, highlight_trailing_spaces)$/;"	f
lued.display_page_in_lua_depricated	lua_src/core/display.lua	/^function lued.display_page_in_lua_depricated(lua_mode, highlight_trailing_spaces)$/;"	f
lued.display_status_in_lua	lua_src/base/statusline.lua	/^function lued.display_status_in_lua(lua_mode,dd)$/;"	f
lued.display_status_in_lua	lua_src/core/display.lua	/^function lued.display_status_in_lua(lua_mode,dd)$/;"	f
lued.do_keyword	lua_src/core/insert.lua	/^function lued.do_keyword(dd)$/;"	f
lued.do_snippet	lua_src/core/insert.lua	/^function lued.do_snippet(dd)$/;"	f
lued.dont_use	lua_src/core/hotkeys.lua	/^function lued.dont_use()$/;"	f
lued.duplicate_line	lua_src/core/copy_paste.lua	/^function lued.duplicate_line(dd)$/;"	f
lued.esc_clear_screen	lua_src/core/display.lua	/^function lued.esc_clear_screen(dd)$/;"	f
lued.esc_rev	lua_src/core/display.lua	/^function lued.esc_rev(str)$/;"	f
lued.escape_magic_char	lua_src/core/style.lua	/^function lued.escape_magic_char(str)$/;"	f
lued.exactly_one_file_matches	lua_src/core/os.lua	/^function lued.exactly_one_file_matches(glob)$/;"	f
lued.exec_str	lua_src/core/replay.lua	/^function lued.exec_str(str,dd)$/;"	f
lued.exit_all	lua_src/core/quit.lua	/^function lued.exit_all(dd)$/;"	f
lued.exit_session	lua_src/core/quit.lua	/^function lued.exit_session(dd)$/;"	f
lued.explode	lua_src/core/lued_lib.lua	/^function lued.explode(subject, sep,  lim)$/;"	f
lued.explode_keys	lua_src/core/lued_lib.lua	/^function lued.explode_keys(subject, sep, lim)$/;"	f
lued.file_exists	lua_src/core/booleans.lua	/^function lued.file_exists(filename)$/;"	f
lued.find_all_matches_in_file	lua_src/core/find.lua	/^function lued.find_all_matches_in_file(pat, plain)$/;"	f
lued.find_all_on_line	lua_src/core/find.lua	/^function lued.find_all_on_line(line,str)$/;"	f
lued.find_and_replace	lua_src/core/find.lua	/^function lued.find_and_replace(from,to,options,dd)$/;"	f
lued.find_forward	lua_src/core/find.lua	/^function lued.find_forward(str,nowrap,search_all,replace,test_str,dd)$/;"	f
lued.find_forward_again	lua_src/core/find.lua	/^function lued.find_forward_again(dd)$/;"	f
lued.find_forward_selected	lua_src/core/find.lua	/^function lued.find_forward_selected(dd)$/;"	f
lued.find_jump_back	lua_src/core/find.lua	/^function lued.find_jump_back(dd)$/;"	f
lued.find_jump_forward	lua_src/core/find.lua	/^function lued.find_jump_forward(dd)$/;"	f
lued.find_prompt	lua_src/core/find.lua	/^function lued.find_prompt(test_str)$/;"	f
lued.find_reverse	lua_src/core/find.lua	/^function lued.find_reverse(str,dd)$/;"	f
lued.find_reverse_again	lua_src/core/find.lua	/^function lued.find_reverse_again(dd)$/;"	f
lued.find_reverse_selected	lua_src/core/find.lua	/^function lued.find_reverse_selected(dd)$/;"	f
lued.find_reverse_word	lua_src/core/find.lua	/^function lued.find_reverse_word(dd)$/;"	f
lued.find_word	lua_src/core/find.lua	/^function lued.find_word(dd)$/;"	f
lued.foreach_selected	lua_src/core/select.lua	/^function lued.foreach_selected(fn, dd)$/;"	f
lued.get_all_matches	lua_src/core/getters_setters.lua	/^function lued.get_all_matches(needle,haystack)$/;"	f
lued.get_basename	lua_src/core/getters_setters.lua	/^function lued.get_basename(full_path)$/;"	f
lued.get_char	lua_src/core/get_sel.lua	/^function lued.get_char(offset)$/;"	f
lued.get_completion	lua_src/base/autocomplete.lua	/^function lued.get_completion(partial_str,completion_list)$/;"	f
lued.get_cur_filename	lua_src/core/getters_setters.lua	/^function lued.get_cur_filename()$/;"	f
lued.get_dirname	lua_src/core/getters_setters.lua	/^function lued.get_dirname(full_path)$/;"	f
lued.get_extension	lua_src/core/getters_setters.lua	/^function lued.get_extension(filename)$/;"	f
lued.get_filename	lua_src/core/getters_setters.lua	/^function lued.get_filename(id)$/;"	f
lued.get_filenamerc	lua_src/core/getters_setters.lua	/^function lued.get_filenamerc(id)$/;"	f
lued.get_filetype	lua_src/core/getters_setters.lua	/^function lued.get_filetype(filename)$/;"	f
lued.get_find_whole_word	lua_src/core/find.lua	/^function lued.get_find_whole_word()$/;"	f
lued.get_first_match	lua_src/core/find.lua	/^function lued.get_first_match(matches, minc)$/;"	f
lued.get_global_indent_size	lua_src/base/indent.lua	/^function lued.get_global_indent_size()$/;"	f
lued.get_hist_id	lua_src/core/getters_setters.lua	/^function lued.get_hist_id()$/;"	f
lued.get_indent_len	lua_src/base/indent.lua	/^function lued.get_indent_len(line_number)$/;"	f
lued.get_indent_str	lua_src/base/indent.lua	/^function lued.get_indent_str()$/;"	f
lued.get_last_match	lua_src/core/find.lua	/^function lued.get_last_match(matches, maxc)$/;"	f
lued.get_line	lua_src/core/getters_setters.lua	/^function lued.get_line(linenumber)$/;"	f
lued.get_line_comment	lua_src/core/getters_setters.lua	/^function lued.get_line_comment(filename)$/;"	f
lued.get_line_comment_regex	lua_src/core/style.lua	/^function lued.get_line_comment_regex()$/;"	f
lued.get_longest_word	lua_src/core/getters_setters.lua	/^function lued.get_longest_word(words)$/;"	f
lued.get_next_line	lua_src/core/get_sel.lua	/^function lued.get_next_line()$/;"	f
lued.get_number	lua_src/core/get_sel.lua	/^function lued.get_number(dd)$/;"	f
lued.get_overtype	lua_src/core/getters_setters.lua	/^function lued.get_overtype()$/;"	f
lued.get_pagesize	lua_src/core/getters_setters.lua	/^function lued.get_pagesize()$/;"	f
lued.get_partial_word	lua_src/base/autocomplete.lua	/^function lued.get_partial_word(sel_partial)$/;"	f
lued.get_rc	lua_src/core/getters_setters.lua	/^function lued.get_rc()$/;"	f
lued.get_rc	lua_src/core/getters_setters.lua	/^function lued.get_rc(id)$/;"	f
lued.get_rcf	lua_src/core/getters_setters.lua	/^function lued.get_rcf()$/;"	f
lued.get_sel_str	lua_src/core/select.lua	/^function lued.get_sel_str()$/;"	f
lued.get_token	lua_src/core/get_sel.lua	/^function lued.get_token(str,ii)$/;"	f
lued.get_word	lua_src/core/get_sel.lua	/^function lued.get_word(dd)$/;"	f
lued.get_yesno	lua_src/core/getters_setters.lua	/^function lued.get_yesno(prompt,default)$/;"	f
lued.global_copy	lua_src/core/copy_paste.lua	/^function lued.global_copy(dd)$/;"	f
lued.global_cut	lua_src/core/copy_paste.lua	/^function lued.global_cut(dd)$/;"	f
lued.global_cut_append	lua_src/core/copy_paste.lua	/^function lued.global_cut_append(dd)$/;"	f
lued.global_paste	lua_src/core/copy_paste.lua	/^function lued.global_paste(dd)$/;"	f
lued.goto_named_mark	lua_src/base/markers.lua	/^function lued.goto_named_mark(dd)$/;"	f
lued.goto_nameless_mark_next	lua_src/base/markers.lua	/^function lued.goto_nameless_mark_next(dd)$/;"	f
lued.goto_nameless_mark_prev	lua_src/base/markers.lua	/^function lued.goto_nameless_mark_prev(dd)$/;"	f
lued.grep	lua_src/core/find.lua	/^function lued.grep(find_str, file_glob, dd)$/;"	f
lued.grep_goback	lua_src/core/find.lua	/^function lued.grep_goback(dd)$/;"	f
lued.grep_sel_all_files	lua_src/core/find.lua	/^function lued.grep_sel_all_files(dd)$/;"	f
lued.grep_sel_file_glob	lua_src/core/find.lua	/^function lued.grep_sel_file_glob(dd)$/;"	f
lued.grep_sel_this_file	lua_src/core/find.lua	/^function lued.grep_sel_this_file(dd)$/;"	f
lued.handle_snippets	lua_src/base/snippets.lua	/^function lued.handle_snippets()$/;"	f
lued.help	lua_src/base/help.lua	/^function lued.help(n,dd)$/;"	f
lued.hit_cr	lua_src/core/prompt.lua	/^function lued.hit_cr()$/;"	f
lued.hot	lua_src/core/hotkeys.lua	/^function lued.hot(key, dd)$/;"	f
lued.hot_range	lua_src/core/hotkeys.lua	/^function lued.hot_range(lower,upper)$/;"	f
lued.html.anchor	lua_src/plugins/bootstrap.lua	/^function lued.html.anchor(tag)$/;"	f
lued.html.anchor	lua_src/plugins/html.lua	/^function lued.html.anchor(tag)$/;"	f
lued.html.bootstrap_1col1side	lua_src/plugins/bootstrap.lua	/^function lued.html.bootstrap_1col1side(dd)$/;"	f
lued.html.bootstrap_3col	lua_src/plugins/bootstrap.lua	/^function lued.html.bootstrap_3col(dd)$/;"	f
lued.html.bootstrap_cdn	lua_src/plugins/bootstrap.lua	/^function lued.html.bootstrap_cdn()$/;"	f
lued.html.bootstrap_container	lua_src/plugins/bootstrap.lua	/^function lued.html.bootstrap_container(dd)$/;"	f
lued.html.bootstrap_jumbotron	lua_src/plugins/bootstrap.lua	/^function lued.html.bootstrap_jumbotron(dd)$/;"	f
lued.html.bootstrap_local	lua_src/plugins/bootstrap.lua	/^function lued.html.bootstrap_local()$/;"	f
lued.html.bootstrap_navbar	lua_src/plugins/bootstrap.lua	/^function lued.html.bootstrap_navbar(dd)$/;"	f
lued.html.html5	lua_src/plugins/html.lua	/^function lued.html.html5()$/;"	f
lued.html.self_closing	lua_src/plugins/bootstrap.lua	/^function lued.html.self_closing(tag)$/;"	f
lued.html.self_closing	lua_src/plugins/html.lua	/^function lued.html.self_closing(tag)$/;"	f
lued.html.tag	lua_src/plugins/bootstrap.lua	/^function lued.html.tag(t)$/;"	f
lued.html.tag	lua_src/plugins/html.lua	/^function lued.html.tag(t)$/;"	f
lued.implode	lua_src/core/lued_lib.lua	/^function lued.implode(pieces, sep, trailing_sep, first, last)$/;"	f
lued.incr	lua_src/base/increment.lua	/^function lued.incr(step_size, dd)$/;"	f
lued.indent	lua_src/base/indent.lua	/^function lued.indent(dd)$/;"	f
lued.indent1	lua_src/base/indent.lua	/^function lued.indent1(n, ch, goto_next, dd)$/;"	f
lued.indent_scope	lua_src/base/indent.lua	/^function lued.indent_scope(str,dd)$/;"	f
lued.indent_selected	lua_src/base/indent.lua	/^function lued.indent_selected(dd)$/;"	f
lued.init_lued	lua_src/core/lued_lib.lua	/^function lued.init_lued(lued_path, bindings_file)$/;"	f
lued.ins_str	lua_src/core/insert.lua	/^function lued.ins_str(str,dd)$/;"	f
lued.ins_str_after	lua_src/core/insert.lua	/^function lued.ins_str_after(str, fstr, r, c, dd)$/;"	f
lued.ins_string	lua_src/core/insert.lua	/^function lued.ins_string(str, dd)$/;"	f
lued.insert_line	lua_src/core/insert.lua	/^function lued.insert_line(dd)$/;"	f
lued.insert_line_after	lua_src/core/insert.lua	/^function lued.insert_line_after(dd)$/;"	f
lued.insert_line_before	lua_src/core/insert.lua	/^function lued.insert_line_before(dd)$/;"	f
lued.insert_line_numbers_orig	lua_src/base/linenumbers.lua	/^function lued.insert_line_numbers_orig(text)$/;"	f
lued.insert_tab	lua_src/core/insert.lua	/^function lued.insert_tab(dd)$/;"	f
lued.insert_tab_classic	lua_src/core/insert.lua	/^function lued.insert_tab_classic(dd)$/;"	f
lued.insert_tab_selected	lua_src/core/insert.lua	/^function lued.insert_tab_selected(dd)$/;"	f
lued.is_blankcomment	lua_src/base/comments.lua	/^function lued.is_blankcomment()$/;"	f
lued.is_blankline	lua_src/core/booleans.lua	/^function lued.is_blankline(line)$/;"	f
lued.is_comment	lua_src/base/comments.lua	/^function lued.is_comment(linenumber)$/;"	f
lued.is_digit	lua_src/core/booleans.lua	/^function lued.is_digit(ch)$/;"	f
lued.is_dir	lua_src/core/booleans.lua	/^function lued.is_dir(filename)$/;"	f
lued.is_empty	lua_src/core/booleans.lua	/^function lued.is_empty(str)$/;"	f
lued.is_eof	lua_src/core/booleans.lua	/^function lued.is_eof()$/;"	f
lued.is_eol	lua_src/core/booleans.lua	/^function lued.is_eol()$/;"	f
lued.is_firstline	lua_src/core/booleans.lua	/^function lued.is_firstline()$/;"	f
lued.is_glob	lua_src/core/booleans.lua	/^function lued.is_glob(filename)$/;"	f
lued.is_in_glob	lua_src/core/find.lua	/^function lued.is_in_glob(str, glob)$/;"	f
lued.is_keyword	lua_src/core/style.lua	/^function lued.is_keyword(str)$/;"	f
lued.is_lastline	lua_src/core/booleans.lua	/^function lued.is_lastline()$/;"	f
lued.is_number	lua_src/core/booleans.lua	/^function lued.is_number(str)$/;"	f
lued.is_open	lua_src/core/booleans.lua	/^function lued.is_open(filename)$/;"	f
lued.is_other	lua_src/core/booleans.lua	/^function lued.is_other(line,pos)$/;"	f
lued.is_pattern	lua_src/core/booleans.lua	/^function lued.is_pattern(pattern, line,pos)$/;"	f
lued.is_punct	lua_src/core/booleans.lua	/^function lued.is_punct(line,pos)$/;"	f
lued.is_sel_on	lua_src/core/select.lua	/^function lued.is_sel_on()$/;"	f
lued.is_snippet	lua_src/base/snippets.lua	/^function lued.is_snippet(haystack, plain_text)$/;"	f
lued.is_sof	lua_src/core/booleans.lua	/^function lued.is_sof()$/;"	f
lued.is_sol	lua_src/core/booleans.lua	/^function lued.is_sol()$/;"	f
lued.is_sow	lua_src/core/booleans.lua	/^function lued.is_sow()$/;"	f
lued.is_space	lua_src/core/booleans.lua	/^function lued.is_space(line,pos)$/;"	f
lued.is_word	lua_src/core/booleans.lua	/^function lued.is_word(line,pos)$/;"	f
lued.join_lines	lua_src/base/wrap.lua	/^function lued.join_lines(delim,dd)$/;"	f
lued.join_lines2	lua_src/base/wrap.lua	/^function lued.join_lines2(delim,dd)$/;"	f
lued.jump_back	lua_src/core/find.lua	/^function lued.jump_back(jump_back_stack, jump_forward_stack, dd)$/;"	f
lued.jump_forward	lua_src/core/find.lua	/^function lued.jump_forward(jump_back_stack, jump_forward_stack, dd)$/;"	f
lued.leading_ws	lua_src/core/lued_lib.lua	/^function lued.leading_ws()$/;"	f
lued.line_contains	lua_src/core/select.lua	/^function lued.line_contains(needles, line)$/;"	f
lued.line_ends_with	lua_src/core/select.lua	/^function lued.line_ends_with(needles, line)$/;"	f
lued.load_plugins	lua_src/base/plugins.lua	/^function lued.load_plugins(plugin_path)$/;"	f
lued.load_session_file	lua_src/base/sessions.lua	/^function lued.load_session_file(dd)$/;"	f
lued.logo	lua_src/base/help.lua	/^function lued.logo()$/;"	f
lued.ls_dir	lua_src/core/os.lua	/^function lued.ls_dir(glob)$/;"	f
lued.ls_recursive	lua_src/core/os.lua	/^function lued.ls_recursive(path,filter)$/;"	f
lued.lua.for_loop	lua_src/plugins/lua.lua	/^function lued.lua.for_loop()$/;"	f
lued.lua.func	lua_src/plugins/lua.lua	/^function lued.lua.func()$/;"	f
lued.lua.if_statement	lua_src/plugins/lua.lua	/^function lued.lua.if_statement()$/;"	f
lued.lua.program	lua_src/plugins/lua.lua	/^function lued.lua.program()$/;"	f
lued.lua.repeat_loop	lua_src/plugins/lua.lua	/^function lued.lua.repeat_loop()$/;"	f
lued.lua.while_loop	lua_src/plugins/lua.lua	/^function lued.lua.while_loop()$/;"	f
lued.make_line_bold_orig	lua_src/core/style.lua	/^function lued.make_line_bold_orig(lnum1,lnum2)$/;"	f
lued.minmax	lua_src/base/autocomplete.lua	/^function lued.minmax(min, actual, max)$/;"	f
lued.mouse_config	lua_src/base/mouse.lua	/^function lued.mouse_config(val)$/;"	f
lued.mouse_event	lua_src/base/mouse.lua	/^function lued.mouse_event(str)$/;"	f
lued.move_down	lua_src/core/move.lua	/^function lued.move_down(dd)$/;"	f
lued.move_down_and_repeat	lua_src/core/move.lua	/^function lued.move_down_and_repeat(dd)$/;"	f
lued.move_down_n_lines	lua_src/core/move.lua	/^function lued.move_down_n_lines(n,dd)$/;"	f
lued.move_down_n_pages	lua_src/core/move.lua	/^function lued.move_down_n_pages(n,dd)$/;"	f
lued.move_halfsy_left	lua_src/core/move.lua	/^function lued.move_halfsy_left(dd)$/;"	f
lued.move_halfsy_right	lua_src/core/move.lua	/^function lued.move_halfsy_right(dd)$/;"	f
lued.move_left_fast	lua_src/core/move.lua	/^function lued.move_left_fast(dd)$/;"	f
lued.move_left_n_char	lua_src/core/move.lua	/^function lued.move_left_n_char(n,dd)$/;"	f
lued.move_left_n_words	lua_src/core/move.lua	/^function lued.move_left_n_words(n,dd)$/;"	f
lued.move_left_word	lua_src/core/move.lua	/^function lued.move_left_word(dd)$/;"	f
lued.move_right_fast	lua_src/core/move.lua	/^function lued.move_right_fast(dd)$/;"	f
lued.move_right_n_char	lua_src/core/move.lua	/^function lued.move_right_n_char(n,dd)$/;"	f
lued.move_right_n_words	lua_src/core/move.lua	/^function lued.move_right_n_words(n,dd)$/;"	f
lued.move_right_to_space	lua_src/core/move.lua	/^function lued.move_right_to_space(dd)$/;"	f
lued.move_right_word	lua_src/core/move.lua	/^function lued.move_right_word(dd)$/;"	f
lued.move_to	lua_src/core/move.lua	/^function lued.move_to(r,c,dd)$/;"	f
lued.move_to_eol	lua_src/core/move.lua	/^function lued.move_to_eol(dd)$/;"	f
lued.move_to_first_line	lua_src/core/move.lua	/^function lued.move_to_first_line(dd)$/;"	f
lued.move_to_last_line	lua_src/core/move.lua	/^function lued.move_to_last_line(dd)$/;"	f
lued.move_to_line	lua_src/core/move.lua	/^function lued.move_to_line(n,dd)$/;"	f
lued.move_to_sol	lua_src/core/move.lua	/^function lued.move_to_sol(dd)$/;"	f
lued.move_to_sol_classic	lua_src/core/move.lua	/^function lued.move_to_sol_classic(dd)$/;"	f
lued.move_up_n_lines	lua_src/core/move.lua	/^function lued.move_up_n_lines(n,dd)$/;"	f
lued.move_up_n_pages	lua_src/core/move.lua	/^function lued.move_up_n_pages(n,dd)$/;"	f
lued.new_file	lua_src/core/files.lua	/^function lued.new_file(filename, dd)$/;"	f
lued.next_is_blankcomment	lua_src/base/comments.lua	/^function lued.next_is_blankcomment()$/;"	f
lued.next_is_blankline	lua_src/core/booleans.lua	/^function lued.next_is_blankline()$/;"	f
lued.next_is_comment	lua_src/base/comments.lua	/^function lued.next_is_comment()$/;"	f
lued.next_is_lastline	lua_src/core/booleans.lua	/^function lued.next_is_lastline()$/;"	f
lued.next_is_other	lua_src/core/booleans.lua	/^function lued.next_is_other()$/;"	f
lued.next_is_space	lua_src/core/booleans.lua	/^function lued.next_is_space()$/;"	f
lued.next_is_word	lua_src/core/booleans.lua	/^function lued.next_is_word()$/;"	f
lued.nohot	lua_src/core/hotkeys.lua	/^function lued.nohot(key, dd)$/;"	f
lued.noop 	lua_src/core/display.lua	/^function lued.noop (dd)$/;"	f
lued.notes	lua_src/plugins/notes.lua	/^  function lued.notes()$/;"	f
lued.open_file	lua_src/core/files.lua	/^function lued.open_file(filenames,dd)$/;"	f
lued.open_file_bindings	lua_src/core/files.lua	/^function lued.open_file_bindings(dd)$/;"	f
lued.open_filelist	lua_src/core/files.lua	/^function lued.open_filelist(filelist,dd)$/;"	f
lued.open_filerc	lua_src/core/files.lua	/^function lued.open_filerc(filename, r, c)$/;"	f
lued.open_filerc_test	lua_src/core/files.lua	/^function lued.open_filerc_test(dd)$/;"	f
lued.open_partial_filename	lua_src/core/files.lua	/^function lued.open_partial_filename(dd)$/;"	f
lued.os_cmd	lua_src/core/os.lua	/^function lued.os_cmd(cmd)$/;"	f
lued.os_cmdline	lua_src/core/os.lua	/^function lued.os_cmdline(dd)$/;"	f
lued.overtype_string	lua_src/core/insert.lua	/^function lued.overtype_string(str,dd)$/;"	f
lued.paste	lua_src/core/copy_paste.lua	/^function lued.paste(dd)$/;"	f
lued.paste_and_find_forward	lua_src/core/find.lua	/^function lued.paste_and_find_forward(dd)$/;"	f
lued.paste_and_find_reverse	lua_src/core/find.lua	/^function lued.paste_and_find_reverse(dd)$/;"	f
lued.paste_line_after	lua_src/core/copy_paste.lua	/^function lued.paste_line_after(dd)$/;"	f
lued.paste_line_before	lua_src/core/copy_paste.lua	/^function lued.paste_line_before(dd)$/;"	f
lued.pathifier	lua_src/core/os.lua	/^function lued.pathifier(filename)$/;"	f
lued.perl.for_loop	lua_src/plugins/perl.lua	/^function lued.perl.for_loop()$/;"	f
lued.perl.func	lua_src/plugins/perl.lua	/^function lued.perl.func()$/;"	f
lued.perl.if_statement	lua_src/plugins/perl.lua	/^function lued.perl.if_statement()$/;"	f
lued.perl.program	lua_src/plugins/perl.lua	/^function lued.perl.program()$/;"	f
lued.perl.while_loop	lua_src/plugins/perl.lua	/^function lued.perl.while_loop()$/;"	f
lued.pop_grep_stack	lua_src/core/find.lua	/^function lued.pop_grep_stack()$/;"	f
lued.pop_jump_stack	lua_src/core/find.lua	/^function lued.pop_jump_stack(stack)$/;"	f
lued.prev_is_other	lua_src/core/booleans.lua	/^function lued.prev_is_other()$/;"	f
lued.prev_is_space	lua_src/core/booleans.lua	/^function lued.prev_is_space()$/;"	f
lued.prev_is_word	lua_src/core/booleans.lua	/^function lued.prev_is_word()$/;"	f
lued.prompt	lua_src/core/prompt.lua	/^function lued.prompt(hist_id,prompt,hot,test_str)$/;"	f
lued.psub	lua_src/core/display.lua	/^function lued.psub(subject, from, to, index, lim)$/;"	f
lued.push_grep_stack	lua_src/core/find.lua	/^function lued.push_grep_stack(row, col, fileid)$/;"	f
lued.push_jump_stack	lua_src/core/find.lua	/^function lued.push_jump_stack(stack, fileid, row, col)$/;"	f
lued.push_keystroke	lua_src/core/replay.lua	/^function lued.push_keystroke(cmd)$/;"	f
lued.pwd	lua_src/core/files.lua	/^function lued.pwd()$/;"	f
lued.python.class	lua_src/plugins/python.lua	/^function lued.python.class()$/;"	f
lued.python.for_loop	lua_src/plugins/python.lua	/^function lued.python.for_loop()$/;"	f
lued.python.func	lua_src/plugins/python.lua	/^function lued.python.func()$/;"	f
lued.python.if_statement	lua_src/plugins/python.lua	/^function lued.python.if_statement()$/;"	f
lued.python.program	lua_src/plugins/python.lua	/^function lued.python.program()$/;"	f
lued.python.while_loop	lua_src/plugins/python.lua	/^function lued.python.while_loop()$/;"	f
lued.quit_all	lua_src/core/quit.lua	/^function lued.quit_all(force, dd)$/;"	f
lued.quit_session	lua_src/core/quit.lua	/^function lued.quit_session(force,dd)$/;"	f
lued.read_dir	lua_src/core/os.lua	/^function lued.read_dir(glob)$/;"	f
lued.recenter	lua_src/base/center_page.lua	/^function lued.recenter(dd)$/;"	f
lued.recenter_top	lua_src/base/center_page.lua	/^function lued.recenter_top(dd)$/;"	f
lued.redo_cmd	lua_src/core/undo.lua	/^function lued.redo_cmd(dd)$/;"	f
lued.reindent	lua_src/base/indent.lua	/^function lued.reindent(n,dd)$/;"	f
lued.reindent_all	lua_src/base/indent.lua	/^function lued.reindent_all(n,dd)$/;"	f
lued.reindent_selected	lua_src/base/indent.lua	/^function lued.reindent_selected(dd)$/;"	f
lued.reinit	lua_src/core/lued_lib.lua	/^function lued.reinit(dd)$/;"	f
lued.reload_file	lua_src/core/files.lua	/^function lued.reload_file(dd)$/;"	f
lued.remove_all_leading_tabs	lua_src/base/remove.lua	/^function lued.remove_all_leading_tabs(tab_size,dd)$/;"	f
lued.remove_all_trailing_space	lua_src/base/remove.lua	/^function lued.remove_all_trailing_space(dd)$/;"	f
lued.remove_all_trailing_space_all_files	lua_src/base/remove.lua	/^function lued.remove_all_trailing_space_all_files(dd)$/;"	f
lued.remove_trailing_spaces	lua_src/core/lued_lib.lua	/^function lued.remove_trailing_spaces(next_row,next_col,force,dd)$/;"	f
lued.replace_again	lua_src/core/find.lua	/^function lued.replace_again(dd)$/;"	f
lued.replace_prompt	lua_src/core/find.lua	/^function lued.replace_prompt()$/;"	f
lued.replay_again	lua_src/core/replay.lua	/^function lued.replay_again(dd)$/;"	f
lued.replay_keystrokes	lua_src/core/replay.lua	/^function lued.replay_keystrokes(again,dd)$/;"	f
lued.replay_keystrokes_bind	lua_src/core/replay.lua	/^function lued.replay_keystrokes_bind(n, dd)$/;"	f
lued.replay_n_keystrokes	lua_src/core/replay.lua	/^function lued.replay_n_keystrokes(n, dd)$/;"	f
lued.replay_name	lua_src/core/replay.lua	/^function lued.replay_name(dd)$/;"	f
lued.resize_lines	lua_src/core/display.lua	/^function lued.resize_lines(lines,offset,len)$/;"	f
lued.restore_pos	lua_src/core/getters_setters.lua	/^function lued.restore_pos()$/;"	f
lued.same_keystroke	lua_src/core/replay.lua	/^function lued.same_keystroke()$/;"	f
lued.save_all	lua_src/core/files.lua	/^function lued.save_all(dd)$/;"	f
lued.save_as	lua_src/core/files.lua	/^function lued.save_as(filename, dd)$/;"	f
lued.save_file	lua_src/core/files.lua	/^function lued.save_file(dd)$/;"	f
lued.save_pos	lua_src/core/getters_setters.lua	/^function lued.save_pos()$/;"	f
lued.save_session_file	lua_src/base/sessions.lua	/^function lued.save_session_file(dd)$/;"	f
lued.search_all_files	lua_src/core/find.lua	/^function lued.search_all_files(str,dd)$/;"	f
lued.sel_all	lua_src/core/select.lua	/^function lued.sel_all(dd)$/;"	f
lued.sel_eof	lua_src/core/select.lua	/^function lued.sel_eof(dd)$/;"	f
lued.sel_eol	lua_src/core/select.lua	/^function lued.sel_eol(dd)$/;"	f
lued.sel_eow	lua_src/core/select.lua	/^function lued.sel_eow(dd)$/;"	f
lued.sel_indentation	lua_src/base/indent.lua	/^function lued.sel_indentation(dd)$/;"	f
lued.sel_inside_braces	lua_src/core/select.lua	/^function lued.sel_inside_braces(dd)$/;"	f
lued.sel_left_nonspaces	lua_src/core/select.lua	/^function lued.sel_left_nonspaces(dd)$/;"	f
lued.sel_left_pattern	lua_src/core/select.lua	/^function lued.sel_left_pattern(pattern , dd)$/;"	f
lued.sel_line	lua_src/core/select.lua	/^function lued.sel_line(n,dd)$/;"	f
lued.sel_mark_to_cursor	lua_src/base/markers.lua	/^function lued.sel_mark_to_cursor(dd)$/;"	f
lued.sel_n_char	lua_src/core/select.lua	/^function lued.sel_n_char(n,dd)$/;"	f
lued.sel_number	lua_src/core/select.lua	/^function lued.sel_number(dd)$/;"	f
lued.sel_range	lua_src/core/select.lua	/^function lued.sel_range(r1,c1,r2,c2)$/;"	f
lued.sel_sof	lua_src/core/select.lua	/^function lued.sel_sof(dd)$/;"	f
lued.sel_sol	lua_src/core/select.lua	/^function lued.sel_sol(dd)$/;"	f
lued.sel_sow	lua_src/core/select.lua	/^function lued.sel_sow(dd)$/;"	f
lued.sel_to_lower	lua_src/core/select.lua	/^function lued.sel_to_lower(dd)$/;"	f
lued.sel_to_match	lua_src/core/find.lua	/^function lued.sel_to_match(dd)$/;"	f
lued.sel_to_match_reverse	lua_src/core/find.lua	/^function lued.sel_to_match_reverse(dd)$/;"	f
lued.sel_to_upper	lua_src/core/select.lua	/^function lued.sel_to_upper(dd)$/;"	f
lued.sel_toggle	lua_src/core/select.lua	/^function lued.sel_toggle(dd)$/;"	f
lued.sel_word	lua_src/core/select.lua	/^function lued.sel_word(dd)$/;"	f
lued.select_tab	lua_src/base/multifile.lua	/^function lued.select_tab(filter)$/;"	f
lued.select_tab_menu	lua_src/base/multifile.lua	/^function lued.select_tab_menu(filter,dont_print)$/;"	f
lued.selector_menu	lua_src/core/files.lua	/^function lued.selector_menu(sel_table)$/;"	f
lued.session_sel	lua_src/base/sessions.lua	/^function lued.session_sel(session_id,dd)$/;"	f
lued.set_abs_line_numbers	lua_src/base/linenumbers.lua	/^function lued.set_abs_line_numbers(dd)$/;"	f
lued.set_auto_indent	lua_src/base/indent.lua	/^function lued.set_auto_indent(dd)$/;"	f
lued.set_comment	lua_src/base/comments.lua	/^function lued.set_comment(dd)$/;"	f
lued.set_ctrl_c_abort 	lua_src/core/terminal.lua	/^function lued.set_ctrl_c_abort (bool, dd)$/;"	f
lued.set_ctrl_s_flow_control 	lua_src/core/terminal.lua	/^function lued.set_ctrl_s_flow_control (bool, dd)$/;"	f
lued.set_ctrl_z_suspend 	lua_src/core/terminal.lua	/^function lued.set_ctrl_z_suspend (bool, dd)$/;"	f
lued.set_cur_pos	lua_src/core/getters_setters.lua	/^function lued.set_cur_pos(r_new, c_new)$/;"	f
lued.set_edit_mode	lua_src/core/getters_setters.lua	/^function lued.set_edit_mode(dd)$/;"	f
lued.set_find_case_sensitive	lua_src/core/find.lua	/^function lued.set_find_case_sensitive(dd)$/;"	f
lued.set_find_whole_word	lua_src/core/find.lua	/^function lued.set_find_whole_word(dd)$/;"	f
lued.set_indent_size	lua_src/base/indent.lua	/^function lued.set_indent_size(dd)$/;"	f
lued.set_lua_mode	lua_src/core/getters_setters.lua	/^function lued.set_lua_mode(dd)$/;"	f
lued.set_min_lines_from_bot	lua_src/core/getters_setters.lua	/^function lued.set_min_lines_from_bot(val,dd)$/;"	f
lued.set_min_lines_from_top	lua_src/core/getters_setters.lua	/^function lued.set_min_lines_from_top(val,dd)$/;"	f
lued.set_move_down_n_lines	lua_src/core/move.lua	/^function lued.set_move_down_n_lines(val,dd)$/;"	f
lued.set_move_left_n_char	lua_src/core/move.lua	/^function lued.set_move_left_n_char(n,dd)$/;"	f
lued.set_move_right_n_char	lua_src/core/move.lua	/^function lued.set_move_right_n_char(n,dd)$/;"	f
lued.set_move_up_n_lines	lua_src/core/move.lua	/^function lued.set_move_up_n_lines(val,dd)$/;"	f
lued.set_named_mark	lua_src/base/markers.lua	/^function lued.set_named_mark(dd)$/;"	f
lued.set_nameless_mark	lua_src/base/markers.lua	/^function lued.set_nameless_mark(dd)$/;"	f
lued.set_number	lua_src/core/getters_setters.lua	/^function lued.set_number(prompt_id, prompt, num)$/;"	f
lued.set_overtype	lua_src/core/getters_setters.lua	/^function lued.set_overtype(val,dd)$/;"	f
lued.set_page_offset_percent	lua_src/base/center_page.lua	/^function lued.set_page_offset_percent(offset,dd)$/;"	f
lued.set_pagesize	lua_src/core/getters_setters.lua	/^function lued.set_pagesize(val,dd)$/;"	f
lued.set_paste_buffer	lua_src/core/copy_paste.lua	/^function lued.set_paste_buffer(str,dd)$/;"	f
lued.set_rc	lua_src/core/getters_setters.lua	/^function lued.set_rc(row, col, dd)$/;"	f
lued.set_rcf	lua_src/core/getters_setters.lua	/^function lued.set_rcf(row, col, fileid, dd)$/;"	f
lued.set_rel_line_numbers	lua_src/base/linenumbers.lua	/^function lued.set_rel_line_numbers(dd)$/;"	f
lued.set_sb_files	lua_src/base/sidebar.lua	/^function lued.set_sb_files(dd)$/;"	f
lued.set_scope_indent	lua_src/base/indent.lua	/^function lued.set_scope_indent(val,dd)$/;"	f
lued.set_sel_from_to	lua_src/core/select.lua	/^function lued.set_sel_from_to(sel_sr,sel_sc,sel_er,sel_ec,dd)$/;"	f
lued.set_sel_off	lua_src/core/getters_setters.lua	/^function lued.set_sel_off()$/;"	f
lued.set_style	lua_src/core/style.lua	/^function lued.set_style(fg,bg,decorations)$/;"	f
lued.set_tab_size	lua_src/core/getters_setters.lua	/^function lued.set_tab_size(val,dd)$/;"	f
lued.set_wrap_col	lua_src/base/wrap.lua	/^function lued.set_wrap_col(dd)$/;"	f
lued.show_colors	lua_src/core/style.lua	/^function lued.show_colors()$/;"	f
lued.show_keystroke_hist	lua_src/core/replay.lua	/^function lued.show_keystroke_hist(prompt)$/;"	f
lued.show_list	lua_src/core/replay.lua	/^function lued.show_list(list,id,prompt)$/;"	f
lued.sidebar	lua_src/base/sidebar.lua	/^function lued.sidebar(lines)$/;"	f
lued.sidebar	lua_src/core/style.lua	/^function lued.sidebar(lines) -- Dummy function, usually replaced by base.sidebar$/;"	f
lued.skip_spaces	lua_src/core/move.lua	/^function lued.skip_spaces(dd)$/;"	f
lued.skip_spaces_left	lua_src/core/move.lua	/^function lued.skip_spaces_left(dd)$/;"	f
lued.skip_spaces_right	lua_src/core/move.lua	/^function lued.skip_spaces_right(dd)$/;"	f
lued.skip_variable	lua_src/core/move.lua	/^function lued.skip_variable(dd)$/;"	f
lued.spare	lua_src/core/hotkeys.lua	/^function lued.spare()$/;"	f
lued.split_string 	lua_src/base/ctags.lua	/^function lued.split_string (str, delimiter)$/;"	f
lued.string_ltrim	lua_src/core/lued_lib.lua	/^function lued.string_ltrim(s)$/;"	f
lued.string_num_leading_spaces	lua_src/core/lued_lib.lua	/^function lued.string_num_leading_spaces(s)$/;"	f
lued.string_rtrim	lua_src/core/lued_lib.lua	/^function lued.string_rtrim(s)$/;"	f
lued.string_trim	lua_src/core/lued_lib.lua	/^function lued.string_trim(s)$/;"	f
lued.style_keyword	lua_src/core/style.lua	/^function lued.style_keyword(str)$/;"	f
lued.style_keywords	lua_src/core/style.lua	/^function lued.style_keywords(line)$/;"	f
lued.style_page	lua_src/core/style.lua	/^function lued.style_page(lines, first_line_of_page, row_offset)$/;"	f
lued.swap_line_with_next	lua_src/base/swap.lua	/^function lued.swap_line_with_next(dd)$/;"	f
lued.swap_line_with_prev	lua_src/base/swap.lua	/^function lued.swap_line_with_prev(dd)$/;"	f
lued.tab_next	lua_src/base/multifile.lua	/^function lued.tab_next(dd)$/;"	f
lued.tab_prev	lua_src/base/multifile.lua	/^function lued.tab_prev(dd)$/;"	f
lued.tab_toggle	lua_src/base/multifile.lua	/^function lued.tab_toggle(dd)$/;"	f
lued.todo	lua_src/plugins/todo.lua	/^  function lued.todo()$/;"	f
lued.toggle_auto_indent	lua_src/base/indent.lua	/^function lued.toggle_auto_indent(dd)$/;"	f
lued.toggle_bottom	lua_src/core/move.lua	/^function lued.toggle_bottom(dd)$/;"	f
lued.toggle_ctrl_c_abort 	lua_src/core/terminal.lua	/^function lued.toggle_ctrl_c_abort (dd)$/;"	f
lued.toggle_ctrl_z_suspend 	lua_src/core/terminal.lua	/^function lued.toggle_ctrl_z_suspend (dd)$/;"	f
lued.toggle_doublespeed	lua_src/core/getters_setters.lua	/^function lued.toggle_doublespeed(dd)$/;"	f
lued.toggle_enable_file_changed	lua_src/core/getters_setters.lua	/^function lued.toggle_enable_file_changed(dd)$/;"	f
lued.toggle_express_mode	lua_src/core/getters_setters.lua	/^function lued.toggle_express_mode(dd)$/;"	f
lued.toggle_find_whole_word	lua_src/core/find.lua	/^function lued.toggle_find_whole_word(dd)$/;"	f
lued.toggle_overtype	lua_src/core/getters_setters.lua	/^function lued.toggle_overtype(dd)$/;"	f
lued.toggle_remove_trailing_spaces	lua_src/core/getters_setters.lua	/^function lued.toggle_remove_trailing_spaces(dd)$/;"	f
lued.toggle_review_mode	lua_src/core/files.lua	/^function lued.toggle_review_mode(dd)$/;"	f
lued.toggle_show_trailing_spaces	lua_src/core/getters_setters.lua	/^function lued.toggle_show_trailing_spaces(dd)$/;"	f
lued.toggle_top	lua_src/core/move.lua	/^function lued.toggle_top(dd)$/;"	f
lued.uncomment	lua_src/base/comments.lua	/^function lued.uncomment(dd)$/;"	f
lued.uncomment_move_down	lua_src/base/comments.lua	/^function lued.uncomment_move_down(dd)$/;"	f
lued.uncomment_selected	lua_src/base/comments.lua	/^function lued.uncomment_selected(dd)$/;"	f
lued.undo_cmd	lua_src/core/undo.lua	/^function lued.undo_cmd(dd)$/;"	f
lued.unindent1	lua_src/base/indent.lua	/^function lued.unindent1(n, ch, goto_next, dd)$/;"	f
lued.unindent_selected	lua_src/base/indent.lua	/^function lued.unindent_selected(dd)$/;"	f
lued.var_end	lua_src/core/move.lua	/^function lued.var_end(dd)$/;"	f
lued.var_start	lua_src/core/select.lua	/^function lued.var_start(dd)$/;"	f
lued.verilog.always_block	lua_src/plugins/verilog.lua	/^function lued.verilog.always_block(dd)$/;"	f
lued.verilog.always_star	lua_src/plugins/verilog.lua	/^function lued.verilog.always_star()$/;"	f
lued.verilog.case	lua_src/plugins/verilog.lua	/^function lued.verilog.case()$/;"	f
lued.verilog.clk1	lua_src/plugins/verilog.lua	/^function lued.verilog.clk1()$/;"	f
lued.verilog.clkgen	lua_src/plugins/verilog.lua	/^function lued.verilog.clkgen()$/;"	f
lued.verilog.clkn	lua_src/plugins/verilog.lua	/^function lued.verilog.clkn()$/;"	f
lued.verilog.for_loop	lua_src/plugins/verilog.lua	/^function lued.verilog.for_loop()$/;"	f
lued.verilog.func	lua_src/plugins/verilog.lua	/^function lued.verilog.func()$/;"	f
lued.verilog.help	lua_src/plugins/verilog.lua	/^function lued.verilog.help()$/;"	f
lued.verilog.inst_from_portlist	lua_src/plugins/verilog.lua	/^function lued.verilog.inst_from_portlist(dd)$/;"	f
lued.verilog.inst_from_portlist_wrapper	lua_src/plugins/verilog.lua	/^function lued.verilog.inst_from_portlist_wrapper()$/;"	f
lued.verilog.log	lua_src/plugins/verilog.lua	/^function lued.verilog.log()$/;"	f
lued.verilog.record	lua_src/plugins/verilog.lua	/^function lued.verilog.record()$/;"	f
lued.verilog.sel_entity	lua_src/plugins/verilog.lua	/^function lued.verilog.sel_entity(dd)$/;"	f
lued.verilog.sig_from_portlist	lua_src/plugins/verilog.lua	/^function lued.verilog.sig_from_portlist()$/;"	f
lued.verilog.state	lua_src/plugins/verilog.lua	/^function lued.verilog.state()$/;"	f
lued.verilog.tb	lua_src/plugins/verilog.lua	/^function lued.verilog.tb()$/;"	f
lued.verilog.template	lua_src/plugins/verilog.lua	/^function lued.verilog.template()$/;"	f
lued.verilog.type_slv_array	lua_src/plugins/verilog.lua	/^function lued.verilog.type_slv_array()$/;"	f
lued.vhdl.case	lua_src/plugins/vhdl.lua	/^function lued.vhdl.case()$/;"	f
lued.vhdl.clk1	lua_src/plugins/vhdl.lua	/^function lued.vhdl.clk1()$/;"	f
lued.vhdl.clkgen	lua_src/plugins/vhdl.lua	/^function lued.vhdl.clkgen()$/;"	f
lued.vhdl.clkn	lua_src/plugins/vhdl.lua	/^function lued.vhdl.clkn()$/;"	f
lued.vhdl.func	lua_src/plugins/vhdl.lua	/^function lued.vhdl.func()$/;"	f
lued.vhdl.help	lua_src/plugins/vhdl.lua	/^function lued.vhdl.help()$/;"	f
lued.vhdl.inst_from_entity	lua_src/plugins/vhdl.lua	/^function lued.vhdl.inst_from_entity(dd)$/;"	f
lued.vhdl.inst_from_entity_wrapper	lua_src/plugins/vhdl.lua	/^function lued.vhdl.inst_from_entity_wrapper()$/;"	f
lued.vhdl.log	lua_src/plugins/vhdl.lua	/^function lued.vhdl.log()$/;"	f
lued.vhdl.others	lua_src/plugins/vhdl.lua	/^function lued.vhdl.others()$/;"	f
lued.vhdl.others_2d	lua_src/plugins/vhdl.lua	/^function lued.vhdl.others_2d()$/;"	f
lued.vhdl.package	lua_src/plugins/vhdl.lua	/^function lued.vhdl.package()$/;"	f
lued.vhdl.proc	lua_src/plugins/vhdl.lua	/^function lued.vhdl.proc(dd)$/;"	f
lued.vhdl.proc_all	lua_src/plugins/vhdl.lua	/^function lued.vhdl.proc_all()$/;"	f
lued.vhdl.record	lua_src/plugins/vhdl.lua	/^function lued.vhdl.record()$/;"	f
lued.vhdl.resize	lua_src/plugins/vhdl.lua	/^function lued.vhdl.resize(t)$/;"	f
lued.vhdl.sel_entity	lua_src/plugins/vhdl.lua	/^function lued.vhdl.sel_entity(dd)$/;"	f
lued.vhdl.sig_from_entity	lua_src/plugins/vhdl.lua	/^function lued.vhdl.sig_from_entity()$/;"	f
lued.vhdl.signed	lua_src/plugins/vhdl.lua	/^function lued.vhdl.signed()$/;"	f
lued.vhdl.signed_resize	lua_src/plugins/vhdl.lua	/^function lued.vhdl.signed_resize() lued.vhdl.resize("signed") end$/;"	f
lued.vhdl.sl	lua_src/plugins/vhdl.lua	/^function lued.vhdl.sl()$/;"	f
lued.vhdl.slv	lua_src/plugins/vhdl.lua	/^function lued.vhdl.slv()$/;"	f
lued.vhdl.slv_array	lua_src/plugins/vhdl.lua	/^function lued.vhdl.slv_array()$/;"	f
lued.vhdl.slv_incr	lua_src/plugins/vhdl.lua	/^function lued.vhdl.slv_incr(dd)$/;"	f
lued.vhdl.slv_resize	lua_src/plugins/vhdl.lua	/^function lued.vhdl.slv_resize() lued.vhdl.resize("slv") end$/;"	f
lued.vhdl.state	lua_src/plugins/vhdl.lua	/^function lued.vhdl.state()$/;"	f
lued.vhdl.tb	lua_src/plugins/vhdl.lua	/^function lued.vhdl.tb()$/;"	f
lued.vhdl.template	lua_src/plugins/vhdl.lua	/^function lued.vhdl.template()$/;"	f
lued.vhdl.type_slv_array	lua_src/plugins/vhdl.lua	/^function lued.vhdl.type_slv_array()$/;"	f
lued.vhdl.unsigned	lua_src/plugins/vhdl.lua	/^function lued.vhdl.unsigned()$/;"	f
lued.vhdl.unsigned_resize	lua_src/plugins/vhdl.lua	/^function lued.vhdl.unsigned_resize() lued.vhdl.resize("unsigned") end$/;"	f
lued.word_start	lua_src/core/select.lua	/^function lued.word_start(dd)$/;"	f
lued.wrap_line	lua_src/base/wrap.lua	/^function lued.wrap_line(dd)$/;"	f
lued_args	src/lued.c	/^static int lued_args(int argc, char** argv, carr_t* dofile, carr_t* cmd, carr_t* linenumber) {$/;"	f	file:
lued_atexit	src/lued.c	/^void lued_atexit() {$/;"	f
lued_atstart	src/lued.c	/^void lued_atstart() {$/;"	f
lued_init_sessions	src/lued.c	/^static carr_t* lued_init_sessions(int argc, char* argv[], int optind, bool run_dofile) {$/;"	f	file:
lued_insertx	src/lued.c	/^int lued_insertx(lued_t* l, uint32_t row, uint32_t col, char* str)$/;"	f
lued_main	src/lued.c	/^int lued_main (int argc, char** argv)$/;"	f
lued_open	src/lued.c	/^lued_t* lued_open(carr_t* all_sessions, const char* filename)$/;"	f
lued_reg	src/lued.c	/^lua_State* lued_reg () {$/;"	f
luedc_get_lines	src/lued.c	/^int luedc_get_lines(lued_t* l, size_t from_row, size_t num_rows,$/;"	f
luedc_get_page	src/lued.c	/^int luedc_get_page(lued_t* l, uint32_t from_row, uint32_t num_rows,$/;"	f
luedc_insert	src/lued.c	/^int luedc_insert(lued_t* l, uint32_t r, uint32_t c, char* s)$/;"	f
luedc_overwrite	src/lued.c	/^int luedc_overwrite(lued_t* l, uint32_t r, uint32_t c, char* s)$/;"	f
lundump_c	src/lua/src/lundump.c	9;"	d	file:
lvm_c	src/lua/src/lvm.c	12;"	d	file:
lzio_c	src/lua/src/lzio.c	10;"	d	file:
main	src/lua/src/lua.c	/^int main (int argc, char **argv) {$/;"	f
main	src/main.c	/^int main(int argc, char* argv[])$/;"	f
mainfunc	src/lua/src/lparser.c	/^static void mainfunc (LexState *ls, FuncState *fs) {$/;"	f	file:
mainposition	src/lua/src/ltable.c	/^static Node *mainposition (const Table *t, const TValue *key) {$/;"	f	file:
makeCfunc	src/lua/src/ltests.c	/^static int makeCfunc (lua_State *L) {$/;"	f	file:
makemask	src/lua/src/ldblib.c	/^static int makemask (const char *smask, int count) {$/;"	f	file:
makeseed	src/lua/src/lstate.c	/^static unsigned int makeseed (lua_State *L) {$/;"	f	file:
makewhite	src/lua/src/lgc.c	59;"	d	file:
markbeingfnz	src/lua/src/lgc.c	/^static void markbeingfnz (global_State *g) {$/;"	f	file:
markgrays	src/lua/src/ltests.c	/^static void markgrays (global_State *g) {$/;"	f	file:
marklen	src/lua/src/lua.c	247;"	d	file:
markmt	src/lua/src/lgc.c	/^static void markmt (global_State *g) {$/;"	f	file:
markobject	src/lua/src/lgc.c	78;"	d	file:
markupval	src/lua/src/lparser.c	/^static void markupval (FuncState *fs, int level) {$/;"	f	file:
markvalue	src/lua/src/lgc.c	75;"	d	file:
mask	src/lua/src/lbitlib.c	29;"	d	file:
maskcolors	src/lua/src/lgc.c	58;"	d	file:
match	src/lua/src/lstrlib.c	/^static const char *match (MatchState *ms, const char *s, const char *p) {$/;"	f	file:
match_capture	src/lua/src/lstrlib.c	/^static const char *match_capture (MatchState *ms, const char *s, int l) {$/;"	f	file:
match_class	src/lua/src/lstrlib.c	/^static int match_class (int c, int cl) {$/;"	f	file:
matchbalance	src/lua/src/lstrlib.c	/^static const char *matchbalance (MatchState *ms, const char *s,$/;"	f	file:
matchbracketclass	src/lua/src/lstrlib.c	/^static int matchbracketclass (int c, const char *p, const char *ec) {$/;"	f	file:
matchdepth	src/lua/src/lstrlib.c	/^  int matchdepth;  \/* control for recursive depth (to avoid C stack overflow) *\/$/;"	m	struct:MatchState	file:
math_abs	src/lua/src/lmathlib.c	/^static int math_abs (lua_State *L) {$/;"	f	file:
math_acos	src/lua/src/lmathlib.c	/^static int math_acos (lua_State *L) {$/;"	f	file:
math_asin	src/lua/src/lmathlib.c	/^static int math_asin (lua_State *L) {$/;"	f	file:
math_atan	src/lua/src/lmathlib.c	/^static int math_atan (lua_State *L) {$/;"	f	file:
math_atan2	src/lua/src/lmathlib.c	/^static int math_atan2 (lua_State *L) {$/;"	f	file:
math_ceil	src/lua/src/lmathlib.c	/^static int math_ceil (lua_State *L) {$/;"	f	file:
math_cos	src/lua/src/lmathlib.c	/^static int math_cos (lua_State *L) {$/;"	f	file:
math_cosh	src/lua/src/lmathlib.c	/^static int math_cosh (lua_State *L) {$/;"	f	file:
math_deg	src/lua/src/lmathlib.c	/^static int math_deg (lua_State *L) {$/;"	f	file:
math_exp	src/lua/src/lmathlib.c	/^static int math_exp (lua_State *L) {$/;"	f	file:
math_floor	src/lua/src/lmathlib.c	/^static int math_floor (lua_State *L) {$/;"	f	file:
math_fmod	src/lua/src/lmathlib.c	/^static int math_fmod (lua_State *L) {$/;"	f	file:
math_frexp	src/lua/src/lmathlib.c	/^static int math_frexp (lua_State *L) {$/;"	f	file:
math_ldexp	src/lua/src/lmathlib.c	/^static int math_ldexp (lua_State *L) {$/;"	f	file:
math_log	src/lua/src/lmathlib.c	/^static int math_log (lua_State *L) {$/;"	f	file:
math_log10	src/lua/src/lmathlib.c	/^static int math_log10 (lua_State *L) {$/;"	f	file:
math_max	src/lua/src/lmathlib.c	/^static int math_max (lua_State *L) {$/;"	f	file:
math_min	src/lua/src/lmathlib.c	/^static int math_min (lua_State *L) {$/;"	f	file:
math_modf	src/lua/src/lmathlib.c	/^static int math_modf (lua_State *L) {$/;"	f	file:
math_pow	src/lua/src/lmathlib.c	/^static int math_pow (lua_State *L) {$/;"	f	file:
math_rad	src/lua/src/lmathlib.c	/^static int math_rad (lua_State *L) {$/;"	f	file:
math_random	src/lua/src/lmathlib.c	/^static int math_random (lua_State *L) {$/;"	f	file:
math_randomseed	src/lua/src/lmathlib.c	/^static int math_randomseed (lua_State *L) {$/;"	f	file:
math_sin	src/lua/src/lmathlib.c	/^static int math_sin (lua_State *L) {$/;"	f	file:
math_sinh	src/lua/src/lmathlib.c	/^static int math_sinh (lua_State *L) {$/;"	f	file:
math_sqrt	src/lua/src/lmathlib.c	/^static int math_sqrt (lua_State *L) {$/;"	f	file:
math_tan	src/lua/src/lmathlib.c	/^static int math_tan (lua_State *L) {$/;"	f	file:
math_tanh	src/lua/src/lmathlib.c	/^static int math_tanh (lua_State *L) {$/;"	f	file:
mathlib	src/lua/src/lmathlib.c	/^static const luaL_Reg mathlib[] = {$/;"	v	file:
max_expand	src/lua/src/lstrlib.c	/^static const char *max_expand (MatchState *ms, const char *s,$/;"	f	file:
maxn	src/lua/src/ltablib.c	/^static int maxn (lua_State *L) {$/;"	f	file:
mem_is_zero	src/carr/src/carr.c	/^int mem_is_zero(const void* const ptr, uint32_t size)$/;"	f
mem_query	src/lua/src/ltests.c	/^static int mem_query (lua_State *L) {$/;"	f	file:
min_expand	src/lua/src/lstrlib.c	/^static const char *min_expand (MatchState *ms, const char *s,$/;"	f	file:
mode	src/lua/src/ldo.c	/^  const char *mode;$/;"	m	struct:SParser	file:
modinit	src/lua/src/loadlib.c	/^static void modinit (lua_State *L, const char *modname) {$/;"	f	file:
move_marks	src/lued.c	/^static void move_marks(lued_t* session_p, uint32_t row, int32_t delta) {$/;"	f	file:
movegotosout	src/lua/src/lparser.c	/^static void movegotosout (FuncState *fs, BlockCnt *bl) {$/;"	f	file:
moveto	src/lua/src/lapi.c	/^static void moveto (lua_State *L, TValue *fr, int idx) {$/;"	f	file:
my_strcpy	src/lued.c	/^uint32_t my_strcpy(char* base, uint32_t offset, const char* src, uint32_t max_size) {$/;"	f
n	src/lua/src/lauxlib.c	/^  int n;  \/* number of pre-read characters *\/$/;"	m	struct:LoadF	file:
na	src/lua/src/lparser.c	/^  int na;  \/* total number of array elements *\/$/;"	m	struct:ConsControl	file:
nactvar	src/lua/src/lparser.c	/^  lu_byte nactvar;  \/* # active locals outside the block *\/$/;"	m	struct:BlockCnt	file:
name	src/lua/src/ldo.c	/^  const char *name;$/;"	m	struct:SParser	file:
name	src/lua/src/lundump.c	/^ const char* name;$/;"	m	struct:__anon5	file:
need_value	src/lua/src/lcode.c	/^static int need_value (FuncState *fs, int list) {$/;"	f	file:
new_localvar	src/lua/src/lparser.c	/^static void new_localvar (LexState *ls, TString *name) {$/;"	f	file:
new_localvarliteral	src/lua/src/lparser.c	194;"	d	file:
new_localvarliteral_	src/lua/src/lparser.c	/^static void new_localvarliteral_ (LexState *ls, const char *name, size_t sz) {$/;"	f	file:
newfile	src/lua/src/liolib.c	/^static LStream *newfile (lua_State *L) {$/;"	f	file:
newlabelentry	src/lua/src/lparser.c	/^static int newlabelentry (LexState *ls, Labellist *l, TString *name,$/;"	f	file:
newprefile	src/lua/src/liolib.c	/^static LStream *newprefile (lua_State *L) {$/;"	f	file:
newshrstr	src/lua/src/lstring.c	/^static TString *newshrstr (lua_State *L, const char *str, size_t l,$/;"	f	file:
newstate	src/lua/src/ltests.c	/^static int newstate (lua_State *L) {$/;"	f	file:
newupvalue	src/lua/src/lparser.c	/^static int newupvalue (FuncState *fs, TString *name, expdesc *v) {$/;"	f	file:
newuserdata	src/lua/src/ltests.c	/^static int newuserdata (lua_State *L) {$/;"	f	file:
next	src/lua/src/llex.c	28;"	d	file:
next_ci	src/lua/src/ldo.c	290;"	d	file:
nh	src/lua/src/lparser.c	/^  int nh;  \/* total number of `record' elements *\/$/;"	m	struct:ConsControl	file:
nilK	src/lua/src/lcode.c	/^static int nilK (FuncState *fs) {$/;"	f	file:
noLuaClosure	src/lua/src/ldebug.c	33;"	d	file:
noenv	src/lua/src/loadlib.c	/^static int noenv (lua_State *L) {$/;"	f	file:
noextrachars	src/lua/src/lua.c	347;"	d	file:
non_repeatables	src/carr/src/carr_readline_lua.c	/^char non_repeatables[LUA_MAXINPUT] = ",bo,sb,se,sl,sw,to,";$/;"	v
nospecials	src/lua/src/lstrlib.c	/^static int nospecials (const char *p, size_t l) {$/;"	f	file:
nresults	src/lua/src/lapi.c	/^  int nresults;$/;"	m	struct:CallS	file:
num2int	src/lua/src/ltests.c	/^static int num2int (lua_State *L) {$/;"	f	file:
num_has	src/lua/src/lua.c	356;"	d	file:
numusearray	src/lua/src/ltable.c	/^static int numusearray (const Table *t, int *nums) {$/;"	f	file:
numusehash	src/lua/src/ltable.c	/^static int numusehash (const Table *t, int *nums, int *pnasize) {$/;"	f	file:
obj_at	src/lua/src/ltests.c	46;"	d	file:
open_func	src/lua/src/lparser.c	/^static void open_func (LexState *ls, FuncState *fs, BlockCnt *bl) {$/;"	f	file:
opencheck	src/lua/src/liolib.c	/^static void opencheck (lua_State *L, const char *fname, const char *mode) {$/;"	f	file:
opmode	src/lua/src/lopcodes.c	62;"	d	file:
os_clock	src/lua/src/loslib.c	/^static int os_clock (lua_State *L) {$/;"	f	file:
os_date	src/lua/src/loslib.c	/^static int os_date (lua_State *L) {$/;"	f	file:
os_difftime	src/lua/src/loslib.c	/^static int os_difftime (lua_State *L) {$/;"	f	file:
os_execute	src/lua/src/loslib.c	/^static int os_execute (lua_State *L) {$/;"	f	file:
os_exit	src/lua/src/loslib.c	/^static int os_exit (lua_State *L) {$/;"	f	file:
os_getenv	src/lua/src/loslib.c	/^static int os_getenv (lua_State *L) {$/;"	f	file:
os_remove	src/lua/src/loslib.c	/^static int os_remove (lua_State *L) {$/;"	f	file:
os_rename	src/lua/src/loslib.c	/^static int os_rename (lua_State *L) {$/;"	f	file:
os_setlocale	src/lua/src/loslib.c	/^static int os_setlocale (lua_State *L) {$/;"	f	file:
os_time	src/lua/src/loslib.c	/^static int os_time (lua_State *L) {$/;"	f	file:
os_tmpname	src/lua/src/loslib.c	/^static int os_tmpname (lua_State *L) {$/;"	f	file:
p_end	src/lua/src/lstrlib.c	/^  const char *p_end;  \/* end ('\\0') of pattern *\/$/;"	m	struct:MatchState	file:
pack	src/lua/src/ltablib.c	/^static int pack (lua_State *L) {$/;"	f	file:
pairsmeta	src/lua/src/lbaselib.c	/^static int pairsmeta (lua_State *L, const char *method, int iszero,$/;"	f	file:
panic	src/lua/src/lauxlib.c	/^static int panic (lua_State *L) {$/;"	f	file:
parlist	src/lua/src/lparser.c	/^static void parlist (LexState *ls) {$/;"	f	file:
patchlistaux	src/lua/src/lcode.c	/^static void patchlistaux (FuncState *fs, int list, int vtarget, int reg,$/;"	f	file:
patchtestreg	src/lua/src/lcode.c	/^static int patchtestreg (FuncState *fs, int node, int reg) {$/;"	f	file:
pcallcont	src/lua/src/lbaselib.c	/^static int pcallcont (lua_State *L) {$/;"	f	file:
pk_funcs	src/lua/src/loadlib.c	/^static const luaL_Reg pk_funcs[] = {$/;"	v	file:
pmain	src/lua/src/lua.c	/^static int pmain (lua_State *L) {$/;"	f	file:
posrelat	src/lua/src/lstrlib.c	/^static size_t posrelat (ptrdiff_t pos, size_t len) {$/;"	f	file:
preinit_state	src/lua/src/lstate.c	/^static void preinit_state (lua_State *L, global_State *g) {$/;"	f	file:
preloadedlibs	src/lua/src/linit.c	/^static const luaL_Reg preloadedlibs[] = {$/;"	v	file:
prev	src/lua/src/lparser.c	/^  struct LHS_assign *prev;$/;"	m	struct:LHS_assign	typeref:struct:LHS_assign::LHS_assign	file:
previous	src/lua/src/ldo.c	/^  struct lua_longjmp *previous;$/;"	m	struct:lua_longjmp	typeref:struct:lua_longjmp::lua_longjmp	file:
previous	src/lua/src/lparser.c	/^  struct BlockCnt *previous;  \/* chain *\/$/;"	m	struct:BlockCnt	typeref:struct:BlockCnt::BlockCnt	file:
primaryexp	src/lua/src/lparser.c	/^static void primaryexp (LexState *ls, expdesc *v) {$/;"	f	file:
print_usage	src/lua/src/lua.c	/^static void print_usage (const char *badoption) {$/;"	f	file:
print_version	src/lua/src/lua.c	/^static void print_version (void) {$/;"	f	file:
printobj	src/lua/src/ltests.c	/^static void printobj (global_State *g, GCObject *o) {$/;"	f	file:
priority	src/lua/src/lparser.c	/^} priority[] = {  \/* ORDER OPR *\/$/;"	v	typeref:struct:__anon2	file:
progname	src/lua/src/lua.c	/^static const char *progname = LUA_PROGNAME;$/;"	v	file:
prompt	src/lued.c	/^int prompt(char* question, char* response, size_t size)$/;"	f
propagateall	src/lua/src/lgc.c	/^static void propagateall (global_State *g) {$/;"	f	file:
propagatelist	src/lua/src/lgc.c	/^static void propagatelist (global_State *g, GCObject *l) {$/;"	f	file:
propagatemark	src/lua/src/lgc.c	/^static void propagatemark (global_State *g) {$/;"	f	file:
push_captures	src/lua/src/lstrlib.c	/^static int push_captures (MatchState *ms, const char *s, const char *e) {$/;"	f	file:
push_onecapture	src/lua/src/lstrlib.c	/^static void push_onecapture (MatchState *ms, int i, const char *s,$/;"	f	file:
push_undo	src/lued.c	/^static void push_undo(carr_t* all_sessions, char cmd, uint32_t row, uint32_t col,$/;"	f	file:
pushclosure	src/lua/src/lvm.c	/^static void pushclosure (lua_State *L, Proto *p, UpVal **encup, StkId base,$/;"	f	file:
pushcode	src/lua/src/ltests.c	/^static void pushcode (lua_State *L, int code) {$/;"	f	file:
pusherror	src/lua/src/loadlib.c	/^static void pusherror (lua_State *L) {$/;"	f	file:
pushfuncname	src/lua/src/lauxlib.c	/^static void pushfuncname (lua_State *L, lua_Debug *ar) {$/;"	f	file:
pushglobalfuncname	src/lua/src/lauxlib.c	/^static int pushglobalfuncname (lua_State *L, lua_Debug *ar) {$/;"	f	file:
pushline	src/lua/src/lua.c	/^static int pushline (lua_State *L, int firstline) {$/;"	f	file:
pushnexttemplate	src/lua/src/loadlib.c	/^static const char *pushnexttemplate (lua_State *L, const char *path) {$/;"	f	file:
pushobject	src/lua/src/ltests.c	/^static void pushobject (lua_State *L, const TValue *o) {$/;"	f	file:
pushstr	src/lua/src/lobject.c	/^static void pushstr (lua_State *L, const char *str, size_t l) {$/;"	f	file:
pushuserdata	src/lua/src/ltests.c	/^static int pushuserdata (lua_State *L) {$/;"	f	file:
raw_off	src/carr/src/carr_readline.c	/^void raw_off() { set_flag(1, ICANON | ECHO); }$/;"	f
raw_on	src/carr/src/carr_readline.c	/^void raw_on() {$/;"	f
read_all	src/lua/src/liolib.c	/^static void read_all (lua_State *L, FILE *f) {$/;"	f	file:
read_chars	src/lua/src/liolib.c	/^static int read_chars (lua_State *L, FILE *f, size_t n) {$/;"	f	file:
read_line	src/lua/src/liolib.c	/^static int read_line (lua_State *L, FILE *f, int chop) {$/;"	f	file:
read_long_string	src/lua/src/llex.c	/^static void read_long_string (LexState *ls, SemInfo *seminfo, int sep) {$/;"	f	file:
read_number	src/lua/src/liolib.c	/^static int read_number (lua_State *L, FILE *f) {$/;"	f	file:
read_numeral	src/lua/src/llex.c	/^static void read_numeral (LexState *ls, SemInfo *seminfo) {$/;"	f	file:
read_string	src/lua/src/llex.c	/^static void read_string (LexState *ls, int del, SemInfo *seminfo) {$/;"	f	file:
readable	src/lua/src/loadlib.c	/^static int readable (const char *filename) {$/;"	f	file:
readdecesc	src/lua/src/llex.c	/^static int readdecesc (LexState *ls) {$/;"	f	file:
readhexa	src/lua/src/lobject.c	/^static lua_Number readhexa (const char **s, lua_Number r, int *count) {$/;"	f	file:
readhexaesc	src/lua/src/llex.c	/^static int readhexaesc (LexState *ls) {$/;"	f	file:
reallymarkobject	src/lua/src/lgc.c	/^static void reallymarkobject (global_State *g, GCObject *o) {$/;"	f	file:
recfield	src/lua/src/lparser.c	/^static void recfield (LexState *ls, struct ConsControl *cc) {$/;"	f	file:
recover	src/lua/src/ldo.c	/^static int recover (lua_State *L, int status) {$/;"	f	file:
redo	src/lued.c	/^static void redo(carr_t* all_sessions) {$/;"	f	file:
registerlocalvar	src/lua/src/lparser.c	/^static int registerlocalvar (LexState *ls, TString *varname) {$/;"	f	file:
rehash	src/lua/src/ltable.c	/^static void rehash (lua_State *L, Table *t, const TValue *ek) {$/;"	f	file:
remarkupvals	src/lua/src/lgc.c	/^static void remarkupvals (global_State *g) {$/;"	f	file:
removeentry	src/lua/src/lgc.c	/^static void removeentry (Node *n) {$/;"	f	file:
removevalues	src/lua/src/lcode.c	/^static void removevalues (FuncState *fs, int list) {$/;"	f	file:
removevars	src/lua/src/lparser.c	/^static void removevars (FuncState *fs, int tolevel) {$/;"	f	file:
reopen	src/lued.c	/^lued_t* reopen(carr_t* all_sessions)$/;"	f
repeatables	src/carr/src/carr_readline_lua.c	/^char repeatables[LUA_MAXINPUT] = ",ctrl_F,";$/;"	v
repeatstat	src/lua/src/lparser.c	/^static void repeatstat (LexState *ls, int line) {$/;"	f	file:
report	src/lua/src/lua.c	/^static int report (lua_State *L, int status) {$/;"	f	file:
restartcollection	src/lua/src/lgc.c	/^static void restartcollection (global_State *g) {$/;"	f	file:
resume	src/lua/src/ldo.c	/^static void resume (lua_State *L, void *ud) {$/;"	f	file:
resume_error	src/lua/src/ldo.c	/^static l_noret resume_error (lua_State *L, const char *msg, StkId firstArg) {$/;"	f	file:
retraversegrays	src/lua/src/lgc.c	/^static void retraversegrays (global_State *g) {$/;"	f	file:
retstat	src/lua/src/lparser.c	/^static void retstat (LexState *ls) {$/;"	f	file:
right	src/lua/src/lparser.c	/^  lu_byte right; \/* right priority *\/$/;"	m	struct:__anon2	file:
runC	src/lua/src/ltests.c	/^static int runC (lua_State *L, lua_State *L1, const char *pc) {$/;"	f	file:
runargs	src/lua/src/lua.c	/^static int runargs (lua_State *L, char **argv, int n) {$/;"	f	file:
s	src/lua/src/lauxlib.c	/^  const char *s;$/;"	m	struct:LoadS	file:
s2d	src/lua/src/ltests.c	/^static int s2d (lua_State *L) {$/;"	f	file:
save	src/lua/src/llex.c	/^static void save (LexState *ls, int c) {$/;"	f	file:
save_and_next	src/lua/src/llex.c	46;"	d	file:
save_session	src/lued.c	/^int save_session(lued_t* session_p)$/;"	f
scanformat	src/lua/src/lstrlib.c	/^static const char *scanformat (lua_State *L, const char *strfrmt, char *form) {$/;"	f	file:
searcher_C	src/lua/src/loadlib.c	/^static int searcher_C (lua_State *L) {$/;"	f	file:
searcher_Croot	src/lua/src/loadlib.c	/^static int searcher_Croot (lua_State *L) {$/;"	f	file:
searcher_Lua	src/lua/src/loadlib.c	/^static int searcher_Lua (lua_State *L) {$/;"	f	file:
searcher_preload	src/lua/src/loadlib.c	/^static int searcher_preload (lua_State *L) {$/;"	f	file:
searchpath	src/lua/src/loadlib.c	/^static const char *searchpath (lua_State *L, const char *name,$/;"	f	file:
searchupvalue	src/lua/src/lparser.c	/^static int searchupvalue (FuncState *fs, TString *name) {$/;"	f	file:
searchvar	src/lua/src/lparser.c	/^static int searchvar (FuncState *fs, TString *n) {$/;"	f	file:
semerror	src/lua/src/lparser.c	/^static l_noret semerror (LexState *ls, const char *msg) {$/;"	f	file:
separatetobefnz	src/lua/src/lgc.c	/^static void separatetobefnz (lua_State *L, int all) {$/;"	f	file:
set2	src/lua/src/ltablib.c	/^static void set2 (lua_State *L, int i, int j) {$/;"	f	file:
set_cur_pos	src/lued.c	/^static int set_cur_pos(uint32_t row, uint32_t col) {$/;"	f	file:
set_cursor_position	src/lued.c	/^int set_cursor_position(lued_t* l, uint32_t r, uint32_t c)$/;"	f
set_env	src/lua/src/loadlib.c	/^static void set_env (lua_State *L) {$/;"	f	file:
set_fileid	src/lued.c	/^static void set_fileid(uint32_t id) {$/;"	f	file:
set_filename	src/lued.c	/^void set_filename(lued_t* session_p, const char* filename) {$/;"	f
set_flag	src/carr/src/carr_readline.c	/^static void set_flag(int tru, tcflag_t FLAG)$/;"	f	file:
set_mark	src/lued.c	/^static void set_mark(carr_t* all_sessions, const char* name) {$/;"	f	file:
set_page_offset	src/lued.c	/^static void set_page_offset(carr_t* all_sessions, uint32_t delta_row, uint32_t delta_col) {$/;"	f	file:
set_page_pos	src/lued.c	/^static void set_page_pos(uint32_t row, uint32_t col) {$/;"	f	file:
set_paste	src/lued.c	/^static const char* set_paste(carr_t* all_sessions, const char* str) {$/;"	f	file:
set_recenter_screen	lua_src/base/center_page.lua	/^function set_recenter_screen(dd)$/;"	f
set_sel_end	src/lued.c	/^static int set_sel_end(int update_state) {$/;"	f	file:
set_sel_off	src/lued.c	/^static void set_sel_off(carr_t* all_sessions) {$/;"	f	file:
set_sel_start	src/lued.c	/^int set_sel_start(int only_if_off) {$/;"	f
set_show_line_numbers	src/lued.c	/^static void set_show_line_numbers(lued_t* session_p, uint32_t val) {$/;"	f	file:
setarrayvector	src/lua/src/ltable.c	/^static void setarrayvector (lua_State *L, Table *t, int size) {$/;"	f	file:
setboolfield	src/lua/src/loslib.c	/^static void setboolfield (lua_State *L, const char *key, int value) {$/;"	f	file:
seterrorobj	src/lua/src/ldo.c	/^static void seterrorobj (lua_State *L, int errcode, StkId oldtop) {$/;"	f	file:
setfield	src/lua/src/loslib.c	/^static void setfield (lua_State *L, const char *key, int value) {$/;"	f	file:
sethook	src/lua/src/ltests.c	/^static int sethook (lua_State *L) {$/;"	f	file:
sethookaux	src/lua/src/ltests.c	/^static void sethookaux (lua_State *L, int mask, int count, const char *scpt) {$/;"	f	file:
setnameval	src/lua/src/ltests.c	/^static void setnameval (lua_State *L, const char *name, int val) {$/;"	f	file:
setnodevector	src/lua/src/ltable.c	/^static void setnodevector (lua_State *L, Table *t, int size) {$/;"	f	file:
setpath	src/lua/src/loadlib.c	/^static void setpath (lua_State *L, const char *fieldname, const char *envname1,$/;"	f	file:
setpause	src/lua/src/lgc.c	/^static void setpause (global_State *g, l_mem estimate) {$/;"	f	file:
setprogdir	src/lua/src/loadlib.c	/^static void setprogdir (lua_State *L) {$/;"	f	file:
setprogdir	src/lua/src/loadlib.c	105;"	d	file:
setprogdir	src/lua/src/loadlib.c	158;"	d	file:
settabsb	src/lua/src/ldblib.c	/^static void settabsb (lua_State *L, const char *i, int v) {$/;"	f	file:
settabsi	src/lua/src/ldblib.c	/^static void settabsi (lua_State *L, const char *i, int v) {$/;"	f	file:
settabss	src/lua/src/ldblib.c	/^static void settabss (lua_State *L, const char *i, const char *v) {$/;"	f	file:
settrick	src/lua/src/ltests.c	/^static int settrick (lua_State *L) {$/;"	f	file:
sig_cont_handler	src/carr/src/carr_readline.c	/^void sig_cont_handler() {$/;"	f
simpleexp	src/lua/src/lparser.c	/^static void simpleexp (LexState *ls, expdesc *v) {$/;"	f	file:
singlematch	src/lua/src/lstrlib.c	/^static int singlematch (MatchState *ms, const char *s, const char *p,$/;"	f	file:
singlestep	src/lua/src/lgc.c	/^static lu_mem singlestep (lua_State *L) {$/;"	f	file:
singlevar	src/lua/src/lparser.c	/^static void singlevar (LexState *ls, expdesc *var) {$/;"	f	file:
singlevaraux	src/lua/src/lparser.c	/^static int singlevaraux (FuncState *fs, TString *n, expdesc *var, int base) {$/;"	f	file:
size	src/lua/src/lauxlib.c	/^  size_t size;$/;"	m	struct:LoadS	file:
size	src/lua/src/ltests.c	/^    size_t size;$/;"	m	struct:Header::__anon4	file:
skip	src/lua/src/ltests.c	/^static void skip (const char **pc) {$/;"	f	file:
skipBOM	src/lua/src/lauxlib.c	/^static int skipBOM (LoadF *lf) {$/;"	f	file:
skip_sep	src/lua/src/llex.c	/^static int skip_sep (LexState *ls) {$/;"	f	file:
skipcomment	src/lua/src/lauxlib.c	/^static int skipcomment (LoadF *lf, int *cp) {$/;"	f	file:
skipnoopstat	src/lua/src/lparser.c	/^static void skipnoopstat (LexState *ls) {$/;"	f	file:
slurp_file_into_array	lua_src/bindings/create_doc.lua	/^function slurp_file_into_array(filename)$/;"	f
sort	src/lua/src/ltablib.c	/^static int sort (lua_State *L) {$/;"	f	file:
sort_comp	src/lua/src/ltablib.c	/^static int sort_comp (lua_State *L, int a, int b) {$/;"	f	file:
special_char	src/carr/src/carr_readline_lua.c	/^static void special_char(carr_t* str) {$/;"	f	file:
split_lines	src/lued.c	/^static carr_t* split_lines(const char* str, const char* delim) {$/;"	f	file:
src_end	src/lua/src/lstrlib.c	/^  const char *src_end;  \/* end ('\\0') of source string *\/$/;"	m	struct:MatchState	file:
src_init	src/lua/src/lstrlib.c	/^  const char *src_init;  \/* init of source string *\/$/;"	m	struct:MatchState	file:
stack_init	src/lua/src/lstate.c	/^static void stack_init (lua_State *L1, lua_State *L) {$/;"	f	file:
stackinuse	src/lua/src/ldo.c	/^static int stackinuse (lua_State *L) {$/;"	f	file:
stacklevel	src/lua/src/ltests.c	/^static int stacklevel (lua_State *L) {$/;"	f	file:
start_aa	lua_src/plugins/ascii_art.lua	/^function start_aa(dd)$/;"	f
start_capture	src/lua/src/lstrlib.c	/^static const char *start_capture (MatchState *ms, const char *s,$/;"	f	file:
statement	src/lua/src/lparser.c	/^static void statement (LexState *ls) {$/;"	f	file:
statlist	src/lua/src/lparser.c	/^static void statlist (LexState *ls) {$/;"	f	file:
status	src/lua/src/ldo.c	/^  volatile int status;  \/* error code *\/$/;"	m	struct:lua_longjmp	file:
status	src/lua/src/ldump.c	/^ int status;$/;"	m	struct:__anon1	file:
stop_aa	lua_src/plugins/ascii_art.lua	/^function stop_aa()$/;"	f
str_byte	src/lua/src/lstrlib.c	/^static int str_byte (lua_State *L) {$/;"	f	file:
str_char	src/lua/src/lstrlib.c	/^static int str_char (lua_State *L) {$/;"	f	file:
str_checkname	src/lua/src/lparser.c	/^static TString *str_checkname (LexState *ls) {$/;"	f	file:
str_dump	src/lua/src/lstrlib.c	/^static int str_dump (lua_State *L) {$/;"	f	file:
str_find	src/lua/src/lstrlib.c	/^static int str_find (lua_State *L) {$/;"	f	file:
str_find_aux	src/lua/src/lstrlib.c	/^static int str_find_aux (lua_State *L, int find) {$/;"	f	file:
str_format	src/lua/src/lstrlib.c	/^static int str_format (lua_State *L) {$/;"	f	file:
str_gsub	src/lua/src/lstrlib.c	/^static int str_gsub (lua_State *L) {$/;"	f	file:
str_len	src/lua/src/lstrlib.c	/^static int str_len (lua_State *L) {$/;"	f	file:
str_lower	src/lua/src/lstrlib.c	/^static int str_lower (lua_State *L) {$/;"	f	file:
str_match	src/lua/src/lstrlib.c	/^static int str_match (lua_State *L) {$/;"	f	file:
str_rep	src/lua/src/lstrlib.c	/^static int str_rep (lua_State *L) {$/;"	f	file:
str_reverse	src/lua/src/lstrlib.c	/^static int str_reverse (lua_State *L) {$/;"	f	file:
str_sub	src/lua/src/lstrlib.c	/^static int str_sub (lua_State *L) {$/;"	f	file:
str_upper	src/lua/src/lstrlib.c	/^static int str_upper (lua_State *L) {$/;"	f	file:
string_query	src/lua/src/ltests.c	/^static int string_query (lua_State *L) {$/;"	f	file:
strip	src/lua/src/ldump.c	/^ int strip;$/;"	m	struct:__anon1	file:
strlib	src/lua/src/lstrlib.c	/^static const luaL_Reg strlib[] = {$/;"	v	file:
subexpr	src/lua/src/lparser.c	/^static BinOpr subexpr (LexState *ls, expdesc *v, int limit) {$/;"	f	file:
subst	src/carr/src/carr_readline_lua.c	/^static size_t subst(char* from, const char* to, carr_t* c_str) {$/;"	f	file:
suffixedexp	src/lua/src/lparser.c	/^static void suffixedexp (LexState *ls, expdesc *v) {$/;"	f	file:
swapextra	src/lua/src/ldebug.c	/^static void swapextra (lua_State *L) {$/;"	f	file:
sweeplist	src/lua/src/lgc.c	/^static GCObject **sweeplist (lua_State *L, GCObject **p, lu_mem count) {$/;"	f	file:
sweepphases	src/lua/src/lgc.c	924;"	d	file:
sweepthread	src/lua/src/lgc.c	/^static void sweepthread (lua_State *L, lua_State *L1) {$/;"	f	file:
sweeptolive	src/lua/src/lgc.c	/^static GCObject **sweeptolive (lua_State *L, GCObject **p, int *n) {$/;"	f	file:
sweepwholelist	src/lua/src/lgc.c	690;"	d	file:
syslib	src/lua/src/loslib.c	/^static const luaL_Reg syslib[] = {$/;"	v	file:
t	src/lua/src/lparser.c	/^  expdesc *t;  \/* table descriptor *\/$/;"	m	struct:ConsControl	file:
tab_funcs	src/lua/src/ltablib.c	/^static const luaL_Reg tab_funcs[] = {$/;"	v	file:
tab_size	src/lued.c	/^size_t tab_size(const char* str, size_t offset) {$/;"	f
table_query	src/lua/src/ltests.c	/^static int table_query (lua_State *L) {$/;"	f	file:
tag_error	src/lua/src/lauxlib.c	/^static void tag_error (lua_State *L, int narg, int tag) {$/;"	f	file:
tconcat	src/lua/src/ltablib.c	/^static int tconcat (lua_State *L) {$/;"	f	file:
testC	src/lua/src/ltests.c	/^static int testC (lua_State *L) {$/;"	f	file:
test_eof	src/lua/src/liolib.c	/^static int test_eof (lua_State *L, FILE *f) {$/;"	f	file:
test_then_block	src/lua/src/lparser.c	/^static void test_then_block (LexState *ls, int *escapelist) {$/;"	f	file:
testnext	src/lua/src/lparser.c	/^static int testnext (LexState *ls, int c) {$/;"	f	file:
testobjref	src/lua/src/ltests.c	/^static int testobjref (global_State *g, GCObject *f, GCObject *t) {$/;"	f	file:
testobjref1	src/lua/src/ltests.c	/^static int testobjref1 (global_State *g, GCObject *f, GCObject *t) {$/;"	f	file:
tests_funcs	src/lua/src/ltests.c	/^static const struct luaL_Reg tests_funcs[] = {$/;"	v	typeref:struct:luaL_Reg	file:
tinsert	src/lua/src/ltablib.c	/^static int tinsert (lua_State *L) {$/;"	f	file:
tofile	src/lua/src/liolib.c	/^static FILE *tofile (lua_State *L) {$/;"	f	file:
tolstream	src/lua/src/liolib.c	125;"	d	file:
tostore	src/lua/src/lparser.c	/^  int tostore;  \/* number of array elements pending to be stored *\/$/;"	m	struct:ConsControl	file:
tpanic	src/lua/src/ltests.c	/^static int tpanic (lua_State *L) {$/;"	f	file:
traceback	src/lua/src/lua.c	/^static int traceback (lua_State *L) {$/;"	f	file:
traceexec	src/lua/src/lvm.c	/^static void traceexec (lua_State *L) {$/;"	f	file:
traverseCclosure	src/lua/src/lgc.c	/^static lu_mem traverseCclosure (global_State *g, CClosure *cl) {$/;"	f	file:
traverseLclosure	src/lua/src/lgc.c	/^static lu_mem traverseLclosure (global_State *g, LClosure *cl) {$/;"	f	file:
traverseephemeron	src/lua/src/lgc.c	/^static int traverseephemeron (global_State *g, Table *h) {$/;"	f	file:
traverseproto	src/lua/src/lgc.c	/^static int traverseproto (global_State *g, Proto *f) {$/;"	f	file:
traversestack	src/lua/src/lgc.c	/^static lu_mem traversestack (global_State *g, lua_State *th) {$/;"	f	file:
traversestrongtable	src/lua/src/lgc.c	/^static void traversestrongtable (global_State *g, Table *h) {$/;"	f	file:
traversetable	src/lua/src/lgc.c	/^static lu_mem traversetable (global_State *g, Table *h) {$/;"	f	file:
traverseweakvalue	src/lua/src/lgc.c	/^static void traverseweakvalue (global_State *g, Table *h) {$/;"	f	file:
treatstackoption	src/lua/src/ldblib.c	/^static void treatstackoption (lua_State *L, lua_State *L1, const char *fname) {$/;"	f	file:
tref	src/lua/src/ltests.c	/^static int tref (lua_State *L) {$/;"	f	file:
tremove	src/lua/src/ltablib.c	/^static int tremove (lua_State *L) {$/;"	f	file:
trim	src/lua/src/lbitlib.c	25;"	d	file:
trydecpoint	src/lua/src/llex.c	/^static void trydecpoint (LexState *ls, SemInfo *seminfo) {$/;"	f	file:
tryfuncTM	src/lua/src/ldo.c	/^static StkId tryfuncTM (lua_State *L, StkId func) {$/;"	f	file:
txtToken	src/lua/src/llex.c	/^static const char *txtToken (LexState *ls, int token) {$/;"	f	file:
type	src/lua/src/ltests.c	/^    int type;$/;"	m	struct:Header::__anon4	file:
typeerror	src/lua/src/lauxlib.c	/^static int typeerror (lua_State *L, int narg, const char *tname) {$/;"	f	file:
uchar	src/lua/src/lstrlib.c	33;"	d	file:
udata2finalize	src/lua/src/lgc.c	/^static GCObject *udata2finalize (global_State *g) {$/;"	f	file:
udatatypename	src/lua/src/ltm.c	/^static const char udatatypename[] = "userdata";$/;"	v	file:
udataval	src/lua/src/ltests.c	/^static int udataval (lua_State *L) {$/;"	f	file:
unbound_search	src/lua/src/ltable.c	/^static int unbound_search (Table *t, unsigned int j) {$/;"	f	file:
undefgoto	src/lua/src/lparser.c	/^static l_noret undefgoto (LexState *ls, Labeldesc *gt) {$/;"	f	file:
undo	src/lued.c	/^static void undo(carr_t* all_sessions) {$/;"	f	file:
unlinkupval	src/lua/src/lfunc.c	/^static void unlinkupval (UpVal *uv) {$/;"	f	file:
unmakemask	src/lua/src/ldblib.c	/^static char *unmakemask (int mask, char *smask) {$/;"	f	file:
unpack	src/lua/src/ltablib.c	/^static int unpack (lua_State *L) {$/;"	f	file:
unref	src/lua/src/ltests.c	/^static int unref (lua_State *L) {$/;"	f	file:
unroll	src/lua/src/ldo.c	/^static void unroll (lua_State *L, void *ud) {$/;"	f	file:
upval	src/lua/src/lparser.c	/^  lu_byte upval;  \/* true if some variable in the block is an upvalue *\/$/;"	m	struct:BlockCnt	file:
upvalname	src/lua/src/ldebug.c	/^static const char *upvalname (Proto *p, int uv) {$/;"	f	file:
upvalue	src/lua/src/ltests.c	/^static int upvalue (lua_State *L) {$/;"	f	file:
v	src/lua/src/lparser.c	/^  expdesc v;  \/* last list item read *\/$/;"	m	struct:ConsControl	file:
v	src/lua/src/lparser.c	/^  expdesc v;  \/* variable (global, local, upvalue, or indexed) *\/$/;"	m	struct:LHS_assign	file:
vmcase	src/lua/src/lvm.c	531;"	d	file:
vmcasenb	src/lua/src/lvm.c	532;"	d	file:
vmdispatch	src/lua/src/lvm.c	530;"	d	file:
walter	lua_src/plugins/ascii_art.lua	/^function walter()$/;"	f
walter2	lua_src/plugins/ascii_art.lua	/^function walter2(str,n)$/;"	f
whilestat	src/lua/src/lparser.c	/^static void whilestat (LexState *ls, int line) {$/;"	f	file:
white2gray	src/lua/src/lgc.c	62;"	d	file:
writer	src/lua/src/ldump.c	/^ lua_Writer writer;$/;"	m	struct:__anon1	file:
writer	src/lua/src/lstrlib.c	/^static int writer (lua_State *L, const void* b, size_t size, void* B) {$/;"	f	file:
yindex	src/lua/src/lparser.c	/^static void yindex (LexState *ls, expdesc *v) {$/;"	f	file:
z	src/lua/src/ldo.c	/^  ZIO *z;$/;"	m	struct:SParser	file:
